{"result": {"folders": ["other", "lab0"], "nr": 1165, "data": {"embed_links": []}, "created": "2018-03-17T09:57:13Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "ivqnw3s6ZmJ", "data": "jev77lowq5w1xr", "type": "create", "when": "2018-03-17T09:57:14Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "to": "jev77loof8e1xq", "type": "followup", "when": "2018-03-17T15:18:32Z"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "to": "jev77loof8e1xq", "type": "followup", "when": "2018-03-18T03:04:12Z"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "data": "jh4jghd4gmv29", "type": "update", "when": "2018-05-13T08:09:23Z"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "data": "jh4ji9myf3ylz", "type": "update", "when": "2018-05-13T08:10:47Z"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "data": "jh4jjq2vqk410n", "type": "update", "when": "2018-05-13T08:11:55Z"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "data": "jlsz2m0agsl7ax", "type": "update", "when": "2018-09-08T05:11:48Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "ivqnw3s6ZmJ", "subject": "一个基于 Docker 的全平台 ucore 环境", "created": "2018-09-08T05:11:48Z", "content": "<p>在之前&#xff0c;我基于 docker 做了一个全平台的 ucore 环境&#xff0c;只要在对应平台安装了 docker&#xff0c;便可以很方便的在 docker 中建立一个 ucore 环境。具体的代码在这里&#xff1a;<a href=\"https://github.com/weixiao-huang/silver-spoon\" target=\"_blank\">https://github.com/weixiao-huang/silver-spoon</a> 。我也在其中写了对应平台的构建文档&#xff0c;在<a href=\"https://github.com/weixiao-huang/silver-spoon/tree/master/docs\" target=\"_blank\">这里</a>。这个文档中有说明如何在 mac、windows、Linux 下构建基于 docker 的 ucore 开发环境。</p>\n<p>大家利用这个版本仓库构建成功并成功在 docker 中的 ./src 目录下运行 make qemu 之后&#xff0c;便可以将其用于 ucore 中&#xff0c;具体使用方法是<strong>直接将库根目录下的 Dockerfile 和 Makefile 拷贝到 ucore 的根目录</strong>&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-80663bb9e6f38cad.png\" alt=\"\" /></p>\n<p></p>\n<p>其中 config 文件中的 sources.list 表示了 ubuntu:16.04 的源&#xff0c;你可以换成任意你想用的源&#xff0c;默认用的清华 tuna 源。</p>\n<p>然后即可以在根目录执行 make init 启动并初始化基于 ucore 的 docker 容器&#xff08;如果之前有运行的相关 docker&#xff0c;请用 make stop 和 make rm 删除之前的容器&#xff09;&#xff0c;然后利用 make 进入容器进行操作&#xff0c;如下&#xff1a;</p>\n<p><img src=\"/img/1165-4569b4377529631.png\" alt=\"\" /></p>\n<p></p>\n<p>已知bug:</p>\n<p>现在已知在 mac 系统下&#xff0c;利用 xquartz 启动的 qemu 会有按键错位的问题&#xff0c;例如输入按键 j&#xff0c;qemu 会显示 1。其余没有发现其他的 bug</p>\n<p></p>\n<p>欢迎大家提出问题&#xff0c;完善版本库。</p>\n<p>PS. 之后可能会考虑不用 X 转发的办法实现 qemu 的图形化显示&#xff0c;可能会考虑用 vnc 的办法。</p>"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "subject": "一个基于 Docker 的全平台 ucore 环境", "created": "2018-05-13T08:11:55Z", "content": "<p>在之前&#xff0c;我基于 docker 做了一个全平台的 ucore 环境&#xff0c;只要在对应平台安装了 docker&#xff0c;便可以很方便的在 docker 中建立一个 ucore 环境。具体的代码在这里&#xff1a;<a href=\"https://github.com/weixiao-huang/silver-spoon\" target=\"_blank\">https://github.com/weixiao-huang/silver-spoon</a> 。我也在其中写了对应平台的构建文档&#xff0c;在<a href=\"https://github.com/weixiao-huang/silver-spoon/tree/master/docs\" target=\"_blank\">这里</a>。这个文档中有说明如何在 mac、windows、Linux 下构建基于 docker 的 ucore 开发环境。</p>\n<p>大家利用这个版本仓库构建成功并成功在 docker 中的 ./src 目录下运行 make qemu 之后&#xff0c;便可以将其用于 ucore 中&#xff0c;具体使用方法是<strong>直接将库根目录下的 Dockerfile, Makefile 和 config 拷贝到 ucore 的根目录</strong>&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-7a8f1a534b205ada.png\" alt=\"\" /></p>\n<p></p>\n<p>其中 config 文件中的 sources.list 表示了 ubuntu:16.04 的源&#xff0c;你可以换成任意你想用的源&#xff0c;默认用的清华 tuna 源。</p>\n<p>然后即可以在根目录执行 make init 启动并初始化基于 ucore 的 docker 容器&#xff08;如果之前有运行的相关 docker&#xff0c;请用 make stop 和 make rm 删除之前的容器&#xff09;&#xff0c;然后利用 make 进入容器进行操作&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-85bbb7b53f39d311.png\" alt=\"\" /></p>\n<p></p>\n<p>已知bug:</p>\n<p>现在已知在 mac 系统下&#xff0c;利用 xquartz 启动的 qemu 会有按键错位的问题&#xff0c;例如输入按键 j&#xff0c;qemu 会显示 1。其余没有发现其他的 bug</p>\n<p></p>\n<p>欢迎大家提出问题&#xff0c;完善版本库。</p>\n<p>PS. 之后可能会考虑不用 X 转发的办法实现 qemu 的图形化显示&#xff0c;可能会考虑用 vnc 的办法。</p>"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "subject": "一个基于 Docker 的全平台 ucore 环境", "created": "2018-05-13T08:10:47Z", "content": "<p>在之前&#xff0c;我基于 docker 做了一个全平台的 ucore 环境&#xff0c;只要在对应平台安装了 docker&#xff0c;便可以很方便的在 docker 中建立一个 ucore 环境。具体的代码在这里&#xff1a;<a href=\"https://github.com/weixiao-huang/silver-spoon\" target=\"_blank\">https://github.com/weixiao-huang/silver-spoon</a> 。我也在其中写了对应平台的构建文档&#xff0c;在<a href=\"https://github.com/weixiao-huang/silver-spoon/tree/master/docs\" target=\"_blank\">这里</a>。这个文档中有说明如何在 mac、windows、Linux 下构建基于 docker 的 ucore 开发环境。</p>\n<p>大家利用这个版本仓库构建成功并成功在 docker 中的 ./src 目录下运行 make qemu 之后&#xff0c;便可以将其用于 ucore 中&#xff0c;具体使用方法是<strong>直接将库根目录下的 Dockerfile, Makefile 和 config 拷贝到 ucore 的根目录</strong>&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-7a8f1a534b205ada.png\" alt=\"\" width=\"647\" height=\"78\" /></p>\n<p></p>\n<p>其中 config 文件中的 sources.list 表示了 ubuntu:16.04 的源&#xff0c;你可以换成任意你想用的源&#xff0c;默认用的清华 tuna 源。</p>\n<p>然后即可以在根目录执行 make init 启动并初始化基于 ucore 的 docker 容器&#xff08;如果之前有运行的相关 docker&#xff0c;请用 make stop 和 make rm 删除之前的容器&#xff09;&#xff0c;然后利用 make 进入容器进行操作&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-85bbb7b53f39d311.png\" alt=\"\" /></p>\n<p></p>\n<p>已知bug:</p>\n<p>现在已知在 mac 系统下&#xff0c;利用 xquartz 启动的 qemu 会有按键错位的问题&#xff0c;例如输入按键 j&#xff0c;qemu 会显示 1。其余没有发现其他的 bug</p>\n<p></p>\n<p>欢迎大家提出问题&#xff0c;完善版本库。</p>\n<p>PS. 之后可能会考虑不用 X 转发的办法实现 qemu 的图形化显示&#xff0c;可能会考虑用 vnc 的办法。</p>"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "subject": "一个基于 Docker 的全平台 ucore 环境", "created": "2018-05-13T08:09:23Z", "content": "<p>在之前&#xff0c;我基于 docker 做了一个全平台的 ucore 环境&#xff0c;只要在对应平台安装了 docker&#xff0c;便可以很方便的在 docker 中建立一个 ucore 环境。具体的代码在这里&#xff1a;<a href=\"https://github.com/weixiao-huang/silver-spoon\" target=\"_blank\">https://github.com/weixiao-huang/silver-spoon</a> 。我也在其中写了对应平台的构建文档&#xff0c;在<a href=\"https://github.com/weixiao-huang/silver-spoon/tree/master/docs\" target=\"_blank\">这里</a>。这个文档中有说明如何在 mac、windows、Linux 下构建基于 docker 的 ucore 开发环境。</p>\n<p>大家利用这个版本仓库构建成功并成功在 docker 中的 ./src 目录下运行 make qemu 之后&#xff0c;便可以将其用于 ucore 中&#xff0c;具体使用方法是直接将库根目录下的 Dockerfile, Makefile 和 config 拷贝到 ucore 的根目录&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-7a8f1a534b205ada.png\" alt=\"\" width=\"647\" height=\"78\" /></p>\n<p></p>\n<p>其中 config 文件中的 sources.list 表示了 ubuntu:16.04 的源&#xff0c;你可以换成任意你想用的源&#xff0c;默认用的清华 tuna 源。</p>\n<p>然后即可以在根目录执行 make init 启动并初始化基于 ucore 的 docker 容器&#xff08;如果之前有运行的相关 docker&#xff0c;请用 make stop 和 make rm 删除之前的容器&#xff09;&#xff0c;然后利用 make 进入容器进行操作&#xff0c;如下&#xff1a;</p>\n<p></p>\n<p><img src=\"/img/1165-85bbb7b53f39d311.png\" alt=\"\" /></p>\n<p></p>\n<p>已知bug:</p>\n<p>现在已知在 mac 系统下&#xff0c;利用 xquartz 启动的 qemu 会有按键错位的问题&#xff0c;例如输入按键 j&#xff0c;qemu 会显示 1。其余没有发现其他的 bug</p>\n<p></p>\n<p>欢迎大家提出问题&#xff0c;完善版本库。</p>\n<p>PS. 之后可能会考虑不用 X 转发的办法实现 qemu 的图形化显示&#xff0c;可能会考虑用 vnc 的办法。</p>"}, {"anon": "no", "uid": "ivqnw3s6ZmJ", "subject": "一个基于 Docker 的全平台 ucore 环境", "created": "2018-03-17T09:57:14Z", "content": "<p>在之前&#xff0c;我基于 docker 做了一个全平台的 ucore 环境&#xff0c;只要在对应平台安装了 docker&#xff0c;便可以很方便的在 docker 中建立一个 ucore 环境。具体的代码在这里&#xff1a;<a href=\"https://github.com/weixiao-huang/silver-spoon\" target=\"_blank\">https://github.com/weixiao-huang/silver-spoon</a> 。我也在其中写了对应平台的构建文档&#xff0c;在<a href=\"https://github.com/weixiao-huang/silver-spoon/tree/master/docs\" target=\"_blank\">这里</a>。这个文档中有说明如何在 mac、windows、Linux 下构建基于 docker 的 ucore 开发环境。</p>\n<p>大家利用这个版本仓库构建成功并成功在 docker 中的 ./src 目录下运行 make qemu 之后&#xff0c;便可以将其用于 ucore 中&#xff0c;具体使用方法是直接将库根目录下的 Dockerfile 和 Makefile 拷贝到 ucore 的根目录&#xff0c;如下&#xff1a;</p>\n<p><img src=\"/img/1165-d166df68a47e0d3c.png\" alt=\"\" /></p>\n<p>然后既可以在根目录执行 make init 启动并初始化基于 ucore 的 docker 容器&#xff08;如果之前有运行的相关 docker&#xff0c;请用 make stop 和 make rm 删除之前的容器&#xff09;&#xff0c;然后利用 make 进入容器进行操作&#xff0c;如下&#xff1a;</p>\n<p><img src=\"/img/1165-85bbb7b53f39d311.png\" alt=\"\" /></p>\n<p></p>\n<p>已知bug:</p>\n<p>现在已知在 mac 系统下&#xff0c;利用 xquartz 启动的 qemu 会有按键错位的问题&#xff0c;例如输入按键 j&#xff0c;qemu 会显示 1。其余没有发现其他的 bug</p>\n<p></p>\n<p>欢迎大家提出问题&#xff0c;完善版本库。</p>\n<p>PS. 之后可能会考虑不用 X 转发的办法实现 qemu 的图形化显示&#xff0c;可能会考虑用 vnc 的办法。</p>"}], "type": "note", "tags": ["lab0", "other", "student"], "tag_good": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "student", "name": "孟永康", "endorser": {}, "admin": false, "photo": null, "id": "j9p3tttiDdhN", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "Li Yifan", "endorser": {}, "admin": false, "photo": null, "id": "je2iax2a97765z", "photo_url": null, "published": true, "us": false, "class_sections": ["os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 330, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>这是一个不错的做法。希望大家一起查错和改进&#xff0c;形成一个完善的实验环境。</p>", "created": "2018-03-17T15:18:32Z", "bucket_order": 106, "bucket_name": "Week 3/11 - 3/17", "type": "followup", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jeviot9sss617d", "updated": "2018-03-17T15:18:32Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>很不错&#xff01;</p>\n<p>我把你的网址放到github ucore_os_lab 中了。</p>\n<p></p>\n<p></p>", "created": "2018-03-18T03:04:12Z", "bucket_order": 105, "bucket_name": "Week 3/18 - 3/24", "type": "followup", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jew7wb1i1dx346", "updated": "2018-03-18T03:04:12Z", "config": {}}], "tag_good_arr": ["hdjonbiyfs62ie", "j9p3tttiDdhN", "je2iax2a97765z"], "id": "jev77loof8e1xq", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169284696, "default_anonymity": "no"}, "error": null, "aid": "kyv0kehknzw5cd"}