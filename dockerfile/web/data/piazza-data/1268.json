{"result": {"folders": ["quiz4", "lecture3", "2019"], "nr": 1268, "data": {"embed_links": []}, "created": "2019-03-06T07:36:21Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "full", "data": "jsww1zcdnfa2zf", "type": "create", "when": "2019-03-06T07:36:21Z", "uid_a": "a_0"}, {"anon": "full", "data": "jswwzjm4s8w23e", "to": "jsww1zc9wiy2ze", "type": "s_answer", "when": "2019-03-06T08:02:26Z", "uid_a": "a_0"}, {"anon": "full", "data": "jswx1q9xiop38h", "type": "s_answer_update", "when": "2019-03-06T08:04:08Z", "uid_a": "a_0"}, {"anon": "full", "data": "jswx33pmfdw3z4", "type": "s_answer_update", "when": "2019-03-06T08:05:12Z", "uid_a": "a_0"}, {"anon": "full", "data": "jswx3izbbwj459", "type": "s_answer_update", "when": "2019-03-06T08:05:32Z", "uid_a": "a_0"}, {"anon": "stud", "data": "jsx1hjm2pgl1s0", "type": "s_answer_update", "when": "2019-03-06T10:08:25Z", "uid_a": "a_1"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "jt9croneoap29i", "type": "update", "when": "2019-03-15T00:57:28Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "启动、中断、异常和系统调用-思考题-BIOS-1", "created": "2019-03-15T00:57:28Z", "content": "<p>请描述在“计算机组成原理课”上&#xff0c;同学们做的MIPS CPU是从按复位键开始到可以接收按键输入之间的启动过程。</p>"}, {"anon": "full", "uid_a": "a_0", "subject": "启动、中断、异常和系统调用-思考题-BIOS-1", "created": "2019-03-06T07:36:21Z", "content": "<p>请描述在“计算机组成原理课”上&#xff0c;同学们做的MIPS CPU是从按复位键开始到可以接收按键输入之间的启动过程。</p>"}], "type": "question", "tags": ["2019", "lecture3", "quiz4", "student"], "tag_good": [], "unique_views": 145, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2019-03-06T08:02:26Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "jswwzjlzown23d", "history": [{"anon": "stud", "uid_a": "a_1", "subject": "", "created": "2019-03-06T10:08:25Z", "content": "<p>按下复位键后&#xff0c;CPU先对寄存器进行初始化&#xff0c;将程序指针指向0xFFFF0处。这里是一个跳转语句&#xff0c;跳转到固化ROM里的BIOS固件代码。然后开始执行BIOS。此时CPU在实模式下&#xff0c;不需要复杂的地址转换。BIOS会进行自检&#xff0c;显示配置信息&#xff0c;也提供了输入输出&#xff0c;读取外存等基础功能供后续步骤调用。BIOS会读取外存的主引导记录到内存中&#xff0c;长度为512字节&#xff0c;前446字节为启动代码。之后BIOS把控制权交给这段代码&#xff0c;它会检查分区信息是否完好&#xff0c;然后从硬盘读取并执行加载程序。加载程序找到操作系统的位置&#xff0c;读取它的配置文件&#xff0c;提供菜单以决定引导哪个OS和引导选项。然后将内核代码读取到内存中并跳转过去&#xff0c;并切换为保护模式&#xff0c;之后OS开始运行。</p>\n<p></p>\n<p>上面同学说得不是计组上MIPS CPU的启动过程啊</p>\n<p>仅对于32位CPU&#xff0c;配备kernel的启动过程。大概的过程是&#xff08;详细不是非常记得请了&#xff09;&#xff0c;当复位键按下之后&#xff0c;CPU默认从一个写定的初始位置开始读取代码执行。kernel会进行一些内存的初始化&#xff0c;和系统的配置&#xff08;如果打开了中断支持&#xff09;&#xff0c;如果打开了TLB支持&#xff0c;还会进行页表的填充和TLB的初始化。然后进入到用户态&#xff0c;建立用户栈空间&#xff0c;打印欢迎消息&#xff0c;并开始循环接收输入&#xff08;串口轮询或等待中断&#xff09;。</p>"}, {"anon": "full", "uid_a": "a_0", "subject": "", "created": "2019-03-06T08:05:32Z", "content": "<p>按下复位键后&#xff0c;CPU先对寄存器进行初始化&#xff0c;将程序指针指向0xFFFF0处。这里是一个跳转语句&#xff0c;跳转到固化ROM里的BIOS固件代码。然后开始执行BIOS。此时CPU在实模式下&#xff0c;不需要复杂的地址转换。BIOS会进行自检&#xff0c;显示配置信息&#xff0c;也提供了输入输出&#xff0c;读取外存等基础功能供后续步骤调用。BIOS会读取外存的主引导记录到内存中&#xff0c;长度为512字节&#xff0c;前446字节为启动代码。之后BIOS把控制权交给这段代码&#xff0c;它会检查分区信息是否完好&#xff0c;然后从硬盘读取并执行加载程序。加载程序找到操作系统的位置&#xff0c;读取它的配置文件&#xff0c;提供菜单以决定引导哪个OS和引导选项。然后将内核代码读取到内存中并跳转过去&#xff0c;并切换为保护模式&#xff0c;之后OS开始运行。</p>"}, {"anon": "full", "uid_a": "a_0", "subject": "", "created": "2019-03-06T08:05:12Z", "content": "<p>按下复位键后&#xff0c;CPU先对寄存器进行初始化&#xff0c;将程序指针指向0xFFFF0处。这里是一个跳转语句&#xff0c;跳转到固化ROM里的BIOS固件代码。然后开始执行BIOS。此时CPU在实模式下&#xff0c;不需要复杂的地址转换。BIOS会进行自检&#xff0c;显示配置信息&#xff0c;也提供了输入输出&#xff0c;读取外存等基础功能供后续步骤调用.BIOS会读取外存的主引导记录到内存中&#xff0c;长度为512字节&#xff0c;前446字节为启动代码。之后BIOS把控制权交给这段代码&#xff0c;它会检查分区信息是否完好&#xff0c;然后从硬盘读取并执行加载程序。加载程序找到操作系统的位置&#xff0c;读取它的配置文件&#xff0c;提供菜单以决定引导哪个OS和引导选项。然后将内核代码读取到内存中并跳转过去&#xff0c;并切换为保护模式&#xff0c;之后OS开始运行。</p>"}, {"anon": "full", "uid_a": "a_0", "subject": "", "created": "2019-03-06T08:04:08Z", "content": "<p>按下复位键后&#xff0c;CPU先对寄存器进行初始化&#xff0c;将程序指针指向0xFFFF0处。这里是一个跳转语句&#xff0c;跳转到固化ROM里的BIOS固件代码。然后开始执行BIOS。此时CPU在实模式下&#xff0c;不需要复杂的地址转换.BIOS会进行自检&#xff0c;显示配置信息&#xff0c;也提供了输入输出&#xff0c;读取外存等基础功能供后续步骤调用。BIOS会读取外存的主引导记录到内存中&#xff0c;长度为512字节&#xff0c;前446字节为启动代码。之后BIOS把控制权交给这段代码&#xff0c;它会检查分区信息是否完好&#xff0c;然后从硬盘读取并执行加载程序。加载程序找到操作系统的位置&#xff0c;读取它的配置文件&#xff0c;提供菜单以决定引导哪个OS和引导选项。然后将内核代码读取到内存中并跳转过去&#xff0c;并切换为保护模式&#xff0c;之后OS开始运行。</p>"}, {"anon": "full", "uid_a": "a_0", "subject": "", "created": "2019-03-06T08:02:26Z", "content": "<p>按下复位键后&#xff0c;CPU先对寄存器进行初始化&#xff0c;将程序指针指向0xFFFF0处。这里是一个跳转语句&#xff0c;跳转到固化ROM里的BIOS固件代码。然后开始执行BIOS。此时CPU在实模式下&#xff0c;不需要复杂的地址转换。BIOS会进行自检&#xff0c;显示配置信息&#xff0c;也提供了输入输出&#xff0c;读取磁盘等基础功能供后续步骤调用。BIOS会读取磁盘的主引导记录到内存中&#xff0c;长度为512字节&#xff0c;前446字节为启动代码。之后BIOS把控制权交给这段代码&#xff0c;它会检查分区信息是否完好&#xff0c;然后从硬盘读取并执行加载程序。加载程序找到操作系统的位置&#xff0c;读取它的配置文件&#xff0c;提供菜单以决定引导哪个OS和引导选项。然后将内核代码读取到内存中并跳转过去&#xff0c;并切换为保护模式&#xff0c;之后OS开始运行。</p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "jsww1zc9wiy2ze", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169593582, "default_anonymity": "no"}, "error": null, "aid": "kyv0r0tqjsdw7"}