{"result": {"folders": ["lab5"], "nr": 768, "data": {"embed_links": []}, "created": "2016-04-04T05:38:39Z", "bucket_order": 3, "no_answer_followup": 2, "change_log": [{"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-04T05:38:39Z", "data": "imlkgk8ntyt2d8", "type": "create"}, {"to": "imlkgk8k4a92d7", "uid": "ie7xy71bn7b1s2", "anon": "no", "when": "2016-04-04T06:47:48Z", "data": "imlmxh3msoe6sv", "type": "s_answer"}, {"uid": "ie7xy71bn7b1s2", "anon": "no", "when": "2016-04-04T06:48:22Z", "data": "imlmy7s79lo1vl", "type": "s_answer_update"}, {"to": "imlkgk8k4a92d7", "uid": "i0b2fq3ezjw50r", "anon": "no", "when": "2016-04-04T07:30:38Z", "type": "followup"}, {"to": "imlkgk8k4a92d7", "uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-04T08:17:56Z", "type": "followup"}, {"to": "imlkgk8k4a92d7", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-04T08:51:16Z", "type": "feedback"}, {"to": "imlkgk8k4a92d7", "uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-04T09:00:19Z", "type": "feedback"}, {"to": "imlkgk8k4a92d7", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-04T09:11:55Z", "type": "feedback"}, {"to": "imlkgk8k4a92d7", "uid": "ie7xy71bn7b1s2", "anon": "no", "when": "2016-04-04T14:16:54Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "proc_struct中trapframe的作用", "created": "2016-04-04T05:38:39Z", "content": "<p>看了lab5的代码有几个问题。</p>\n<p>1. proc_struct中的trapframe只有在第一次switch_to的时候充当一个临时的trapframe用来提供iret返回的作用。之后这个trapframe还有别的用处吗&#xff1f;我没有看到还有其他地方需要用这个。</p>\n<p>2. 下面代码中的trapframe chain是什么东西- -。为啥要维护这么一个东西。</p>\n<pre>void\ntrap(struct trapframe *tf) {\n    // dispatch based on what type of trap occurred\n    // used for previous projects\n    if (current == NULL) {\n        trap_dispatch(tf);\n    }\n    else {\n        // keep a trapframe chain in stack\n        struct trapframe *otf = current-&gt;tf;\n        current-&gt;tf = tf;\n    \n        bool in_kernel = trap_in_kernel(tf);\n    \n        trap_dispatch(tf);\n    \n        current-&gt;tf = otf;\n        if (!in_kernel) {\n            if (current-&gt;flags &amp; PF_EXITING) {\n                do_exit(-E_KILLED);\n            }\n            if (current-&gt;need_resched) {\n                schedule();\n            }\n        }\n    }\n}</pre>\n<p></p>"}], "type": "question", "tags": ["lab5", "student"], "tag_good": [{"role": "student", "name": "张明瑞 2013011391", "endorser": {}, "admin": false, "photo": "1421470584_35.png", "id": "i0b2fq3ezjw50r", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/i0b2fq3ezjw50r/1421470584_35.png", "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "student", "name": "叶子鹏", "endorser": {}, "admin": false, "photo": null, "id": "i0f24oie8102cr", "photo_url": null, "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 152, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2016-04-04T06:47:48Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "imlmxh3jmdx6su", "history": [{"anon": "no", "uid": "ie7xy71bn7b1s2", "subject": "", "created": "2016-04-04T06:48:22Z", "content": "<p>current-&gt;tf主要是给各个系统调用传参, 系统调用压寄存器的那些参数都在tf里面</p>\n<p>Trapframe Chain的作用是用于处理嵌套中断/异常</p>\n<p>因为current-&gt;tf是不能嵌套的, 只有一个位置, 那么只能找一个地方放old trapframe, 等到嵌套的中断返回到上一层中断, 如果没有old trapframe的话current-&gt;tf就错了(还是刚刚返回的中断的tf), 然后就会崩得一塌糊涂.</p>"}, {"anon": "no", "uid": "ie7xy71bn7b1s2", "subject": "", "created": "2016-04-04T06:47:48Z", "content": "<p>current-&gt;tf主要是给各个系统调用传参, 系统调用压寄存器的那些参数都在tf里面</p>\n<p>Trapframe Chain的作用是用于处理嵌套中断/异常</p>\n<p>因为current-&gt;tf是不能嵌套的, 只有一个位置, 那么只能找一个地方放old trapframe, 等到嵌套的中断返回到上一层中断, 如果没有old trapframe的话trap frame就错了, 然后就会崩得一塌糊涂.</p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>所以你的意思是这个保存是为了可以嵌套&#xff1f;</p>", "created": "2016-04-04T07:30:38Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "followup", "tag_good": [], "uid": "i0b2fq3ezjw50r", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "imlogk7tn5k4pc", "updated": "2016-04-04T07:30:38Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>但是又一个问题&#xff0c;在proc_run里面的</p>\n<pre>load_esp0(next-&gt;kstack &#43; KSTACKSIZE);</pre>\n<p>实际上tss里面的esp0和整个proc_struct的trapframe的地址是一样的。也就是说每次中断的时候&#xff0c;trap函数里的trapframe和proc_struct的trapframe地址应该是一样的。那嵌套没法处理啊。。。</p>", "created": "2016-04-04T08:17:56Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "followup", "tag_good": [], "uid": "i0nuu5yhgno5tv", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>硬件做了些事情吧</p>", "created": "2016-04-04T08:51:16Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imlrc95fcrp6fp", "updated": "2016-04-04T08:51:16Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>硬件就是根据tss的esp0切换堆栈呗。</p>", "created": "2016-04-04T09:00:19Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0nuu5yhgno5tv", "children": [], "tag_good_arr": [], "id": "imlrnwekwnn17d", "updated": "2016-04-04T09:00:19Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>有木有做别的&#xff1f;比如压一些东西什么的&#xff1f;</p>\n<p>你用gdb调试的还是纯看代码&#xff1f;</p>", "created": "2016-04-04T09:11:55Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imls2tjh98n5ow", "updated": "2016-04-04T09:11:55Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>中断嵌套是中断里套中断, 和proc_run没有关系. </p>", "created": "2016-04-04T14:16:54Z", "bucket_order": 208, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "ie7xy71bn7b1s2", "children": [], "tag_good_arr": [], "id": "imm2z1co5p34c9", "updated": "2016-04-04T14:16:54Z", "config": {}}], "tag_good_arr": [], "no_answer": 1, "id": "imlq5e856f411o", "updated": "2016-04-04T08:17:56Z", "config": {}}], "tag_good_arr": ["i0b2fq3ezjw50r", "i0f24oie8102cr"], "no_answer": 0, "id": "imlkgk8k4a92d7", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168462885, "default_anonymity": "no"}, "error": null, "aid": "kyv02sdhple7fn"}