{"result": {"folders": ["课堂问答"], "nr": 327, "data": {"embed_links": []}, "created": "2015-04-20T06:15:25Z", "bucket_order": 3, "no_answer_followup": 6, "change_log": [{"uid": "hdjonbiyfs62ie", "anon": "no", "when": "2015-04-20T06:15:25Z", "data": "i8phnom9o1b7mr", "type": "create"}, {"to": "i8phnom5jpn7mq", "uid": "hxu22d7okof4c1", "anon": "no", "when": "2015-04-20T06:47:05Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i6roqnlkmtw", "anon": "no", "when": "2015-04-20T06:47:37Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i6uunp7jxDb", "anon": "no", "when": "2015-04-20T06:47:58Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i71i9b92nrr7n4", "anon": "no", "when": "2015-04-20T06:58:20Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-20T07:07:33Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i7xf3wh8szf", "anon": "no", "when": "2015-04-20T07:35:30Z", "type": "followup"}, {"to": "i8phnom5jpn7mq", "uid": "i6rgda76fc66q4", "anon": "no", "when": "2015-04-20T08:31:00Z", "type": "feedback"}, {"to": "i8phnom5jpn7mq", "uid": "i6roqnlkmtw", "anon": "no", "when": "2015-04-20T08:37:31Z", "type": "feedback"}, {"to": "i8phnom5jpn7mq", "uid": "i6rgda76fc66q4", "anon": "no", "when": "2015-04-20T08:40:45Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "第14讲课堂练习回答", "created": "2015-04-20T06:15:25Z", "content": "<p>下面链接的题目&#xff0c;要求给出用户堆栈和内核堆栈的函数调用序列和页表项内容。</p>\n<p></p>\n<p><a href=\"http://os.cs.tsinghua.edu.cn/oscourse/OS2015/lecture14#head-244c618df4e6ee26f9d2bca95bde38c05264675d\">http://os.cs.tsinghua.edu.cn/oscourse/OS2015/lecture14#head-244c618df4e6ee26f9d2bca95bde38c05264675d</a></p>\n<p></p>\n<p>请同学们回复自己的输出结果和代码在github上的链接。</p>"}], "type": "note", "tags": ["instructor-note", "课堂问答"], "tag_good": [], "unique_views": 123, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>小组&#xff1a;矣晓沅&#xff08;2012011364&#xff09;、袁泰凌&#xff08;2012012017&#xff09;</p>\n<p></p>\n<p>自己的输出结果</p>\n<pre>I am the child.\nebp:0xc03adec8 eip:0xc0101f62 args:0x00000003 0xafffff98 0xc03adfb4 0x00000000 \n    kern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc03adef8 eip:0xc010c54e args:0xc03adf24 0x0000000a 0x00000000 0x00000000 \n    kern/syscall/syscall.c:24: sys_wait&#43;10\nebp:0xc03adf48 eip:0xc010c6a2 args:0x00000000 0x00000000 0x00000000 0x00000000 \n    kern/syscall/syscall.c:95: syscall&#43;115\nebp:0xc03adf78 eip:0xc0103d39 args:0xc03adfb4 0x00000000 0x00800020 0x0000001b \n    kern/trap/trap.c:216: trap_dispatch&#43;299\nebp:0xc03adfa8 eip:0xc0103eae args:0xc03adfb4 0x00800306 0x00000003 0xafffff44 \n    kern/trap/trap.c:287: trap&#43;74\nebp:0xafffff44 eip:0xc0103f03 args:0x00000003 0x00000003 0xafffff98 0xafffff78 \n    kern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0\nebp:0xafffff58 eip:0x00800232 args:0x00000003 0xafffff98 0xafffff84 0x0000001f \n    user/libs/syscall.c:45: sys_wait&#43;31\nebp:0xafffff78 eip:0x00800306 args:0x00000003 0xafffff98 0x00000000 0x00000000 \n    user/libs/ulib.c:25: waitpid&#43;23\nebp:0xafffffa8 eip:0x0080109a args:0x00000000 0x00000000 0x00000000 0x00000000 \n    user/exit.c:28: main&#43;264\nebp:0xafffffd8 eip:0x0080034d args:0x00000000 0x00000000 0x00000000 0x00000000 \n    user/libs/umain.c:7: umain&#43;10\n-------------------- BEGIN --------------------\nPDE(001) 00000000-00400000 00400000 urw\n  |-- PTE(00004) 00200000-00204000 00004000 urw\nPDE(001) 00800000-00c00000 00400000 urw\n  |-- PTE(00002) 00800000-00802000 00002000 ur-\n  |-- PTE(00001) 00802000-00803000 00001000 urw\nPDE(001) afc00000-b0000000 00400000 urw\n  |-- PTE(00004) afffc000-b0000000 00004000 urw\nPDE(0e0) c0000000-f8000000 38000000 urw\n  |-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n  |-- PTE(00001) fac00000-fac01000 00001000 urw\n  |-- PTE(00001) fac02000-fac03000 00001000 urw\n  |-- PTE(00001) faebf000-faec0000 00001000 urw\n  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n  |-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------</pre>\n<p></p>\n<p>代码在github上的链接</p>\n<p><a href=\"https://github.com/yuantailing/ucore_lab/tree/master/related_info/lab5/lab5-spoc-discuss\" target=\"_blank\">https://github.com/yuantailing/ucore_lab/tree/master/related_info/lab5/lab5-spoc-discuss</a></p>", "created": "2015-04-20T06:47:05Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "hxu22d7okof4c1", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "i8pisexqdg07hc", "updated": "2015-04-20T06:47:05Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>李天润 党唯真</p>\n<p>在proc.c/do_wait函数中加入了print_stackframe函数&#xff0c;在找到一个僵尸进程后输出栈信息</p>\n<p><br />found:<br /> print_stackframe();<br /> if (proc == idleproc || proc == initproc) {<br /> panic(&#34;wait idleproc or initproc.\\n&#34;);<br /> }<br /> if (code_store != NULL) {<br /> *code_store = proc-&gt;exit_code;<br /> }<br /> local_intr_save(intr_flag);<br /> {<br /> unhash_proc(proc);<br /> remove_links(proc);<br /> }<br /> local_intr_restore(intr_flag);<br /> put_kstack(proc);<br /> kfree(proc);<br /> return 0;</p>\n<p></p>\n<p>结果如下&#xff1a;</p>\n<p>ebp:0xc03adec8 eip:0xc0101e9b args:0x0000000a 0xc03a41a0 0x00000001 0xc03a4248 <br /> kern/debug/kdebug.c:350: print_stackframe&#43;21<br />ebp:0xc03adee8 eip:0xc010b1b6 args:0x00000003 0xafffff98 0xc03adfb4 0x00000000 <br /> kern/process/proc.c:742: do_wait&#43;254<br />ebp:0xc03adf18 eip:0xc010b87e args:0xc03adf34 0xc03adf54 0xc0103ce6 0xc03adf60 <br /> kern/syscall/syscall.c:26: sys_wait&#43;38<br />ebp:0xc03adf58 eip:0xc010b9a6 args:0x00000000 0x00000000 0x00000000 0x00000000 <br /> kern/syscall/syscall.c:93: syscall&#43;116<br />ebp:0xc03adf78 eip:0xc0103b7c args:0xc03adfb4 0x00000000 0x00000023 0x00000023 <br /> kern/trap/trap.c:216: trap_dispatch&#43;272<br />ebp:0xc03adfa8 eip:0xc0103ce6 args:0xc03adfb4 0x008001ef 0x00000003 0xafffff44 <br /> kern/trap/trap.c:287: trap&#43;80<br />ebp:0xafffff44 eip:0xc01047af args:0x00000003 0x00000003 0xafffff98 0xafffff78 <br /> kern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0<br />ebp:0xafffff58 eip:0x0080013b args:0x00000003 0xafffff98 0xafffff84 0x0000001f <br /> user/libs/syscall.c:45: sys_wait&#43;15<br />ebp:0xafffff78 eip:0x008001ef args:0x00000003 0xafffff98 0xafffffa8 0x00800fc4 <br /> user/libs/ulib.c:25: waitpid&#43;19<br />ebp:0xafffffa8 eip:0x0080105c args:0x00000000 0x00000000 0x00000000 0x0080030b <br /> user/exit.c:71: main&#43;189<br />ebp:0xafffffd8 eip:0x0080030b args:0x00000000 0x00000000 0x00000000 0x00000000 <br /> user/libs/umain.c:7: umain&#43;10</p>\n<p></p>\n<p>不知道是不是这个意思。。。</p>", "created": "2015-04-20T06:47:37Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i6roqnlkmtw", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "i8pit3c7rt7mf", "updated": "2015-04-20T06:47:37Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>沈光耀 胡津铭</p>\n<pre>ebp:0xc03ade98 eip:0xc0101f62 args:0x00000003 0xafffff98 0x00000004 0x00000001 \n    kern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc03adec8 eip:0xc010bdfb args:0x00000003 0xafffff98 0xc03adfb4 0x00000000 \n    kern/process/proc.c:740: do_wait&#43;273\nebp:0xc03adef8 eip:0xc010c573 args:0xc03adf24 0x0000000a 0x00000000 0x00000000 \n    kern/syscall/syscall.c:26: sys_wait&#43;42\nebp:0xc03adf48 eip:0xc010c69d args:0x00000000 0x00000000 0x00000000 0x00000000 \n    kern/syscall/syscall.c:93: syscall&#43;115\nebp:0xc03adf78 eip:0xc0103d39 args:0xc03adfb4 0x00000000 0x00800020 0x0000001b \n    kern/trap/trap.c:216: trap_dispatch&#43;299\nebp:0xc03adfa8 eip:0xc0103eae args:0xc03adfb4 0x00800306 0x00000003 0xafffff44 \n    kern/trap/trap.c:287: trap&#43;74\nebp:0xafffff44 eip:0xc0103f03 args:0x00000003 0x00000003 0xafffff98 0xafffff78 \n    kern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0\nebp:0xafffff58 eip:0x00800232 args:0x00000003 0xafffff98 0xafffff84 0x0000001f \n    user/libs/syscall.c:45: sys_wait&#43;31\nebp:0xafffff78 eip:0x00800306 args:0x00000003 0xafffff98 0x00000000 0x00000000 \n    user/libs/ulib.c:25: waitpid&#43;23\nebp:0xafffffa8 eip:0x00801051 args:0x00000000 0x00000000 0x00000000 0x00000000 \n    user/exit.c:27: main&#43;191\nebp:0xafffffd8 eip:0x0080034d args:0x</pre>\n<p></p>", "created": "2015-04-20T06:47:58Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i6uunp7jxDb", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>前6个是内核栈&#xff0c;接下来的是用户栈。</p>\n<p>之所以两个栈可以通过一次print_stackframe函数打印出来&#xff0c;是因为在进行系统调用处理时ebp寄存器的值没有被覆盖&#xff0c;用户态和内核态的函数调用关系通过ebp连接了起来。</p>\n<p>注意到trapentry.S中的代码是由汇编写成&#xff0c;并没有push ebp&#xff0c;所以这里应该是有一次函数调用没有被记录下来&#xff0c;第7条中ebp处于用户态而eip处于内核态也印证了这一点。正确的函数调用栈应该是&#xff1a;</p>\n<pre>(前6条相同)\n...\nebp:0xc03adf?? eip:0xc0103f03 args:0x00000003 0x00000003 0xafffff98 0xafffff78\n    kern/trap/trapentry.S: 24: &lt;unknown&gt;&#43;0\nebp:0xafffff44 eip:0x00800??? args:0x00000003 0xafffff98 0xafffff84 0x0000001f\n    user/libs/syscall.c: ??: syscall&#43;??\n...\n(后4条相同)</pre>\n<p>这样就解释通了。</p>\n<p></p>", "created": "2015-04-20T08:31:00Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "feedback", "tag_good": [], "uid": "i6rgda76fc66q4", "children": [], "tag_good_arr": [], "id": "i8pmi1hmq0g61v", "updated": "2015-04-20T08:31:00Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>膜拜楼上大神&#xff0c;课上我就是这个没想明白。</p>\n<p>多谢指点&#xff01;&#xff01;&#xff01;</p>", "created": "2015-04-20T08:37:31Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "feedback", "tag_good": [], "uid": "i6roqnlkmtw", "children": [], "tag_good_arr": [], "id": "i8pmqfpkrex2mb", "updated": "2015-04-20T08:37:31Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>楼上大神虚怀若谷&#xff0c;不耻下问&#xff0c;末学受宠若惊&#xff0c;惭愧惭愧。</p>", "created": "2015-04-20T08:40:45Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "feedback", "tag_good": [], "uid": "i6rgda76fc66q4", "children": [], "tag_good_arr": [], "id": "i8pmul4vcql391", "updated": "2015-04-20T08:40:45Z", "config": {}}], "tag_good_arr": [], "no_answer": 1, "id": "i8pitjehozw2", "updated": "2015-04-20T06:47:58Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>计22 梁锡豪 2012011290</p>\n<p>计35 温和 2013011407</p>\n<p></p>\n<p>do_wait 中加入print_stackframe(), print_pgdir()</p>\n<pre>found:\n    if (proc == idleproc || proc == initproc) {\n        panic(&#34;wait idleproc or initproc.\\n&#34;);\n    }\n    if (code_store != NULL) {\n        *code_store = proc-&gt;exit_code;\n    }\n    local_intr_save(intr_flag);\n    {\n        unhash_proc(proc);\n        remove_links(proc);\n    }\n    local_intr_restore(intr_flag);\n    put_kstack(proc);\n    kfree(proc);\n\n    print_stackframe();\n    print_pgdir();\n    return 0;\n}\n</pre>\n<p></p>\n<p>asdf</p>\n<pre>kernel_execve: pid = 2, name = &#34;exit&#34;.\nI am the parent. Forking the child...\nI am parent, fork a child pid 3\nI am the parent, waiting now..\nI am the child.\nebp:0xc03ade98 eip:0xc0101f62 args:0xc03a4248 0xafffff98 0x00000004 0x00000001 \n    kern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc03adec8 eip:0xc010be7b args:0x00000003 0xafffff98 0xc03adfb4 0x00000000 \n    kern/process/proc.c:755: do_wait&#43;401\nebp:0xc03adef8 eip:0xc010c578 args:0xc03adf24 0x0000000a 0x00000000 0x00000000 \n    kern/syscall/syscall.c:26: sys_wait&#43;42\nebp:0xc03adf48 eip:0xc010c6a2 args:0x00000000 0x00000000 0x00000000 0x00000000 \n    kern/syscall/syscall.c:93: syscall&#43;115\nebp:0xc03adf78 eip:0xc0103d39 args:0xc03adfb4 0x00000000 0x00800020 0x0000001b \n    kern/trap/trap.c:216: trap_dispatch&#43;299\nebp:0xc03adfa8 eip:0xc0103eae args:0xc03adfb4 0x00800306 0x00000003 0xafffff44 \n    kern/trap/trap.c:287: trap&#43;74\nebp:0xafffff44 eip:0xc0103f03 args:0x00000003 0x00000003 0xafffff98 0xafffff78 \n    kern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0\nebp:0xafffff58 eip:0x00800232 args:0x00000003 0xafffff98 0xafffff84 0x0000001f \n    user/libs/syscall.c:45: sys_wait&#43;31\nebp:0xafffff78 eip:0x00800306 args:0x00000003 0xafffff98 0x00000000 0x00000000 \n    user/libs/ulib.c:25: waitpid&#43;23\nebp:0xafffffa8 eip:0x00801051 args:0x00000000 0x00000000 0x00000000 0x00000000 \n    user/exit.c:27: main&#43;191\nebp:0xafffffd8 eip:0x0080034d args:0x00000000 0x00000000 0x00000000 0x00000000 \n    user/libs/umain.c:7: umain&#43;10\n-------------------- BEGIN --------------------\nPDE(001) 00000000-00400000 00400000 urw\n  |-- PTE(00004) 00200000-00204000 00004000 urw\nPDE(001) 00800000-00c00000 00400000 urw\n  |-- PTE(00002) 00800000-00802000 00002000 ur-\n  |-- PTE(00001) 00802000-00803000 00001000 urw\nPDE(001) afc00000-b0000000 00400000 urw\n  |-- PTE(00004) afffc000-b0000000 00004000 urw\nPDE(0e0) c0000000-f8000000 38000000 urw\n  |-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n  |-- PTE(00001) fac00000-fac01000 00001000 urw\n  |-- PTE(00001) fac02000-fac03000 00001000 urw\n  |-- PTE(00001) faebf000-faec0000 00001000 urw\n  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n  |-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\n</pre>\n<p></p>\n<p></p>", "created": "2015-04-20T06:58:20Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i71i9b92nrr7n4", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "i8pj6vlxjsw22m", "updated": "2015-04-20T06:58:20Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>陈辉 2012011328</p>\n<p>王昊 2012011341</p>\n<p></p>\n<p></p>\n<pre>ebp:0xc03ade98 eip:0xc0101f62 args:0x00000003 0xafffff98 0x00000004 0x00000001 \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc03adec8 eip:0xc010bdfb args:0x00000003 0xafffff98 0xc03adfb4 0x00000000 \nkern/process/proc.c:742: do_wait&#43;273\nebp:0xc03adef8 eip:0xc010c57f args:0xc03adf24 0xc0103eae 0xc03adf3c 0x00000000 \nkern/syscall/syscall.c:29: sys_wait&#43;54\nebp:0xc03adf48 eip:0xc010c6a9 args:0xc03adfb4 0xc00b8000 0x00000000 0x00000000 \nkern/syscall/syscall.c:102: syscall&#43;115\nebp:0xc03adf78 eip:0xc0103d39 args:0xc03adfb4 0x00000000 0x00800020 0x0000001b \nkern/trap/trap.c:216: trap_dispatch&#43;299\nebp:0xc03adfa8 eip:0xc0103eae args:0xc03adfb4 0x00800306 0x00000003 0xafffff44 \nkern/trap/trap.c:287: trap&#43;74\nebp:0xafffff44 eip:0xc0103f03 args:0x00000003 0x00000003 0xafffff98 0xafffff78 \nkern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0\nebp:0xafffff58 eip:0x00800232 args:0x00000003 0xafffff98 0xafffff84 0x0000001f \nuser/libs/syscall.c:45: sys_wait&#43;31\nebp:0xafffff78 eip:0x00800306 args:0x00000003 0xafffff98 0x00000000 0x00000000 \nuser/libs/ulib.c:25: waitpid&#43;23\nebp:0xafffffa8 eip:0x00801051 args:0x00000000 0x00000000 0x00000000 0x00000000 \nuser/exit.c:27: main&#43;191\nebp:0xafffffd8 eip:0x0080034d args:0x00000000 0x00000000 0x00000000 0x00000000 \nuser/libs/umain.c:7: umain&#43;10\nthe current sys_call is sys_wait.\nthe current sys_call is sys_wait.\nwaitpid 3 ok.\nexit pass.\nebp:0xc03a6f7c eip:0xc0101f62 args:0x00000010 0x00000000 0x00000000 0xc010a6e6 \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc03a6fac eip:0xc010bdfb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:742: do_wait&#43;273\nebp:0xc03a6fec eip:0xc010bfef args:0x00000000 0x00000000 0x00000010 0x00000000 \nkern/process/proc.c:831: init_main&#43;113\nall user-mode processes have quit.\ninit check memory pass.\nkernel panic at kern/process/proc.c:454:\ninitproc exit.</pre>\n<p></p>\n<p>在syscall.c文件的sys_wait函数输出系统调用的名称&#xff0c;</p>\n<p>在poc.c中的do_wait中加入print_stackpframe()函数。</p>", "created": "2015-04-20T07:07:33Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "i8pjiq3entr5cp", "updated": "2015-04-20T07:07:33Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>侯银星&#xff1a;2012011280</p>\n<p>马琳&#xff1a;2012011281</p>\n<p>在proc.c中int do_wait(void)函数返回前加入print_stackframe()&#xff0c;若要输出页表信息&#xff0c;可添加print_pgdir()</p>\n<p>部分输出答案&#xff1a;</p>\n<p>begin---end中输出的是进程的页表信息</p>\n<pre>-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\nphi_take_forks_condvar: 4 didn&#39;t get fork and will wait\ncond_wait begin: cvp c0355a30, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 0\nebp:0xc0358f7c eip:0xc0100bd2 args:0xc0355580 0xc011788c 0x00000000 0xc010bcfd \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc0358fac eip:0xc010dadb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:936: do_wait&#43;413\nebp:0xc0358fec eip:0xc010dca3 args:0x00000000 0x00000000 0x00000010 0xc0355458 \nkern/process/proc.c:1021: init_main&#43;174\n-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\nphi_take_forks_condvar: 1 didn&#39;t get fork and will wait\ncond_wait begin: cvp c03559f4, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 0\nphi_test_condvar: state_condvar[4] will eating\nphi_test_condvar: signal self_cv[4] \ncond_signal begin: cvp c0355a30, cvp-&gt;count 1, cvp-&gt;owner-&gt;next_count 0\ncond_wait end: cvp c0355a30, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 1\nIter 4, No.4 philosopher_condvar is eating\ncond_signal end: cvp c0355a30, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 0\nNo.0 philosopher_condvar quit\nebp:0xc0358f7c eip:0xc0100bd2 args:0xc0355a50 0xc011788c 0x00000000 0xc010bcfd \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc0358fac eip:0xc010dadb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:936: do_wait&#43;413\nebp:0xc0358fec eip:0xc010dca3 args:0x00000000 0x00000000 0x00000010 0xc0355458 \nkern/process/proc.c:1021: init_main&#43;174\n-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\nphi_test_condvar: state_condvar[1] will eating\nphi_test_condvar: signal self_cv[1] \ncond_signal begin: cvp c03559f4, cvp-&gt;count 1, cvp-&gt;owner-&gt;next_count 0\ncond_wait end: cvp c03559f4, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 1\nIter 4, No.1 philosopher_condvar is eating\ncond_signal end: cvp c03559f4, cvp-&gt;count 0, cvp-&gt;owner-&gt;next_count 0\nNo.2 philosopher_condvar quit\nebp:0xc0358f7c eip:0xc0100bd2 args:0xc0355c10 0xc011788c 0x00000000 0xc010bcfd \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc0358fac eip:0xc010dadb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:936: do_wait&#43;413\nebp:0xc0358fec eip:0xc010dca3 args:0x00000000 0x00000000 0x00000010 0xc0355458 \nkern/process/proc.c:1021: init_main&#43;174\n-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\nIter 2, No.1 philosopher_sema is thinking\nNo.4 philosopher_condvar quit\nebp:0xc0358f7c eip:0xc0100bd2 args:0xc0355dd0 0xc011788c 0x00000000 0xc010bcfd \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc0358fac eip:0xc010dadb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:936: do_wait&#43;413\nebp:0xc0358fec eip:0xc010dca3 args:0x00000000 0x00000000 0x00000010 0xc0355458 \nkern/process/proc.c:1021: init_main&#43;174\n-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------\nNo.1 philosopher_condvar quit\nebp:0xc0358f7c eip:0xc0100bd2 args:0xc0355b30 0xc011788c 0x00000000 0xc010bcfd \nkern/debug/kdebug.c:350: print_stackframe&#43;21\nebp:0xc0358fac eip:0xc010dadb args:0x00000000 0x00000000 0x00000000 0x00000000 \nkern/process/proc.c:936: do_wait&#43;413\nebp:0xc0358fec eip:0xc010dca3 args:0x00000000 0x00000000 0x00000010 0xc0355458 \nkern/process/proc.c:1021: init_main&#43;174\n-------------------- BEGIN --------------------\nPDE(0e0) c0000000-f8000000 38000000 urw\n|-- PTE(38000) c0000000-f8000000 38000000 -rw\nPDE(001) fac00000-fb000000 00400000 -rw\n|-- PTE(000e0) faf00000-fafe0000 000e0000 urw\n|-- PTE(00001) fafeb000-fafec000 00001000 -rw\n--------------------- END ---------------------</pre>\n<p></p>\n<p></p>", "created": "2015-04-20T07:35:30Z", "bucket_order": 263, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i7xf3wh8szf", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "i8pkiojn4151vg", "updated": "2015-04-20T07:35:30Z", "config": {}}], "tag_good_arr": [], "id": "i8phnom5jpn7mq", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 9, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167636709, "default_anonymity": "no"}, "error": null, "aid": "kyuzl2w5tc62e6"}