{"result": {"folders": ["lab1", "lecture4"], "nr": 1273, "data": {"embed_links": []}, "created": "2019-03-07T01:25:58Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "jsiobmer9hum", "data": "jsxy9j5bdqz2xy", "type": "create", "when": "2019-03-07T01:25:58Z"}, {"anon": "stud", "data": "jsxy9vrrcl13av", "type": "update", "when": "2019-03-07T01:26:15Z", "uid_a": "a_0"}, {"anon": "full", "data": "jsxyb643v3750r", "type": "update", "when": "2019-03-07T01:27:15Z", "uid_a": "a_1"}, {"anon": "no", "uid": "jsiobmer9hum", "to": "jsxy9j588lv2xx", "type": "followup", "when": "2019-03-07T01:33:40Z"}, {"anon": "no", "uid": "jsjp8hz7gmVG", "to": "jsxy9j588lv2xx", "type": "followup", "when": "2019-03-07T01:35:35Z"}, {"anon": "no", "uid": "jsiyf76cGzf9", "to": "jsxy9j588lv2xx", "type": "followup", "when": "2019-03-07T01:51:14Z"}, {"anon": "full", "to": "jsxy9j588lv2xx", "type": "followup", "when": "2019-03-08T08:47:24Z", "uid_a": "a_2"}, {"anon": "no", "uid": "jshne0d1gvw4mr", "to": "jsxy9j588lv2xx", "type": "followup", "when": "2019-03-08T23:39:22Z"}, {"anon": "no", "uid": "jsiyf76cGzf9", "to": "jsxy9j588lv2xx", "type": "feedback", "when": "2019-03-09T04:14:21Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "to": "jsxy9j588lv2xx", "type": "feedback", "when": "2019-03-15T00:53:48Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "to": "jsxy9j588lv2xx", "type": "feedback", "when": "2019-03-15T00:54:21Z"}], "bucket_name": "Today", "history": [{"anon": "full", "uid_a": "a_1", "subject": "在ucore中写一个函数print_stackframe()", "created": "2019-03-07T01:27:15Z", "content": "<p>在ucore中写一个函数print_stackframe()&#xff0c;用于获取当前位置的函数调用栈信息。实现如下一种或多种功能&#xff1a;函数入口地址、函数名信息、参数调用参数信息、返回值信息。 向老师2019-3-7日课堂作业</p>"}, {"anon": "stud", "uid_a": "a_0", "subject": "在ucore中写一个函数print_stackframe()", "created": "2019-03-07T01:26:15Z", "content": "<p>在ucore中写一个函数print_stackframe()&#xff0c;用于获取当前位置的函数调用栈信息。实现如下一种或多种功能&#xff1a;函数入口地址、函数名信息、参数调用参数信息、返回值信息。 向老师2019-3-7日课堂作业</p>"}, {"anon": "no", "uid": "jsiobmer9hum", "subject": "在ucore中写一个函数print_stackframe()", "created": "2019-03-07T01:25:58Z", "content": "<p>在ucore中写一个函数print_stackframe()&#xff0c;用于获取当前位置的函数调用栈信息。实现如下一种或多种功能&#xff1a;函数入口地址、函数名信息、参数调用参数信息、返回值信息。 向老师2019-3-7日课堂作业</p>"}], "type": "note", "tags": ["lab1", "lecture4", "student"], "tag_good": [], "unique_views": 197, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>当处于内核态时&#xff0c;类似Lab1练习5&#xff0c;通过read_ebp()获得当前栈底指针信息&#xff0c;然后通过函数调用栈的结构通过ebp=*ebp反复往前读&#xff0c;就可以获得函数调用栈各个frame的信息</p>\n<p></p>\n<pre>void print_stackframe(void)<br />{<br />\tuint32_t ebp = read_ebp();\n\tuint32_t eip = read_eip();\n\tint i,j;\n\tfor(i = 0; i &lt; STACKFRAME_DEPTH &amp;&amp; ebp != 0; i&#43;&#43;)\n\t{\n\t\tcprintf(&#34;ebp = 0x%08x, eip = 0x%08x &#34;, ebp, eip);\n\t\tcprintf(&#34;Args = &#34;);\n\t\tuint32_t *base = (uint32_t *)ebp;\n\t\tuint32_t *args = base &#43; 2;\n\t\tfor(j = 0; j &lt; 4; j&#43;&#43;)\n\t\t\tcprintf(&#34;0x%08x &#34;, args[j]);\n\t\tcprintf(&#34;\\n&#34;);\n\t\tprint_debuginfo(eip-1);\n\t\teip = base[1];\n\t\tebp = base[0];\n\t}<br />}</pre>\n<p>当自身处于用户态时&#xff0c;由于内核态有独立的堆栈&#xff0c;因此除了打印用户态的函数堆栈之外&#xff0c;还要从用户态切换到内核态&#xff0c;打印出内核堆栈中的调用信息</p>\n<p></p>", "created": "2019-03-07T01:33:40Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "followup", "tag_good": [], "uid": "jsiobmer9hum", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jsxyjf8b2qk1ny", "updated": "2019-03-07T01:33:40Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>当自身处于内核态时&#xff0c;该函数的实现类比lab1中练习五&#xff0c;直接调用相关函数获取寄存器里的值以及通过地址偏移获取相关参数信息&#xff0c;如下&#xff1a;</p>\n<pre>void print_stackframe(void) {\n    uint32_t ebp = read_ebp();\n    uint32_t eip = read_eip();\n\n    int i;\n    for(i = 0; i &lt; STACKFRAME_DEPTH; i &#43;&#43;) {\n\tcprintf(&#34;ebp: 0x%08x &#34;, ebp);\n\tcprintf(&#34;eip: 0x%08x &#34;, eip);\n\t\n\tint j;       \n\tcprintf(&#34;args: &#34;);\n\tuint32_t *args = (uint32_t *)ebp &#43; 2;\t// 由ebp偏移两个单位得到最后入栈的参数地址\n\tfor(j = 0; j &lt; 4; j &#43;&#43;) {\n\t    cprintf(&#34;0x%08x &#34;, args[j]);        \n\t}\n    cprintf(&#34;\\n&#34;);\n    print_debuginfo(eip - 1);\n\t\n\t// 分清地址和值\n\teip = ((uint32_t *)ebp &#43; 1)[0];\n\tebp = ((uint32_t *)ebp)[0];\n    }\n}</pre>\n<p>当处于用户态时&#xff0c;则涉及到用户态转到内核态打印结束相关信息再转回用户态&#xff08;利用相关中断和内核堆栈&#xff09;。</p>", "created": "2019-03-07T01:35:35Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "followup", "tag_good": [], "uid": "jsjp8hz7gmVG", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jsxylvyoabz73o", "updated": "2019-03-07T01:35:35Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p></p>", "created": "2019-03-07T01:51:14Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "followup", "tag_good": [], "uid": "jsiyf76cGzf9", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p><tt>一、如果只是普通的函数调用</tt></p>\n<ul><li><tt>类似于lab1中的练习5&#xff0c;获得此时的ebp和eip&#xff0c;并通过ebp递归获得栈帧基址和eip&#xff0c;进而打印出所有函数调用栈信息。</tt></li></ul>\n<p><tt>二、如果是用户态通过系统调用到达内核态</tt></p>\n<ul><li><tt>然后通过trapframe中esp和eip回到用户态的函数</tt></li><li><tt>先在内核态中打印内核堆栈中的栈帧</tt></li><li><tt>打印用户态的函数信息</tt></li></ul>\n<p><tt>函数如下&#xff1a;</tt></p>\n<pre>void\nprint_trapStackframe(struct trapframe *tf) {\n\tuint32_t ebp = read_ebp(), eip = read_eip();\n\tfor (int i = 0; i &lt; STACKFRAME_DEPTH; i&#43;&#43;) {\n\t\tcprintf(&#34;ebp:%08x eip:%08x args:&#34;, ebp, eip);\n\t\tfor (int j = 0; j &lt; 4; j&#43;&#43;) {\n\t\t\tcprintf(&#34;%08x &#34;, *(uint32_t*)(ebp &#43; 8 &#43; 4 * j));\n\t\t}\n\t\tcprintf(&#34;\\n&#34;);\n\t\tprint_debuginfo(eip - 1); //(eip-1) belongs to the call instruction\n\t\tif (i == 3) {\n\t\t\teip = tf-&gt;tf_eip;\n\t\t\tebp = tf-&gt;tf_esp;\n\t\t} else {\n\t\t\teip = *(uint32_t*)(ebp &#43; 4);\n\t\t\tebp = *(uint32_t*)ebp;\n\t\t}\n\t}\n}</pre>\n<p>由于调用顺序是 lab1_switch_to_kernel, 中断服务程序, __alltraps, trap, trap_dispatch, print_trapStackframe, 所以中间设置了常数3&#xff0c;表示将内核态的4个函数信息打印出后再跳转到用户态。</p>\n<p>结果如下&#xff1a;</p>\n<p></p>\n<p>&#43;&#43;&#43; switch to kernel mode &#43;&#43;&#43;</p>\n<p>ebp:0010fc98 eip:00100b03 args:0010fcf4 00000000 00000000 00000000</p>\n<p>kern/debug/kdebug.c:320: print_trapStackframe&#43;21</p>\n<p>ebp:0010fcc8 eip:00101e9d args:0010fcf4 00000000 00000000 00000000</p>\n<p>kern/trap/trap.c:185: trap_dispatch&#43;368</p>\n<p>ebp:0010fce8 eip:00101f4c args:0010fcf4 00000000 00010094 00007bb8</p>\n<p>kern/trap/trap.c:213: trap&#43;16</p>\n<p>ebp:00007bb8 eip:001029da args:0010e560 00000100 00007be8 0010006e</p>\n<p>kern/trap/trapentry.S:24: &lt;unknown&gt;&#43;0</p>\n<p>ebp:00007bb8 eip:001001b9 args:0010e560 00000100 00007be8 0010006e</p>\n<p>kern/init/init.c:99: lab1_switch_to_kernel&#43;4</p>\n<p>ebp:00007bc8 eip:001001f8 args:00000000 00000000 00000000 00103600</p>\n<p>kern/init/init.c:114: lab1_switch_test&#43;57</p>\n<p>ebp:00007be8 eip:0010006e args:00000000 00000000 00000000 00007c4f</p>\n<p>kern/init/init.c:40: kern_init&#43;109</p>\n<p>ebp:00007bf8 eip:00007d6e args:c031fcfa c08ed88e 64e4d08e fa7502a8</p>\n<p>&lt;unknow&gt;:  -- 0x00007d6d --</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>", "created": "2019-03-09T04:14:21Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "feedback", "tag_good": [], "uid": "jsiyf76cGzf9", "children": [], "tag_good_arr": [], "id": "jt0z5rvbu4z375", "updated": "2019-03-09T04:14:21Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jsxz60gvq7o1l0", "updated": "2019-03-07T01:51:14Z", "config": {}}, {"anon": "full", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "这个问题是什么意思呀...我是陈老师班的&#xff0c;有点懵", "created": "2019-03-08T08:47:24Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "followup", "tag_good": [], "uid_a": "a_2", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>谁有兴趣&#xff0c;都可以尝试一下。后面的实验中&#xff0c;一定会用到这个的。</p>", "created": "2019-03-15T00:53:48Z", "bucket_order": 56, "bucket_name": "Week 3/10 - 3/16", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "jt9cmyshi1b34u", "updated": "2019-03-15T00:53:48Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jszth240d1t2cn", "updated": "2019-03-08T08:47:24Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>rCore 中 RISCV32 的实现 <a href=\"https://github.com/oscourse-tsinghua/rcore_plus/pull/1/commits/090796d3f0e91b8442dc8a52f85da64f46b32531\">https://github.com/oscourse-tsinghua/rcore_plus/pull/1/commits/090796d3f0e91b8442dc8a52f85da64f46b32531</a></p>\n<p></p>", "created": "2019-03-08T23:39:22Z", "bucket_order": 57, "bucket_name": "Week 3/3 - 3/9", "type": "followup", "tag_good": [], "uid": "jshne0d1gvw4mr", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>标记为“优秀回答”。</p>", "created": "2019-03-15T00:54:21Z", "bucket_order": 56, "bucket_name": "Week 3/10 - 3/16", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "jt9cnoh19mv3ou", "updated": "2019-03-15T00:54:21Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jt0pc50isql2p", "updated": "2019-03-08T23:39:22Z", "config": {}}], "tag_good_arr": [], "id": "jsxy9j588lv2xx", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 7, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169599860, "default_anonymity": "no"}, "error": null, "aid": "kyv0r5o4ylu1hl"}