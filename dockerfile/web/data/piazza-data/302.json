{"result": {"folders": ["lab3"], "nr": 302, "data": {"embed_links": []}, "created": "2015-04-14T08:08:55Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i72xyao1QhO", "anon": "no", "when": "2015-04-14T08:08:55Z", "data": "i8h12jkah9z4py", "type": "create"}, {"uid": "i72xyao1QhO", "anon": "no", "when": "2015-04-14T08:22:42Z", "data": "i8h1k9hsicg6ve", "type": "update"}, {"uid": "i72xyao1QhO", "anon": "no", "when": "2015-04-14T09:43:07Z", "data": "i8h4fopc9rq6en", "type": "update"}, {"uid": "hs2swpdtr91gu", "anon": "no", "when": "2015-04-16T03:40:11Z", "data": "i8jmcn20ypx7i3", "type": "update"}, {"to": "i8h12jk8q0c4px", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-04-19T08:22:03Z", "type": "followup"}, {"uid": "hs2swpdtr91gu", "anon": "no", "when": "2015-04-19T12:22:05Z", "data": "i8ofbdjgko13zs", "type": "update"}, {"uid": "hs2swpdtr91gu", "anon": "no", "when": "2015-04-19T12:22:17Z", "data": "i8ofbmuiejn5ea", "type": "update"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hs2swpdtr91gu", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-19T12:22:17Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                  </p>\n<p>     *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题,</p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}, {"anon": "no", "uid": "hs2swpdtr91gu", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-19T12:22:05Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                  </p>\n<p>     *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题,</p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}, {"anon": "no", "uid": "hs2swpdtr91gu", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-16T03:40:11Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                  </p>\n<p>     *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题,</p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}, {"anon": "no", "uid": "i72xyao1QhO", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-14T09:43:07Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                  </p>\n<p>     *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题,</p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}, {"anon": "no", "uid": "i72xyao1QhO", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-14T08:22:42Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                   *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题,</p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}, {"anon": "no", "uid": "i72xyao1QhO", "subject": "lab3中的一个bug?还是我们自己应该改写的?(关于上次做扩展实验中提到的可交换页表中最后一项0x300,0x400,0x500无法解释的问题))", "created": "2015-04-14T08:08:55Z", "content": "<p>上次周日的时候, 问了一个问题, 如下:</p>\n<h1>在页面交换链表中出现了一个不在内存中的条目?</h1>\n<p>在可交换页表链表中的最后出现了0x300,0x400,0x500的值, 特别奇怪, 因为我可控制的修改pte的地方很少, 就只有get_pte这个函数, 其次就是swap_in, swap_out, 在仔细检查了get_pte函数确定没问题, 那就只有wap_in, swap_out了,</p>\n<p>在swap_out中, 将页存储到文件中去的时候, 会对pte进行修改, 改成文件偏移信息,如下:                   *ptep = (page-&gt;pra_vaddr/PGSIZE&#43;1)&lt;&lt;8;</p>\n<p>然而在swap_in中, 安装*ptep读取了以后, 却并没有将其改回来,如下:</p>\n<p>int<br />swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)<br />{<br />     struct Page *result = alloc_page();<br />     assert(result!=NULL);<br /><br />     pte_t *ptep = get_pte(mm-&gt;pgdir, addr, 0);<br />     // cprintf(&#34;SWAP: load ptep %x swap entry %d to vaddr 0x%08x, page %x, No %d\\n&#34;, ptep, (*ptep)&gt;&gt;8, addr, result, (result-pages));<br />    <br />     int r;<br />     if ((r = swapfs_read((*ptep), result)) != 0)<br />     {<br />        assert(r!=0);<br />     }<br />     cprintf(&#34;swap_in: load disk swap entry %d with swap_page in vadr 0x%x\\n&#34;, (*ptep)&gt;&gt;8, addr);<br />     *ptr_result=result;<br />     return 0;<br />}</p>\n<p>以至于我在打印链表的时候, 页表信息还是原来的文件偏移, (难道这个是要我们自己改的么?那就糗大了)</p>\n<p>最终可以打印换出的值为:</p>\n<p>-------------swap out:pte(30a007), change to pte(400)-------------</p>\n<p>-------------swap out:pte(309007), change to pte(300)-------------<br /><br />这个400和300就是文件偏移信息,直接赋值到页表中去了, 所以产生了上述问题, </p>\n<p>此问题对于做fifo完全没有问题, 也会通过代码检查, 但是在做clock的时候, 会发现最后一项就是满足的,但是却找不到对应的页!!!!</p>"}], "type": "note", "tags": ["lab3", "student", "unanswered"], "tag_good": [{"role": "instructor", "name": "Yu Chen", "endorser": {}, "admin": true, "photo": "1378950179_35.png", "id": "hcrrjuyequh4bt", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hcrrjuyequh4bt/1378950179_35.png", "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 141, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>调用swap_in函数的do_pgfault函数&#xff0c;还紧接着调用了</p>\n<p>page_insert(mm-&gt;pgdir, page, addr, perm);</p>\n<p>swap_map_swappable(mm, addr, page, 1);</p>\n<p>来进一步修改了pte的内容。</p>\n<p>所以&#xff0c;你可能需要对ucore代码进行修改&#xff0c;完成clock相关的页置换算法。</p>\n<p></p>\n<p>如果有问题&#xff0c;可以进一步交换意见。</p>", "created": "2015-04-19T08:22:03Z", "bucket_order": 264, "bucket_name": "Week 4/12 - 4/18", "type": "followup", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "i8o6qosz8u94dz", "updated": "2015-04-19T08:22:03Z", "config": {}}], "tag_good_arr": ["hcrrjuyequh4bt"], "id": "i8h12jk8q0c4px", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 5, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167605379, "default_anonymity": "no"}, "error": null, "aid": "kyuzkepva667lw"}