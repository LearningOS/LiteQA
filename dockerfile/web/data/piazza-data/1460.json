{"result": {"history_size": 3, "folders": ["lab6"], "nr": 1460, "data": {"embed_links": []}, "created": "2020-05-02T01:06:08Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "jw772s2fp4hU", "data": "k9oxdi7k84v5a6", "v": "all", "type": "create", "when": "2020-05-02T01:06:08Z"}, {"anon": "no", "uid": "jw772s2fp4hU", "data": "k9oxetqhn766a2", "type": "update", "when": "2020-05-02T01:07:10Z"}, {"anon": "no", "uid": "jw772s2fp4hU", "data": "k9oxigoacsr7d5", "type": "update", "when": "2020-05-02T01:09:59Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "jw772s2fp4hU", "subject": "时钟中断对进程调度的影响", "created": "2020-05-02T01:09:59Z", "content": "<p><img src=\"/img/1460-5734fa52965d3ffb.png\" alt=\"\" /></p>\n<p></p>\n<p>以上是一个ucore中&#xff0c;大概的一个关于进程调度和状态信息改变的图表&#xff0c;下面进行一些补充说明。</p>\n<p>进程调度的本质就是切换堆栈信息、寄存器信息和EIP&#xff08;控制流&#xff09;。</p>\n<p>1、用户进程执行并发生时钟中断时&#xff0c;trap才有可能执行schedule或do_exit方法。当发生时钟中断时&#xff0c;run_timer_list一定执行。</p>\n<p>2、关于schedule&#xff0c;简单的说&#xff0c;就是将当前进程放入就绪队列&#xff0c;并且从就绪队列取出下一个进程&#xff08;此处将会用到进程调度算法&#xff09;&#xff0c;使用proc_run执行进程切换操作。&#xff08;如果就绪队列没有进程&#xff0c;将会执行idle进程&#xff09;</p>\n<p>3、关于进程状态变为SLEEPING的方法有三个&#xff0c;其中只有wait_current_set方法产生的SLEEPING状态会进入堵塞队列&#xff0c;当发生有效&#xff08;非&#39;\\0&#39;&#xff09;键盘中断时有可能恢复执行。do_sleep是为进程设置了一个定时器&#xff0c;每次时钟中断时都会减少定时器的值&#xff0c;当值为0时&#xff0c;修改状态为RUNNABLE&#xff0c;将能够参与之后的进程调度。do_wait会在进程在等待子进程结束执行之后&#xff0c;才会返回到调用do_wait的位置。进程在等待子进程时&#xff0c;将会进入SLEEPING状态&#xff0c;并设置WT_CHILD标记&#xff0c;当前子进程退出时&#xff08;do_exit&#xff09;&#xff0c;会检查父进程是否有WT_CHILD标记&#xff0c;如果有的话&#xff0c;会唤醒父进程。</p>\n<p>4、wakeup_proc主要是用于将进程状态修改为RUNNABLE&#xff0c;如果修改的不是当前执行的进程&#xff0c;且不在就绪队列&#xff0c;还会将它放入就绪队列中。</p>\n<p>5、只有0号进程不是通过kernel_thread进行创建的&#xff0c;1号进程以0号进程为模板进行fork&#xff0c;2号进程&#xff08;sh&#xff09;以1号进程为模板进行fork&#xff0c;并通过do_execve切换为自己的控制流。sh将会通过do_execve执行用户态程序&#xff0c;其他用户进程都是由sh进程进行创建&#xff08;fork&#xff09;的&#xff08;如果有的话&#xff09;。</p>\n<p>6、从就绪队列取出一个进程&#xff08;当前进程&#xff09;&#xff0c;交给CPU执行控制流是由schedule方法进行操作的&#xff0c;并不是wakeup_proc。图中只是为了说明进程状态改变&#xff0c;画的大致的大箭头。</p>\n<p></p>\n<p>如果还有其他的补充说明或订正&#xff0c;欢迎大家积极补充和修改ヾ(≧▽≦*)o</p>\n<p>我是昨天晚上看的&#xff0c;可能遗漏或者搞错了一些部分。</p>\n<p></p>\n<p></p>"}, {"anon": "no", "uid": "jw772s2fp4hU", "subject": "时钟中断对进程调度的影响", "created": "2020-05-02T01:07:10Z", "content": "<p><img src=\"/img/1460-5734fa52965d3ffb.png\" alt=\"\" /></p>\n<p></p>\n<p>以上是一个ucore中&#xff0c;大概的一个关于进程调度和状态信息改变的图表&#xff0c;下面进行一些补充说明。</p>\n<p>进程调度的本质就是切换堆栈信息、寄存器信息和EIP&#xff08;控制流&#xff09;。</p>\n<p>1、用户进程执行并发生时间中断时&#xff0c;trap才有可能执行schedule或do_exit方法。</p>\n<p>2、关于schedule&#xff0c;简单的说&#xff0c;就是将当前进程放入就绪队列&#xff0c;并且从就绪队列取出下一个进程&#xff08;此处将会用到进程调度算法&#xff09;&#xff0c;使用proc_run执行进程切换操作。&#xff08;如果就绪队列没有进程&#xff0c;将会执行idle进程&#xff09;</p>\n<p>3、关于进程状态变为SLEEPING的方法有三个&#xff0c;其中只有wait_current_set方法产生的SLEEPING状态会进入堵塞队列&#xff0c;当发生有效&#xff08;非&#39;\\0&#39;&#xff09;键盘中断时有可能恢复执行。do_sleep是为进程设置了一个定时器&#xff0c;每次时钟中断时都会减少定时器的值&#xff0c;当值为0时&#xff0c;修改状态为RUNNABLE&#xff0c;将能够参与之后的进程调度。do_wait会在进程在等待子进程结束执行之后&#xff0c;才会返回到调用do_wait的位置。进程在等待子进程时&#xff0c;将会进入SLEEPING状态&#xff0c;并设置WT_CHILD标记&#xff0c;当前子进程退出时&#xff08;do_exit&#xff09;&#xff0c;会检查父进程是否有WT_CHILD标记&#xff0c;如果有的话&#xff0c;会唤醒父进程。</p>\n<p>4、wakeup_proc主要是用于将进程状态修改为RUNNABLE&#xff0c;如果修改的不是当前执行的进程&#xff0c;且不在就绪队列&#xff0c;还会将它放入就绪队列中。</p>\n<p>5、只有0号进程不是通过kernel_thread进行创建的&#xff0c;1号进程以0号进程为模板进行fork&#xff0c;2号进程&#xff08;sh&#xff09;以1号进程为模板进行fork&#xff0c;并通过do_execve切换为自己的控制流。sh将会通过do_execve执行用户态程序&#xff0c;其他用户进程都是由sh进程进行创建&#xff08;fork&#xff09;的&#xff08;如果有的话&#xff09;。</p>\n<p>6、从就绪队列取出一个进程&#xff08;当前进程&#xff09;&#xff0c;交给CPU执行控制流是由schedule方法进行操作的&#xff0c;并不是wakeup_proc。图中只是为了说明进程状态改变&#xff0c;画的大致的大箭头。</p>\n<p></p>\n<p>如果还有其他的补充说明或订正&#xff0c;欢迎大家积极补充和修改ヾ(≧▽≦*)o</p>\n<p>我是昨天晚上看的&#xff0c;可能遗漏或者搞错了一些部分。</p>\n<p></p>\n<p></p>"}, {"anon": "no", "uid": "jw772s2fp4hU", "subject": "时钟中断对进程调度的影响", "created": "2020-05-02T01:06:08Z", "content": "<p><img src=\"/img/1460-5734fa52965d3ffb.png\" alt=\"\" /></p>\n<p></p>\n<p>以上是一个ucore中&#xff0c;大概的一个关于进程调度和状态信息改变的图表&#xff0c;下面进行一些补充说明。</p>\n<p>进程调度的本质就是切换堆栈信息、寄存器信息和EIP&#xff08;控制流&#xff09;。</p>\n<p>1、用户进程执行并发生时间中断时&#xff0c;trap才有可能执行schedule或do_exit方法。</p>\n<p>2、关于schedule&#xff0c;简单的说&#xff0c;就是将当前进程放入就绪队列&#xff0c;并且从就绪队列取出下一个进程&#xff08;此处将会用到进程调度算法&#xff09;&#xff0c;使用proc_run执行进程切换操作。&#xff08;如果就绪队列没有进程&#xff0c;将会执行idle进程&#xff09;</p>\n<p>3、关于进程状态变为SLEEPING的方法有三个&#xff0c;其中只有wait_current_set方法产生的SLEEPING状态会进入堵塞队列&#xff0c;当发生有效&#xff08;非&#39;\\0&#39;&#xff09;键盘中断时有可能恢复执行。do_sleep是为进程设置了一个定时器&#xff0c;每次时钟中断时都会减少定时器的值&#xff0c;当值为0时&#xff0c;修改状态为RUNNABLE&#xff0c;将能够参与之后的进程调度。do_wait会在进程在等待子进程结束执行之后&#xff0c;才会返回到调用do_wait的位置。进程在等待子进程时&#xff0c;将会进入SLEEPING状态&#xff0c;并设置WT_CHILD标记&#xff0c;当前子进程退出时&#xff08;do_exit&#xff09;&#xff0c;会检查父进程是否有WT_CHILD标记&#xff0c;如果有的话&#xff0c;会唤醒父进程。</p>\n<p>4、wakeup_proc主要是用于将进程状态修改为RUNNABLE&#xff0c;如果修改的不是当前执行的进程&#xff0c;且不在就绪队列&#xff0c;还会将它放入就绪队列中。</p>\n<p>5、只有0号进程不是通过kernel_thread进行创建的&#xff0c;1号进程以0号进程为模板进行fork&#xff0c;2号进程&#xff08;sh&#xff09;以1号进程为模板进行fork&#xff0c;并通过do_execve切换为自己的控制流。sh将会通过do_execve执行用户态程序&#xff0c;其他用户进程都是由sh进程进行创建&#xff08;fork&#xff09;的&#xff08;如果有的话&#xff09;。</p>\n<p>6、从就绪队列取出一个进程&#xff08;当前进程&#xff09;&#xff0c;交给CPU执行控制流是由schedule方法进行操作的&#xff0c;并不是wakeup_proc。图中只是为了说明进程状态改变&#xff0c;画的大致的大箭头。</p>\n<p></p>\n<p>如果还有其他的补充说明或订正&#xff0c;欢迎大家积极补充和修改ヾ(≧▽≦*)o</p>\n<p>我是昨天晚上看的&#xff0c;可能遗漏或者搞错了一些部分。</p>\n<p></p>\n<p></p>"}], "type": "note", "tags": ["lab6", "student", "unanswered"], "tag_good": [{"role": "student", "name": "Amos", "endorser": {}, "admin": false, "photo": null, "id": "k697omoan5s4v8", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "hyjksdfh", "endorser": {}, "admin": false, "photo": null, "id": "kacgyw75von62x", "photo_url": null, "us": false, "facebook_id": null}, {"role": "student", "name": "zhangyonnghui", "endorser": {}, "admin": false, "photo": null, "id": "kbz46f60ldp6k7", "photo_url": null, "us": false, "facebook_id": null}], "unique_views": 89, "children": [], "tag_good_arr": ["k697omoan5s4v8", "kacgyw75von62x", "kbz46f60ldp6k7"], "id": "k9oxdi7irhy5a5", "config": {"seen": {"122": 7, "551": 5, "1369": 9, "1038": 3, "1036": 1, "1222": 8, "1431": 6, "1121": 0, "164": 4, "340": 2}}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 1, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643170104463, "default_anonymity": "no"}, "error": null, "aid": "kyv11z0vsa61l7"}