{"result": {"history_size": 1, "folders": ["lab1"], "nr": 1459, "data": {"embed_links": []}, "created": "2020-05-01T09:59:23Z", "bucket_order": 3, "no_answer_followup": 3, "change_log": [{"anon": "no", "uid": "k9at7zunumy4d1", "data": "k9o0zf71g8x6bf", "v": "all", "type": "create", "when": "2020-05-01T09:59:23Z"}, {"anon": "full", "data": "k9sjhggia8w3k0", "to": "k9o0zf6yjzt6be", "type": "s_answer", "when": "2020-05-04T13:48:23Z", "uid_a": "a_0"}, {"anon": "no", "uid": "k9at7zunumy4d1", "to": "k9o0zf6yjzt6be", "type": "followup", "when": "2020-05-05T15:41:03Z"}, {"anon": "no", "uid": "k1r6zegdsqw5gg", "to": "k9o0zf6yjzt6be", "type": "followup", "when": "2020-06-13T03:06:43Z"}, {"anon": "no", "uid": "khkbdmtnri2vw", "to": "k9o0zf6yjzt6be", "type": "followup", "when": "2021-01-20T02:41:45Z", "cid": "kk4tlifxlo68"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "k9at7zunumy4d1", "subject": "关于lab1中elfhdr结构体何时定义的疑问", "created": "2020-05-01T09:59:23Z", "content": "<md>`#define ELFHDR          ((struct elfhdr *)0x10000)`\n这是对elfhdr的定义，也就是说直接从0x10000处读取elfhdr结构体，那么问题来了，这个结构体是何时写到0x10000处的？\n我搜索了源代码。但是好像都没有看到对这个结构体的具体定义。</md>"}], "type": "question", "tags": ["lab1", "student"], "tag_good": [], "unique_views": 101, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2020-05-04T13:48:23Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "history": [{"anon": "full", "uid_a": "a_0", "subject": "", "created": "2020-05-04T13:48:23Z", "content": "gcc编译出来就是ELF文件格式啊&#xff0c;和EXE文件一样。从某种意义上可以说定义在gcc里吧\nbootloader从磁盘中加载的就是ucore的ELF文件&#xff0c;并且通过ELF文件的定义找到程序入口点跳转进去"}], "type": "s_answer", "tag_endorse_arr": [], "children": [], "id": "k9sjhggdxsh3jz", "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<md>我的问题描述的可能不够清楚，我的疑惑是：\nucore是怎么知道要从0x10000读elfhdr的？\n或者说elfhdr是怎么写到0x10000处的？</md>", "created": "2020-05-05T15:41:03Z", "bucket_order": 52, "bucket_name": "Week 5/3 - 5/9", "type": "followup", "tag_good": [], "uid": "k9at7zunumy4d1", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "k9u2y7r6qyt427", "updated": "2020-05-05T15:41:03Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<md>仔细读一下代码你会发现，其实`ELFHDR`是要写入的destination，在`bootmain`的第一行调用`readseg`函数写入的</md>", "created": "2020-06-13T03:06:43Z", "bucket_order": 47, "bucket_name": "Week 6/7 - 6/13", "type": "followup", "tag_good": [], "uid": "k1r6zegdsqw5gg", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "kbd26cjy1fn3wg", "updated": "2020-06-13T03:06:43Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>我认为应该是在  tools/kernel.ld  这个文件中写到0x10000 的&#xff0c; 注意第10行&#xff1a;</p>\n<p>  1 /* Simple linker script for the JOS kernel.<br />  2    See the GNU ld &#39;info&#39; manual (&#34;info ld&#34;) to learn the syntax. */<br />  3 <br />  4 OUTPUT_FORMAT(&#34;elf32-i386&#34;, &#34;elf32-i386&#34;, &#34;elf32-i386&#34;)<br />  5 OUTPUT_ARCH(i386)<br />  6 ENTRY(kern_init)<br />  7 <br />  8 SECTIONS {<br />  9         /* Load the kernel at this address: &#34;.&#34; means the current address */<br /> 10         . = 0x100000;<br /> 11 <br /> 12         .text : {<br /> 13                 *(.text .stub .text.* .gnu.linkonce.t.*)<br /> 14         }<br /> 15 </p>", "created": "2021-01-20T02:41:45Z", "bucket_order": 15, "bucket_name": "Week 1/17 - 1/23", "type": "followup", "tag_good": [], "uid": "khkbdmtnri2vw", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "kk4tlifxlo68", "updated": "2021-01-20T02:41:45Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "k9o0zf6yjzt6be", "config": {"seen": {"485": 0, "1337": 6, "444": 9, "840": 3, "1378": 1, "930": 2, "490": 4, "1308": 5, "97": 7, "1119": 8}}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643170102902, "default_anonymity": "no"}, "error": null, "aid": "kyv11xtielq1c0"}