{"result": {"history_size": 1, "folders": ["lecture7"], "nr": 713, "data": {"embed_links": []}, "created": "2016-03-21T00:24:24Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "ie7xy71bn7b1s2", "anon": "no", "when": "2016-03-21T00:24:24Z", "data": "im192hoacik59i", "type": "create"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "ie7xy71bn7b1s2", "subject": "第七讲的一个遗留问题解答", "created": "2016-03-21T00:24:24Z", "content": "<p>第七讲当时有同学有一个遗留问题:</p>\n<p>重新加载GDT之后, 为什么cs:ip没有跑飞而是能够正常继续执行?</p>\n<p>OSDev Wiki下给出了答案如下(http://wiki.osdev.org/GDT_Tutorial):</p>\n<h3>Reload segment registers</h3>\n<p>Whatever you do with the GDT has no effect on the CPU until you load selectors into segment registers. You can do this using:</p>\n<div dir=\"ltr\">\n<div>\n<pre>reloadSegments:\n   ; Reload CS register containing code selector:\n   JMP   0x08:reload_CS ; 0x08 points at the new code selector\n.reload_CS:\n   ; Reload data segment registers:\n   MOV   AX, 0x10 ; 0x10 points at the new data selector\n   MOV   DS, AX\n   MOV   ES, AX\n   MOV   FS, AX\n   MOV   GS, AX\n   MOV   SS, AX\n   RET</pre>\n</div>\n</div>"}], "type": "note", "tags": ["lecture7", "student"], "tag_good": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 112, "children": [], "tag_good_arr": ["hdjonbiyfs62ie"], "id": "im192ho6mn559h", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168347462, "default_anonymity": "no"}, "error": null, "aid": "kyv00bbaw9v49o"}