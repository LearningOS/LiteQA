{"result": {"history_size": 2, "folders": ["lab2"], "nr": 554, "data": {"embed_links": []}, "created": "2016-01-24T14:13:49Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-24T14:13:49Z", "data": "ijsmlkqr2r6wj", "type": "create"}, {"to": "ijsmlkqovtn6wi", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-01-24T15:18:41Z", "data": "ijsox069lj33at", "type": "i_answer"}, {"to": "ijsmlkqovtn6wi", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-24T15:54:55Z", "type": "followup"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-24T15:59:34Z", "data": "ijsqdksj3wq3qi", "type": "update"}, {"to": "ijsmlkqovtn6wi", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-01-24T16:08:49Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-24T16:47:49Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "iezimbvr4Kl", "anon": "no", "when": "2016-01-25T03:28:37Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "iezimbvr4Kl", "anon": "no", "when": "2016-01-25T03:36:10Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-25T04:08:16Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-01-25T14:41:32Z", "type": "feedback"}, {"to": "ijsmlkqovtn6wi", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-01-25T15:50:41Z", "type": "feedback"}, {"anon": "full", "to": "ijsmlkqovtn6wi", "type": "feedback", "when": "2018-03-06T09:11:12Z", "uid_a": "a_0"}, {"anon": "no", "uid": "jf86jf5n2SKn", "to": "ijsmlkqovtn6wi", "type": "followup", "when": "2018-03-28T03:20:38Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab2_init_memmap的疑问", "created": "2016-01-24T15:59:34Z", "content": "<p></p><pre>default_init_memmap(struct page *base, size_t n){<br />         ......<br />\tstruct page *p=base;<br />\tfor(;p!=base&#43;n;p&#43;&#43;){<br />\t......<br />\t......<br />\tlist_add(&amp;free_list,&amp;(p-&gt;page_link));<br />\t}<br />\t......<br />\t......<br />}<br />老师&#xff0c;各位同学&#xff1a;<br />\t您好&#xff01;我想就lab2的memmap函数初始化这个咨询一下&#xff0c;我把有疑问的代码贴在上上面了&#xff0c;我的看法是这样的&#xff1a;<br />\t1、此函数接收的是一个包含N页的内存块的基地址&#xff0c;我们要初始化每页的page结构体&#xff0c;我觉得每个page结构体应当是存放在这一页的头部&#xff0c;但是我看答案是通过p&#43;&#43;来进行递增的而不是通过增加4k&#xff0c;这样的话&#xff0c;所有page结构体就会存放在第一页中。<br />\t2、为什么要把每个p-&gt;page_link全部添加进free_list中&#xff0c;难道不是把第一页加进去就可以了么&#xff1f;<br /><br />麻烦老师和各位同学指导我想错的地方&#xff0c;谢谢&#xff0c;个人自学每个人问实在太难受。<br /><br /><br /><br /><br /><br /><br /><br /></pre>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab2_init_memmap的疑问", "created": "2016-01-24T14:13:49Z", "content": "<p></p><pre>default_init_memmap(struct page *base, size_t n){<br />         ......<br />\tstruct page *p=base;<br />\tfor(;p!=base&#43;n;p&#43;&#43;){<br />\t......<br />\t......<br />\tlist_add(&amp;free_list,&amp;(p-&gt;page_link));<br />\t}<br />\t......<br />\t......<br />}<br />老师&#xff0c;各位同学&#xff1a;<br />\t您好&#xff01;我想就lab2的memmap函数初始化这个咨询一下&#xff0c;我把有疑问的代码贴在上上面了&#xff0c;我的看法是这样的&#xff1a;<br />\t1、此函数接收的是一个包含N页的内存块的基地址&#xff0c;我们要初始化每页的page结构体&#xff0c;我觉得每个page结构体应当是存放在这一页的头部&#xff0c;但是我看答案是通过p&#43;&#43;来进行递增的而不是通过增加4k&#xff0c;这样的话&#xff0c;所有page结构体就会存放在第一页中。<br />\t2、为什么要把每个p-&gt;page_link全部添加进free_list中&#xff0c;难道不是把第一页加进去就可以了么&#xff1f;<br /><br />麻烦老师和各位同学指导我想错的地方&#xff0c;谢谢&#xff0c;个人自学每个人问实在太难受。<br /><br /><br /><br /><br /><br /><br /><br /></pre>"}], "type": "note", "tags": ["lab2", "student"], "tag_good": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 176, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2016-01-24T15:18:41Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "wangpeng", "endorser": {}, "admin": false, "photo": null, "id": "ijf9jcjt7oslj", "photo_url": null, "us": false, "facebook_id": null}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2016-01-24T15:18:41Z", "content": "<p>空闲物理页信息不是放在空闲页中的&#xff0c;而是内核的全局数据结构中的。所以&#xff0c;这里不是增加4KB的。</p>\n<p></p>\n<p>对于第二个问题&#xff0c;建议仔细看一下page结构体的各字段含义。</p>\n<p></p>\n<p>这个讨论区就是最好的询问地方。建议在问之前&#xff0c;按标签查一下是否有人问过类似的问题。这里已积累了几百个问题讨论了。应该常见的问题都有了。</p>"}], "type": "i_answer", "tag_endorse_arr": ["ijf9jcjt7oslj"], "children": [], "id": "ijsox066j033as", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>老师&#xff1a;</p>\n<p>  我就第一个问题还想麻烦老师指点一下&#xff0c;我的理解page指针存在内核中&#xff0c;比如第一次循环指针的值为base的值&#xff0c;也就是说page-&gt;ref,flag,property和page_lin这几个值存在base这个地址后面的几个内存单元上&#xff0c;这几个单元在空白物理内存中&#xff0c;然后page指针加一&#xff0c;这样的话下一个page数组指向的位置是base指针后面几个内存单元上&#xff08;这里不是一个页的开始位置&#xff09;&#xff0c;我看分配内存函数&#xff0c;返回的是page指针的值&#xff0c;这样的话&#xff0c;page指针本身就应该是页的开始位置。</p>\n<p>   这个问题我想了一天了&#xff0c;没想明白&#xff0c;还是再麻烦老师一下&#xff0c;多谢</p>", "created": "2016-01-24T15:54:55Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "followup", "tag_good": [], "uid": "ijf9jcjt7oslj", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>好的。请把你对struct page结构的所有字段的理解描述一下&#xff0c;然后告诉我是否理解了。</p>\n<p></p>\n<p>也欢迎其他同学参与这个问题的讨论。</p>", "created": "2016-01-24T16:08:49Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "ijsqpha4rma7kf", "updated": "2016-01-24T16:08:49Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我对page的理解是&#xff1a;ref是代表这个页被多少使用者共享&#xff0c;flag代表是否可用来分配&#xff0c;property代表有几个页可用&#xff0c;page_link链接的是其他可用页的page_link</p>\n<p></p>\n<p>我的问题可能描述的不够清楚&#xff1a;</p>\n<p>      现在我假设base值是4096&#xff0c;页数是2个&#xff0c;page结构体大小为20字节&#xff0c;ref,flag,property和page_link各5字节&#xff08;数字是假设长度&#xff0c;实际上不是&#xff09;&#xff0c;第一次循环指针p=4096&#xff0c;,for循环体里进行设置&#xff0c;修改的位置分别是4096&#43;0~4&#xff0c;4096&#43;5~9&#xff0c;4096&#43;10~14&#xff0c;4096&#43;15~19&#xff0c;然后我们把位于4096&#43;4096&#43;15~19里的双向指针节点加入到了free list中&#xff0c;通过这个我们能找到这个页起始位置4096&#xff0c;   </p>\n<p>       我不理解的就是接下来的这个了     </p>\n<p>       p&#43;&#43;,因为结构体长度为20字节&#xff0c;则p现在等于4096&#43;20&#xff0c;按照上面的描述&#xff0c;最终加入free_list中的双向指针节点是4096&#43;35~39&#xff0c;通过他我们找到的空闲页位置是4096&#43;20而不是第二个空闲页的头部8192&#xff0c;而且这两些信息都在第一个空闲页中。</p>\n<p>       老师看一下我分析错误的地方在哪&#xff0c;谢谢</p>\n<p></p>", "created": "2016-01-24T16:47:49Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "ijf9jcjt7oslj", "children": [], "tag_good_arr": [], "id": "ijss3mlqkc36bx", "updated": "2016-01-24T16:47:49Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>如果你说的是在分配页时&#xff0c;找到的页的空闲头部不是8192&#xff0c;那么请查看default_alloc_pages函数和le2page宏。</p>", "created": "2016-01-25T03:28:37Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "iezimbvr4Kl", "children": [], "tag_good_arr": [], "id": "ijtezphu3sl1k3", "updated": "2016-01-25T03:28:37Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p></p>", "created": "2016-01-25T03:36:10Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "iezimbvr4Kl", "children": [], "tag_good_arr": [], "id": "ijtf9ezzzlh7j3", "updated": "2016-01-25T03:36:10Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>&#64;szqxzh&#xff0c;我的问题是这样&#xff0c;每个page指针的值是否是一个页的起始位置&#xff0c;以及page的信息存放位置在哪里&#xff0c;如果page指针是起始位置为什么循环是加一而不是加4k</p>\n<p></p>\n<p>按照我之前假设的数值&#xff0c;我分析init_memmap第二次循环&#xff0c;加一之后page指针的值并不是起始页的位置&#xff08;因为加1而不是加4k&#xff0c;循环1 p=4096&#xff0c;循环2 p=4096&#43;20&#xff09;&#xff0c;且2个page的信息全部存在第一页的头部&#xff0c;如果第一页被分出去了&#xff0c;信息不就会覆盖么&#xff1f;</p>\n<p></p>\n<p>我看了le2page&#xff0c;觉得page指针应该就是空白页的起始位置吧&#xff0c;这个函数通过page_link的地址减去其在结构体里的偏移得到起始值</p>\n<p></p>\n<p>谢谢指点</p>", "created": "2016-01-25T04:08:16Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "ijf9jcjt7oslj", "children": [], "tag_good_arr": [], "id": "ijtgep434929m", "updated": "2016-01-25T04:08:16Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>谢谢老师和同学&#xff0c;我看的不仔细&#xff0c;忽略了函数调用时传递的参数也调用了pa2page这个函数</p>", "created": "2016-01-25T14:41:32Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "ijf9jcjt7oslj", "children": [], "tag_good_arr": [], "id": "iju3135szpx3k7", "updated": "2016-01-25T14:41:32Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我对这个交流给好评。这正是我想看到的网上学习氛围。</p>", "created": "2016-01-25T15:50:41Z", "bucket_order": 254, "bucket_name": "Week 1/24 - 1/30", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "iju5i054ma85kk", "updated": "2016-01-25T15:50:41Z", "config": {}}, {"anon": "full", "folders": [], "data": {"embed_links": null}, "subject": "<p>&#64;wangpeng同学&#xff0c;您方便的话&#xff0c;若是能解释一下您忽略的地方就好了&#xff01;</p>", "created": "2018-03-06T09:11:12Z", "bucket_order": 144, "bucket_name": "Week 3/4 - 3/10", "type": "feedback", "tag_good": [], "uid_a": "a_0", "children": [], "tag_good_arr": [], "id": "jeffq1momxx4dp", "updated": "2018-03-06T09:11:12Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "ijsq7lapyom1wc", "updated": "2016-01-24T15:54:55Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "不知道我的理解对不对,也是自学.写在这里大家讨论一下. \n1. 首先是default_init_memmap里为什么是把每一个页加入free_list:  如果我先把以base为起始页的空闲块连起来,然后把base 用list_add加入free_list其实是有错的.这样base-&gt;pageLink-&gt;;next 指向的不是下一个页面.而是free_list这个头.要注意这个双向的环状链表的数据结构.\n2. 然后就是SetPageProperty(p);的问题.按道理这里应该是只有base的PG_property=1,因为它是该空闲内存块的首页.后面的应该都设为0.但是答案的后面default_alloc_pages里找到可以分配的内存块时对每一个页面做了ClearPageProperty(pp);操作,也就是说这样处理下来是没问题的.这么做大概是为了代码简洁? 因为我们在做分配的时候也不是根据PG_property来看能否被分配的,而是直接看p-&gt;property &gt;= n.\n3. 分配的时候对每一个页还有一个删除操作,相当于把这些内存页从free_list里删掉了.于是逻辑也说得通了.\n4. 最后释放的时候, 又加回去了", "created": "2018-03-28T03:20:38Z", "bucket_order": 141, "bucket_name": "Week 3/25 - 3/31", "type": "followup", "tag_good": [], "uid": "jf86jf5n2SKn", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jfaivygaei510u", "updated": "2018-03-28T03:20:38Z", "config": {}}], "tag_good_arr": ["hdjonbiyfs62ie"], "id": "ijsmlkqovtn6wi", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 7, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168027042, "default_anonymity": "no"}, "error": null, "aid": "kyuztg2qqlp6fc"}