{"result": {"history_size": 2, "folders": ["lecture18", "2019"], "nr": 1328, "data": {"embed_links": []}, "created": "2019-05-05T17:14:01Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvb73zgmfes1f0", "type": "create", "when": "2019-05-05T17:14:01Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "jvbphn62qymuw", "type": "update", "when": "2019-05-06T01:48:31Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvfhgcteska14s", "to": "jvb73zgka9u1ez", "type": "s_answer", "when": "2019-05-08T17:14:39Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvl9hnirmgl5v9", "type": "s_answer_update", "when": "2019-05-12T18:18:20Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvl9ig3p12i69i", "type": "s_answer_update", "when": "2019-05-12T18:18:57Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvl9jvqo9oy6wh", "type": "s_answer_update", "when": "2019-05-12T18:20:04Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvl9wqg875c7c3", "type": "s_answer_update", "when": "2019-05-12T18:30:03Z"}, {"anon": "no", "uid": "ie7xy0g59u31ll", "to": "jvb73zgka9u1ez", "type": "followup", "when": "2019-05-12T20:10:49Z"}, {"anon": "no", "uid": "jsl9bhefCIIS", "data": "jvlq0hqlxz0fn", "type": "s_answer_update", "when": "2019-05-13T02:00:52Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "哲学家就餐问题情况枚举", "created": "2019-05-06T01:48:31Z", "content": "<p>为了验证哲学家就餐问题解决方法的正确性&#xff0c;需枚举所有可能的访问情况。以方案三为例&#xff0c;方案三伪代码如下&#xff1a;</p>\n<p>void philosopher(int i) // 哲学家编号&#xff1a;0 &#xff0d; 4</p>\n<p>        while(TRUE) {</p>\n<p>                think( ); // 哲学家在思考</p>\n<p>                if (i%2 == 0) {</p>\n<p>                        P(fork[i]); // 去拿左边的叉子</p>\n<p>                        P(fork[(i &#43; 1) % N]); // 去拿右边的叉子</p>\n<p>                } else {</p>\n<p>                        P(fork[(i &#43; 1) % N]); // 去拿右边的叉子</p>\n<p>                        P(fork[i]); // 去拿左边的叉子</p>\n<p>                 }</p>\n<p>                 eat( ); // 吃面条中….</p>\n<p>                 V(fork[i]); // 放下左边的叉子</p>\n<p>                 V(fork[(i &#43; 1) % N]); // 放下右边的叉子</p>\n<p>        }</p>\n<p>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</p>\n<p>n=0时&#xff0c;不会出现死锁。</p>\n<p></p>\n<p>n=1时&#xff0c;不会出现死锁。</p>\n<p></p>\n<p>n=2时&#xff0c;若两人不相邻&#xff0c;则不会出现死锁</p>\n<p>             若两人相邻&#xff0c;</p>\n<p>                         若两人序号是(0,1)或(2,3)&#xff0c;则先拿第一个叉子的人吃面&#xff0c;另一人等待前一人吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                         若两人序号是(1,2)或(3,4)&#xff0c;则先拿第二个叉子的人吃面&#xff0c;另一人等待前一人吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                         若两人序号是(4,0)&#xff0c;</p>\n<p>                                         若0号拿第二把叉子先于4号拿第一把叉子&#xff0c;则0号先吃面&#xff0c;4号等待0号吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                                         若0号拿第二把叉子晚于4号拿第一把叉子&#xff0c;则4号先吃面&#xff0c;0号等待4号吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=3时&#xff0c;若3个人连续&#xff0c;则每相邻两人间的吃面顺序同n=2的情况&#xff0c;由于未构成环路&#xff0c;因此不会出现死锁&#xff1b;</p>\n<p>              否则2个人连续1人不连续&#xff0c;不连续的人可以吃面&#xff0c;连续的两个人吃面顺序同n=2的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=4时&#xff0c;4个人必连续&#xff0c;每相邻两人间的吃面顺序同n=2的情况&#xff0c;由于未构成环路&#xff0c;因此不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=5时&#xff0c;若有一个人同时拿到两把叉子&#xff0c;则该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>              若无人同时拿到两把叉子&#xff0c;由于0号先拿左叉子&#xff0c;1号先拿右叉子&#xff0c;因此0号与1号无法同时拿一把叉子&#xff0c;同理2号与3号无法同时拿一把叉子。</p>\n<p>                          若1号与2号中至少有一个人拿到了第一把叉子&#xff0c;则1号与2号必有一人可以拿到1号与2号中间那把叉子&#xff0c;即必有一人可以拿到两把叉子&#xff0c;该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                          否则1号与2号均未拿到叉子&#xff0c;而0号与3号拿到一把叉子&#xff0c;此时4号左右还剩两把叉子。</p>\n<p>                                           若4号拿到这两把叉子则该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                                           否则0号或3号必有一人可以拿到第二把叉子&#xff0c;该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>综上所述&#xff0c;枚举所有情况后方案三均不会产生死锁&#xff0c;说明方案三为正确的解决方案。</p>\n<p>             </p>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "哲学家就餐问题情况枚举", "created": "2019-05-05T17:14:01Z", "content": "<p>为了验证哲学家就餐问题解决方法的正确性&#xff0c;需枚举所有可能的访问情况。以方案三为例&#xff0c;方案三伪代码如下&#xff1a;</p>\n<p>void philosopher(int i) // 哲学家编号&#xff1a;0 &#xff0d; 4</p>\n<p>        while(TRUE) {</p>\n<p>                think( ); // 哲学家在思考</p>\n<p>                if (i%2 == 0) {</p>\n<p>                        P(fork[i]); // 去拿左边的叉子</p>\n<p>                        P(fork[(i &#43; 1) % N]); // 去拿右边的叉子</p>\n<p>                } else {</p>\n<p>                        P(fork[(i &#43; 1) % N]); // 去拿右边的叉子</p>\n<p>                        P(fork[i]); // 去拿左边的叉子</p>\n<p>                 }</p>\n<p>                 eat( ); // 吃面条中….</p>\n<p>                 V(fork[i]); // 放下左边的叉子</p>\n<p>                 V(fork[(i &#43; 1) % N]); // 放下右边的叉子</p>\n<p>        }</p>\n<p>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</p>\n<p>n=0时&#xff0c;不会出现死锁。</p>\n<p></p>\n<p>n=1时&#xff0c;不会出现死锁。</p>\n<p></p>\n<p>n=2时&#xff0c;若两人不相邻&#xff0c;则不会出现死锁</p>\n<p>             若两人相邻&#xff0c;</p>\n<p>                         若两人序号是(0,1)或(2,3)&#xff0c;则先拿第一个叉子的人吃面&#xff0c;另一人等待前一人吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                         若两人序号是(1,2)或(3,4)&#xff0c;则先拿第二个叉子的人吃面&#xff0c;另一人等待前一人吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                         若两人序号是(4,0)&#xff0c;</p>\n<p>                                         若0号拿第二把叉子先于4号拿第一把叉子&#xff0c;则0号先吃面&#xff0c;4号等待0号吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                                         若0号拿第二把叉子晚于4号拿第一把叉子&#xff0c;则4号先吃面&#xff0c;0号等待4号吃完面放下叉子后吃面&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=3时&#xff0c;若3个人连续&#xff0c;则每相邻两人间的吃面顺序同n=2的情况&#xff0c;由于未构成环路&#xff0c;因此不会出现死锁&#xff1b;</p>\n<p>              否则2个人连续1人不连续&#xff0c;不连续的人可以吃面&#xff0c;连续的两个人吃面顺序同n=2的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=4时&#xff0c;4个人必连续&#xff0c;每相邻两人间的吃面顺序同n=2的情况&#xff0c;由于未构成环路&#xff0c;因此不会出现死锁&#xff1b;</p>\n<p></p>\n<p>n=5时&#xff0c;若有一个人同时拿到两把叉子&#xff0c;则该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>              若无人同时拿到两把叉子&#xff0c;由于0号先拿左叉子&#xff0c;1号先拿右叉子&#xff0c;因此0号与1号无法同时拿一把叉子&#xff0c;同理2号与3号无法同时拿一把叉子。</p>\n<p>                          若1号与2号中至少有一个人拿到了第一把叉子&#xff0c;则1号与2号必有一人可以拿到1号与2号中间那把叉子&#xff0c;即必有一人可以拿到两把叉子&#xff0c;该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                          否则1号与2号均未拿到叉子&#xff0c;而0号与3号拿到一把叉子&#xff0c;此时4号左右还剩两把叉子。</p>\n<p>                                           若4号拿到这两把叉子则该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p>                                           否则0号或3号必有一人可以拿到第二把叉子&#xff0c;该哲学家可以吃面&#xff0c;吃完面后同n=4的情况&#xff0c;不会出现死锁&#xff1b;</p>\n<p></p>\n<p>综上所述&#xff0c;枚举所有情况后方案三均不会产生死锁&#xff0c;说明方案三为正确的解决方案。</p>\n<p>             </p>"}], "type": "question", "tags": ["2019", "lecture18", "student"], "tag_good": [{"role": "student", "name": "刘邦岐", "endorser": {}, "admin": false, "photo": null, "id": "kfdd9outuz437e", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 151, "children": [{"history_size": 6, "folders": [], "data": {"embed_links": []}, "created": "2019-05-08T17:14:39Z", "bucket_order": 3, "tag_endorse": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "", "name": "周沁泓2016010493", "endorser": {}, "admin": false, "photo": null, "id": "jsjp7j7mu8BB", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "范舒翼", "endorser": {}, "admin": false, "photo": null, "id": "iszw40xah3z2vb", "photo_url": null, "published": true, "us": false, "class_sections": ["os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-13T02:00:52Z", "content": "<p>哲学家就餐问题情况枚举</p>\n<p>#include &lt;pthread.h&gt; <br />#include &lt;semaphore.h&gt; <br />#include &lt;unistd.h&gt; <br />#include &lt;stdio.h&gt; <br />#include &lt;stdlib.h&gt; <br />#include&lt;iostream&gt; <br />#include &lt;string&gt; <br />using namespace std; <br />#define N 5 // 哲学家个数 <br />sem_t FORK[5]; <br />void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d;4 <br />    int i = ((int*)args)[0]; <br />    string s=&#34;&#34;; <br />    for(int j=0;j&lt;i;j&#43;&#43;) <br />         s&#43;=&#39;\\t&#39;; <br />    sleep(1); // 哲学家在思考 <br />    if (i%2 == 0) { <br />        sem_wait(&amp;FORK[i]);  // 去拿左边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />    } else { <br />        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />        sem_wait(&amp;FORK[i]); // 去拿左边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />    } <br />    cout&lt;&lt;s&#43;&#34;开始吃面\\n&#34;; <br />    sleep(1); // 吃面条中…. <br />    cout&lt;&lt;s&#43;&#34;结束吃面\\n&#34;; <br />    sem_post(&amp;FORK[i]);      // 放下左边的叉子 <br />    cout&lt;&lt;s&#43;&#34;放左叉\\n&#34;; <br />    sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子; <br />    cout&lt;&lt;s&#43;&#34;放右叉\\n&#34;; <br />} <br />int main(){ <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        sem_init(&amp;FORK[i], 0, 1); <br />    cout&lt;&lt;&#39;0&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;1&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;2&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;3&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;4&#39;&lt;&lt;endl; <br />    cout&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考\\n&#34;; <br />    pthread_t philosophers[5]; <br />    int list[5]={0,3,4,2,1}; <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]); <br />    for(int j = 0; j &lt; 5; j&#43;&#43;) <br />        pthread_join(philosophers[j], NULL); <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        sem_destroy(&amp;FORK[i]); <br />    return 0; <br />}</p>\n<div>\n<div>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</div>\n<div>n=1时共5种情况&#xff0c;以0号哲学家一人停止思考为例&#xff1a;</div>\n<p></p>\n<p>list[1]={0}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉</p>\n<div></div>\n<div>n=2时共5×4=20种情况&#xff0c;分别以0号哲学家、1号哲学家和0号哲学家、2号哲学家停止思考为例&#xff1a;</div>\n<p>list[2]={0,1}</p>\n<p>0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />          拿右叉<br />结束吃面<br />放左叉<br />放右叉<br />           拿左叉<br />           开始吃面<br />           结束吃面<br />           放左叉<br />           放右叉</p>\n<p></p>\n<p>list[2]={0,2}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />                        拿左叉<br /> 拿右叉<br /> 开始吃面<br />                       拿右叉<br />                       开始吃面<br />结束吃面<br />放左叉<br />放右叉<br />                        结束吃面<br />                        放左叉<br />                        放右叉</p>\n<div></div>\n<div>n=3时共5×4×3=60种情况&#xff0c;分别以0号哲学家、1号哲学家、2号哲学家和0号哲学家、1号哲学家、3号哲学家停止思考为例&#xff1a;</div>\n<p>list[3]={0,1,2}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />             拿右叉<br />             拿左叉<br />             开始吃面<br />拿左叉<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />拿右叉<br />开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉<br />结束吃面<br />放左叉<br />放右叉</p>\n<p></p>\n<p>list[3]={0,1,3}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />             拿右叉<br />             拿左叉<br />             开始吃面<br />                                     拿右叉<br />                                     拿左叉<br />拿左叉<br />                                     开始吃面<br />             结束吃面<br />             放左叉<br />             放右叉<br />拿右叉<br />开始吃面<br />                                     结束吃面<br />                                     放左叉<br />                                     放右叉<br />结束吃面<br />放左叉<br />放右叉</p>\n<p></p>\n<p>n=4时共5×4×3×2=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家停止思考为例&#xff1a;</p>\n<p>list[4]={0,1,2,3}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />             拿右叉<br />                                     拿右叉<br />                                     拿左叉<br />                                     开始吃面<br />结束吃面<br />                                     结束吃面<br /> 放左叉<br /> 放右叉<br />                                    放左叉<br />                                    放右叉<br />             拿左叉<br />             开始吃面<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉</p>\n</div>\n<div></div>\n<div>n=5时共5×4×3×2×1=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家、4号哲学家停止思考为例&#xff1a;</div>\n<p>list[5]={0,1,2,3,4}<br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />                                     拿右叉<br />                                     拿左叉<br />             拿右叉<br />                                     开始吃面<br />结束吃面<br />                                     结束吃面<br />                                     放左叉<br />                                     放右叉</p>\n<p>放左叉<br />放右叉<br />                                                 拿左叉<br />                                                 拿右叉<br />                                                 开始吃面<br />             拿左叉<br />             开始吃面<br />                                                 结束吃面<br />                                                 放左叉<br />                                                 放右叉<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉</p>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-12T18:30:03Z", "content": "<p>哲学家就餐问题情况枚举</p>\n<p>#include &lt;pthread.h&gt; <br />#include &lt;semaphore.h&gt; <br />#include &lt;unistd.h&gt; <br />#include &lt;stdio.h&gt; <br />#include &lt;stdlib.h&gt; <br />#include&lt;iostream&gt; <br />#include &lt;string&gt; <br />using namespace std; <br />#define N 5 // 哲学家个数 <br />sem_t FORK[5]; <br />void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d;4 <br />    int i = ((int*)args)[0]; <br />    string s=&#34;&#34;; <br />    for(int j=0;j&lt;i;j&#43;&#43;) <br />         s&#43;=&#39;\\t&#39;; <br />    sleep(1); // 哲学家在思考 <br />    if (i%2 == 0) { <br />        sem_wait(&amp;FORK[i]);  // 去拿左边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />    } else { <br />        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />        sem_wait(&amp;FORK[i]); // 去拿左边的叉子 <br />        cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />    } <br />    cout&lt;&lt;s&#43;&#34;开始吃面\\n&#34;; <br />    sleep(1); // 吃面条中…. <br />    cout&lt;&lt;s&#43;&#34;结束吃面\\n&#34;; <br />    sem_post(&amp;FORK[i]);      // 放下左边的叉子 <br />    cout&lt;&lt;s&#43;&#34;放左叉\\n&#34;; <br />    sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子; <br />    cout&lt;&lt;s&#43;&#34;放右叉\\n&#34;; <br />} <br />int main(){ <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        sem_init(&amp;FORK[i], 0, 1); <br />    cout&lt;&lt;&#39;0&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;1&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;2&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;3&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;4&#39;&lt;&lt;endl; <br />    cout&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考\\n&#34;; <br />    pthread_t philosophers[5]; <br />    int list[5]={0,3,4,2,1}; <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]); <br />    for(int j = 0; j &lt; 5; j&#43;&#43;) <br />        pthread_join(philosophers[j], NULL); <br />    for(int i=0;i&lt;5;i&#43;&#43;) <br />        sem_destroy(&amp;FORK[i]); <br />    return 0; <br />}</p>\n<div>\n<div>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</div>\n<div>n=1时共5种情况&#xff0c;以0号哲学家一人停止思考为例&#xff1a;</div>\n<p><br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉</p>\n<div></div>\n<div>n=2时共5×4=20种情况&#xff0c;分别以0号哲学家、1号哲学家和0号哲学家、2号哲学家停止思考为例&#xff1a;</div>\n<p></p>\n<p>0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />          拿右叉<br />结束吃面<br />放左叉<br />放右叉<br />           拿左叉<br />           开始吃面<br />           结束吃面<br />           放左叉<br />           放右叉</p>\n<p><br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />                        拿左叉<br /> 拿右叉<br /> 开始吃面<br />                       拿右叉<br />                       开始吃面<br />结束吃面<br />放左叉<br />放右叉<br />                        结束吃面<br />                        放左叉<br />                        放右叉</p>\n<div></div>\n<div>n=3时共5×4×3=60种情况&#xff0c;分别以0号哲学家、1号哲学家、2号哲学家和0号哲学家、1号哲学家、3号哲学家停止思考为例&#xff1a;</div>\n<p><br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />             拿右叉<br />             拿左叉<br />             开始吃面<br />拿左叉<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />拿右叉<br />开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉<br />结束吃面<br />放左叉<br />放右叉</p>\n<p><br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />             拿右叉<br />             拿左叉<br />             开始吃面<br />                                     拿右叉<br />                                     拿左叉<br />拿左叉<br />                                     开始吃面<br />             结束吃面<br />             放左叉<br />             放右叉<br />拿右叉<br />开始吃面<br />                                     结束吃面<br />                                     放左叉<br />                                     放右叉<br />结束吃面<br />放左叉<br />放右叉</p>\n<p></p>\n<p>n=4时共5×4×3×2=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家停止思考为例&#xff1a;</p>\n<p><br />0          1          2          3           <br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />             拿右叉<br />                                     拿右叉<br />                                     拿左叉<br />                                     开始吃面<br />结束吃面<br />                                     结束吃面<br /> 放左叉<br /> 放右叉<br />                                    放左叉<br />                                    放右叉<br />             拿左叉<br />             开始吃面<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉</p>\n</div>\n<div></div>\n<div>n=5时共5×4×3×2×1=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家、4号哲学家停止思考为例&#xff1a;</div>\n<p><br />0          1          2          3          4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />                                     拿右叉<br />                                     拿左叉<br />             拿右叉<br />                                     开始吃面<br />结束吃面<br />                                     结束吃面<br />                                     放左叉<br />                                     放右叉</p>\n<p>放左叉<br />放右叉<br />                                                 拿左叉<br />                                                 拿右叉<br />                                                 开始吃面<br />             拿左叉<br />             开始吃面<br />                                                 结束吃面<br />                                                 放左叉<br />                                                 放右叉<br />             结束吃面<br />             放左叉<br />             放右叉<br />                         拿左叉<br />                         拿右叉<br />                         开始吃面<br />                         结束吃面<br />                         放左叉<br />                         放右叉</p>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-12T18:20:04Z", "content": "<p>哲学家就餐问题情况枚举</p>\n<md><br />#include &lt;pthread.h&gt; <br />#include &lt;semaphore.h&gt; <br />#include &lt;unistd.h&gt; <br />#include &lt;stdio.h&gt; <br />#include &lt;stdlib.h&gt; <br />#include&lt;iostream&gt; <br />#include &lt;string&gt; <br />using namespace std; <br />#define N 5 // 哲学家个数 <br />sem_t FORK[5]; <br />void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d;4 <br />    int i = ((int*)args)[0]; <br />    string s=&#34;&#34;; <br />    for(int j=0;j&lt;i;j&#43;&#43;) <br />s&#43;=&#39;\\t&#39;; <br />sleep(1); // 哲学家在思考 <br />if (i%2 == 0) { <br />sem_wait(&amp;FORK[i]);  // 去拿左边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />} else { <br />sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />sem_wait(&amp;FORK[i]); // 去拿左边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />} <br />cout&lt;&lt;s&#43;&#34;开始吃面\\n&#34;; <br />sleep(1); // 吃面条中…. <br />cout&lt;&lt;s&#43;&#34;结束吃面\\n&#34;; <br />sem_post(&amp;FORK[i]);      // 放下左边的叉子 <br />cout&lt;&lt;s&#43;&#34;放左叉\\n&#34;; <br />sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子; <br />cout&lt;&lt;s&#43;&#34;放右叉\\n&#34;; <br />} <br />int main(){ <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />sem_init(&amp;FORK[i], 0, 1); <br />cout&lt;&lt;&#39;0&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;1&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;2&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;3&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;4&#39;&lt;&lt;endl; <br />cout&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考\\n&#34;; <br />pthread_t philosophers[5]; <br />int list[5]={0,3,4,2,1}; <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]); <br />for(int j = 0; j &lt; 5; j&#43;&#43;) <br />pthread_join(philosophers[j], NULL); <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />sem_destroy(&amp;FORK[i]); <br />return 0; <br />}<br /></md>\n<div>\n<div>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</div>\n<div>n=1时共5种情况&#xff0c;以0号哲学家一人停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<div>n=2时共5×4=20种情况&#xff0c;分别以0号哲学家、1号哲学家和0号哲学家、2号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br />结束吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>\n<div>n=3时共5×4×3=60种情况&#xff0c;分别以0号哲学家、1号哲学家、2号哲学家和0号哲学家、1号哲学家、3号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />拿左叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br /> 拿右叉<br /> 拿左叉<br />拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<p>n=4时共5×4×3×2=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家停止思考为例&#xff1a;</p>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>n=5时共5×4×3×2×1=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家、4号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-12T18:18:57Z", "content": "<p>哲学家就餐问题情况枚举</p>\n<md><br />#include &lt;pthread.h&gt; <br />#include &lt;semaphore.h&gt; <br />#include &lt;unistd.h&gt; <br />#include &lt;stdio.h&gt; <br />#include &lt;stdlib.h&gt; <br />#include&lt;iostream&gt; <br />#include &lt;string&gt; <br />using namespace std; <br />#define N 5 // 哲学家个数 <br />sem_t FORK[5]; <br />void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d;4 <br />    int i = ((int*)args)[0]; <br />    string s=&#34;&#34;; <br />    for(int j=0;j&lt;i;j&#43;&#43;) <br />s&#43;=&#39;\\t&#39;; <br />sleep(1); // 哲学家在思考 <br />if (i%2 == 0) { <br />sem_wait(&amp;FORK[i]);  // 去拿左边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />} else { <br />sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />sem_wait(&amp;FORK[i]); // 去拿左边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />} <br />cout&lt;&lt;s&#43;&#34;开始吃面\\n&#34;; <br />sleep(1); // 吃面条中…. <br />cout&lt;&lt;s&#43;&#34;结束吃面\\n&#34;; <br />sem_post(&amp;FORK[i]);      // 放下左边的叉子 <br />cout&lt;&lt;s&#43;&#34;放左叉\\n&#34;; <br />sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子; <br />cout&lt;&lt;s&#43;&#34;放右叉\\n&#34;; <br />} <br />int main(){ <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />sem_init(&amp;FORK[i], 0, 1); <br />cout&lt;&lt;&#39;0&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;1&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;2&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;3&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;4&#39;&lt;&lt;endl; <br />cout&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考\\n&#34;; <br />pthread_t philosophers[5]; <br />int list[5]={0,3,4,2,1}; <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]); <br />for(int j = 0; j &lt; 5; j&#43;&#43;) <br />pthread_join(philosophers[j], NULL); <div> for(int i=0;i&lt;5;i&#43;&#43;)</div> <br />sem_destroy(&amp;FORK[i]); <br />return 0; <div> }</div><br /></md>\n<div>\n<div></div>\n<div>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</div>\n<div>n=1时共5种情况&#xff0c;以0号哲学家一人停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<div>n=2时共5×4=20种情况&#xff0c;分别以0号哲学家、1号哲学家和0号哲学家、2号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br />结束吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /><br /> 放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>\n<div>n=3时共5×4×3=60种情况&#xff0c;分别以0号哲学家、1号哲学家、2号哲学家和0号哲学家、1号哲学家、3号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />拿左叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br /> 拿右叉<br /> 拿左叉<br />拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<p>n=4时共5×4×3×2=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家停止思考为例&#xff1a;</p>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>n=5时共5×4×3×2×1=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家、4号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-12T18:18:20Z", "content": "<p>哲学家就餐问题情况枚举</p>\n<md><br />#include &lt;pthread.h&gt; <br />#include &lt;semaphore.h&gt; <br />#include &lt;unistd.h&gt; <br />#include &lt;stdio.h&gt; <br />#include &lt;stdlib.h&gt; <br />#include&lt;iostream&gt; <br />#include &lt;string&gt; <br />using namespace std; <br />#define N 5 // 哲学家个数 <br />sem_t FORK[5]; <br />void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d;4 <br />    int i = ((int*)args)[0]; <br />    string s=&#34;&#34;; <br />    for(int j=0;j&lt;i;j&#43;&#43;) <br />s&#43;=&#39;\\t&#39;; <br />sleep(1); // 哲学家在思考 <br />if (i%2 == 0) { <br />sem_wait(&amp;FORK[i]);  // 去拿左边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;; <br />sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子 <br />cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;; <br />} else { <div> sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子</div> <div> cout&lt;&lt;s&#43;&#34;拿右叉\\n&#34;;</div> <br />sem_wait(&amp;FORK[i]); // 去拿左边的叉子 <div> cout&lt;&lt;s&#43;&#34;拿左叉\\n&#34;;</div> <br />} <br />cout&lt;&lt;s&#43;&#34;开始吃面\\n&#34;; <br />sleep(1); // 吃面条中…. <br />cout&lt;&lt;s&#43;&#34;结束吃面\\n&#34;; <br />sem_post(&amp;FORK[i]);      // 放下左边的叉子 <br />cout&lt;&lt;s&#43;&#34;放左叉\\n&#34;; <br />sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子; <br />cout&lt;&lt;s&#43;&#34;放右叉\\n&#34;; <div> }</div> <br />int main(){ <br />for(int i=0;i&lt;5;i&#43;&#43;) <br />sem_init(&amp;FORK[i], 0, 1); <br />cout&lt;&lt;&#39;0&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;1&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;2&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;3&#39;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#39;4&#39;&lt;&lt;endl; <br />cout&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考&#34;&lt;&lt;&#39;\\t&#39;&lt;&lt;&#34;在思考\\n&#34;; <br />pthread_t philosophers[5]; <br />int list[5]={0,3,4,2,1}; <div> for(int i=0;i&lt;5;i&#43;&#43;)</div> <br />pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]); <br />for(int j = 0; j &lt; 5; j&#43;&#43;) <br />pthread_join(philosophers[j], NULL); <div> for(int i=0;i&lt;5;i&#43;&#43;)</div> <br />sem_destroy(&amp;FORK[i]); <br />return 0; <div> }</div><br /></md>\n<div>\n<div></div>\n<div>按照某一时刻停止思考开始拿叉子的哲学家人数n来分类&#xff1a;</div>\n<div>n=1时共5种情况&#xff0c;以0号哲学家一人停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<div>n=2时共5×4=20种情况&#xff0c;分别以0号哲学家、1号哲学家和0号哲学家、2号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br />结束吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br />结束吃面<br />放左叉<br />放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>\n<div>n=3时共5×4×3=60种情况&#xff0c;分别以0号哲学家、1号哲学家、2号哲学家和0号哲学家、1号哲学家、3号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />拿左叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md><md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br /> 拿右叉<br /> 拿左叉<br />拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />拿右叉<br />开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />结束吃面<br />放左叉<br />放右叉<br /></md>\n<p>n=4时共5×4×3×2=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家停止思考为例&#xff1a;</p>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿右叉<br /> 拿左叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>n=5时共5×4×3×2×1=120种情况&#xff0c;以0号哲学家、1号哲学家、2号哲学家、3号哲学家、4号哲学家停止思考为例&#xff1a;</div>\n<md><br />0 1 2 3 4<br />在思考 在思考 在思考 在思考 在思考<br />拿左叉<br />拿右叉<br />开始吃面<br /> 拿右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />结束吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br />放左叉<br />放右叉<br /> 拿左叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /> 拿左叉<br /> 拿右叉<br /> 开始吃面<br /> 结束吃面<br /> 放左叉<br /> 放右叉<br /></md>"}, {"anon": "no", "uid": "jsl9bhefCIIS", "subject": "", "created": "2019-05-08T17:14:39Z", "content": "<p>哲学家就餐问题的一个实例&#xff1a;</p>\n<div>\n<div>#include &lt;pthread.h&gt;</div>\n<div>#include &lt;semaphore.h&gt;</div>\n<div>#include &lt;unistd.h&gt;</div>\n<div>#include &lt;stdio.h&gt;</div>\n<div>#include &lt;stdlib.h&gt;</div>\n<div>#include&lt;iostream&gt;</div>\n<div>#include &lt;string&gt;</div>\n<div>#include &lt;sstream&gt;</div>\n<div>using namespace std;</div>\n<br />\n<div>#define N 5 // 哲学家个数</div>\n<div>sem_t FORK[5];</div>\n<div>void *philosopher(void *args){ // 哲学家编号&#xff1a;0 &#xff0d; </div>\n<div>    int i = ((int*)args)[0];</div>\n<div>    stringstream ss;</div>\n<div>    ss&lt;&lt;i;</div>\n<div>    cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;在思考\\n&#34;;</div>\n<div>    sleep(1); // 哲学家在思考</div>\n<div>    if (i%2 == 0) {</div>\n<div>        sem_wait(&amp;FORK[i]);  // 去拿左边的叉子</div>\n<div>        cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;拿起了左边的叉子\\n&#34;;</div>\n<div>        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子</div>\n<div>        cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;拿起了右边的叉子\\n&#34;;</div>\n<div>    }</div>\n<div>    else {</div>\n<div>        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子</div>\n<div>        cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;拿起了右边的叉子\\n&#34;;</div>\n<div>        sem_wait(&amp;FORK[i]); // 去拿左边的叉子 </div>\n<div>        cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;拿起了左边的叉子\\n&#34;;</div>\n<div>    }</div>\n<div>    cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;在吃面\\n&#34;;</div>\n<div>    sleep(1); // 吃面条中….</div>\n<div>    sem_post(&amp;FORK[i]);      // 放下左边的叉子</div>\n<div>    cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;放下了左边的叉子\\n&#34;;</div>\n<div>    sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子</div>\n<div>    cout&lt;&lt;&#34;哲学家&#34;&#43;ss.str()&#43;&#34;放下了右边的叉子\\n&#34;;</div>\n<div>}</div>\n<div>int main(){</div>\n<div>    for(int i=0;i&lt;5;i&#43;&#43;)</div>\n<div>        sem_init(&amp;FORK[i], 0, 1);</div>\n<div>    pthread_t philosophers[5];</div>\n<div>    int list[5]={0,3,4,2,1};</div>\n<div>    for(int i=0;i&lt;5;i&#43;&#43;)</div>\n<div>        pthread_create(&amp;philosophers[i], NULL, philosopher, &amp;list[i]);</div>\n<div>    for(int j = 0; j &lt; 5; j&#43;&#43;)</div>\n<div>        pthread_join(philosophers[j], NULL);</div>\n<div>    for(int i=0;i&lt;5;i&#43;&#43;)</div>\n<div>        sem_destroy(&amp;FORK[i]);</div>\n<div>    return 0;</div>\n<div>}</div>\n</div>\n<div>输出如下&#xff1a;</div>\n<div>哲学家3在思考<br />哲学家4在思考<br />哲学家2在思考<br />哲学家0在思考<br />哲学家1在思考<br />哲学家3拿起了右边的叉子<br />哲学家3拿起了左边的叉子<br />哲学家3在吃面<br />哲学家2拿起了左边的叉子<br />哲学家0拿起了左边的叉子<br />哲学家0拿起了右边的叉子<br />哲学家0在吃面<br />哲学家0放下了左边的叉子<br />哲学家0放下了右边的叉子<br />哲学家2拿起了右边的叉子<br />哲学家2在吃面<br />哲学家3放下了左边的叉子<br />哲学家3放下了右边的叉子<br />哲学家4拿起了左边的叉子<br />哲学家4拿起了右边的叉子<br />哲学家4在吃面<br />哲学家2放下了左边的叉子<br />哲学家2放下了右边的叉子<br />哲学家4放下了左边的叉子<br />哲学家4放下了右边的叉子<br />哲学家1拿起了右边的叉子<br />哲学家1拿起了左边的叉子<br />哲学家1在吃面<br />哲学家1放下了左边的叉子<br />哲学家1放下了右边的叉子</div>"}], "type": "s_answer", "tag_endorse_arr": ["hdjonbiyfs62ie", "jsjp7j7mu8BB", "iszw40xah3z2vb"], "children": [], "id": "jvfhgct8jhl14r", "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>根据梁锡豪同学的代码对徐呈寅的哲学家问题实现的修改&#xff1a;</p>\n<ol><li>更改输出格式&#xff0c;增加缩进</li><li>设计共5组测试样例</li></ol>\n<p></p>\n<p>代码&#xff1a;</p>\n<pre>#include &lt;pthread.h&gt;\n#include &lt;semaphore.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;sstream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\n\n// from Liang code\nstruct arg_struct{\n\targ_struct(int _id, int _start, int _work): id(_id), start(_start), work(_work){}\n\targ_struct(int _id): id(_id), start(0), work(0){}\n\tint id;\n\tint start;\n\tint work;\n};\n\nconst int N = 5; // 哲学家个数\nconst int WORK_SPAN = 5; // max work time\n\nsem_t FORK[5];\nvoid *philosopher(void *argv){ // 哲学家编号&#xff1a;0 &#xff0d;\n    arg_struct arg = *(arg_struct*)argv;\n\n    int i = arg.id;\n    stringstream ss;\n    ss&lt;&lt;i;\n\n    string indent = std::string(i*10, &#39; &#39;);\n\n    sleep(arg.start); // 哲学家在思考\n\n    cout&lt;&lt;indent&#43;ss.str()&#43;&#34;思考\\n&#34;;\n    if (i%2 == 0) {\n        sem_wait(&amp;FORK[i]);  // 去拿左边的叉子\n        cout&lt;&lt;indent&#43;ss.str()&#43;&#34;拿起左叉\\n&#34;;\n        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子\n        cout&lt;&lt;indent&#43;ss.str()&#43;&#34;拿起右叉\\n&#34;;\n    }\n    else {\n        sem_wait(&amp;FORK[(i &#43; 1) % N]); // 去拿右边的叉子\n        cout&lt;&lt;indent&#43;ss.str()&#43;&#34;拿起右叉\\n&#34;;\n        sem_wait(&amp;FORK[i]); // 去拿左边的叉子\n        cout&lt;&lt;indent&#43;ss.str()&#43;&#34;拿起左叉\\n&#34;;\n    }\n    cout&lt;&lt;indent&#43;ss.str()&#43;&#34;吃面\\n&#34;;\n\n    sleep(arg.work); // 吃面条中….\n\n    sem_post(&amp;FORK[i]);      // 放下左边的叉子\n    cout&lt;&lt;indent&#43;ss.str()&#43;&#34;放下左叉\\n&#34;;\n    sem_post(&amp;FORK[(i &#43; 1) % N]); // 放下右边的叉子\n    cout&lt;&lt;indent&#43;ss.str()&#43;&#34;放下右叉\\n&#34;;\n}\n\nint main(){\n    for(int i = 0; i &lt; 5; i&#43;&#43;)\n        cout&lt;&lt;&#34;哲学家&#34;&lt;&lt;i&lt;&lt;std::string(4, &#39; &#39;);\n    cout&lt;&lt;endl;\n    for(int i=0;i&lt;5;i&#43;&#43;)\n        sem_init(&amp;FORK[i], 0, 1);\n    pthread_t philosophers[5];\n\n    int st_time_list[5] = {0, 0, 0, 0, 0}; \n    for(int i = 0; i &lt; N; i&#43;&#43;)\n        pthread_create(&amp;philosophers[i], NULL, philosopher, new arg_struct(i, st_time_list[i], rand()%WORK_SPAN));\n    for(int j = 0; j &lt; N; j&#43;&#43;)\n        pthread_join(philosophers[j], NULL);\n    for(int i = 0; i &lt; N; i&#43;&#43;)\n        sem_destroy(&amp;FORK[i]);\n    return 0;\n}</pre>\n<p></p>\n<p>运行结果&#xff1a;</p>\n<pre>---- n = 1 ------------------------------------------------------------<br />哲学家0    哲学家1    哲学家2    哲学家3    哲学家4    <br />0思考<br />0拿起左叉<br />0拿起右叉<br />0吃面<br />0放下左叉<br />0放下右叉<br /><br />---- n = 2 ------------------------------------------------------------<br />哲学家0    哲学家1    哲学家2    哲学家3    哲学家4    <br />0思考<br />0拿起左叉<br />0拿起右叉<br />0吃面<br />                                        4思考<br />                                        4拿起左叉<br />0放下左叉<br />0放下右叉<br />                                        4拿起右叉<br />                                        4吃面<br />                                        4放下左叉<br />                                        4放下右叉<br /><br />---- n = 3 ------------------------------------------------------------<br />哲学家0    哲学家1    哲学家2    哲学家3    哲学家4    <br />          1思考<br />          1拿起右叉<br />          1拿起左叉<br />          1吃面<br />0思考<br />0拿起左叉<br />                                        4思考<br />                                        4拿起左叉<br />          1放下左叉<br />          1放下右叉<br />0拿起右叉<br />0吃面<br />0放下左叉<br />0放下右叉<br />                                        4拿起右叉<br />                                        4吃面<br />                                        4放下左叉<br />                                        4放下右叉<br /><br />---- n = 4 ------------------------------------------------------------<br />哲学家0    哲学家1    哲学家2    哲学家3    哲学家4    <br />0思考<br />0拿起左叉<br />0拿起右叉<br />0吃面<br />          1思考<br />          1拿起右叉<br />                    2思考<br />                                        4思考<br />                                        4拿起左叉<br />0放下左叉<br />          1拿起左叉<br />          1吃面<br />0放下右叉<br />                                        4拿起右叉<br />                                        4吃面<br />          1放下左叉<br />          1放下右叉<br />                    2拿起左叉<br />                    2拿起右叉<br />                    2吃面<br />                                        4放下左叉<br />                                        4放下右叉<br />                    2放下左叉<br />                    2放下右叉<br /><br />---- n = 5 ------------------------------------------------------------<br />哲学家0    哲学家1    哲学家2    哲学家3    哲学家4    <br />0思考<br />0拿起左叉<br />0拿起右叉<br />0吃面<br />          1思考<br />          1拿起右叉<br />                              3思考<br />                              3拿起右叉<br />                              3拿起左叉<br />                              3吃面<br />                              3放下左叉<br />                              3放下右叉<br />                                        4思考<br />                                        4拿起左叉<br />                    2思考<br />0放下左叉<br />0放下右叉<br />          1拿起左叉<br />          1吃面<br />                                        4拿起右叉<br />                                        4吃面<br />          1放下左叉<br />          1放下右叉<br />                    2拿起左叉<br />                    2拿起右叉<br />                    2吃面<br />                                        4放下左叉<br />                                        4放下右叉<br />                    2放下左叉<br />                    2放下右叉</pre>\n<p></p>", "created": "2019-05-12T20:10:49Z", "bucket_order": 134, "bucket_name": "Week 5/12 - 5/18", "type": "followup", "tag_good": [], "uid": "ie7xy0g59u31ll", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "jvldibfgymr418", "updated": "2019-05-12T20:10:49Z", "config": {}}], "tag_good_arr": ["kfdd9outuz437e"], "no_answer": 0, "id": "jvb73zgka9u1ez", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169763666, "default_anonymity": "no"}, "error": null, "aid": "kyv0uo2ar351fc"}