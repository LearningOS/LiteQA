{"result": {"folders": ["lab1", "工具使用", "2019"], "nr": 1267, "data": {"embed_links": []}, "created": "2019-03-05T14:58:22Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "j7f1tr6wJNH", "data": "jsvwel5g9pg42y", "type": "create", "when": "2019-03-05T14:58:23Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jsvx9gdyd0p5to", "type": "update", "when": "2019-03-05T15:22:23Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jsw2ie0vkrdyi", "type": "update", "when": "2019-03-05T17:49:18Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jsw2sxwrk3727v", "type": "update", "when": "2019-03-05T17:57:30Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jswbrieyfxy7j2", "type": "update", "when": "2019-03-05T22:08:20Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jswbs13jnhcej", "type": "update", "when": "2019-03-05T22:08:44Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "data": "jsxhr6x79yb4ef", "type": "update", "when": "2019-03-06T17:43:49Z"}, {"anon": "no", "uid": "jc197h1hOIh1", "data": "jsyok3j4n0w1ab", "to": "jsvwel5bys042x", "type": "s_answer", "when": "2019-03-07T13:42:01Z"}, {"anon": "no", "uid": "jc197h1hOIh1", "data": "jsyokmq4na91ji", "type": "s_answer_update", "when": "2019-03-07T13:42:26Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-06T17:43:49Z", "content": "<p><strong>————分割线1<strong>————</strong></strong></p>\n<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>\n<p></p>\n<p><strong><strong>————</strong>分割线2<strong>————</strong></strong></p>\n<p></p>\n<div>    一次尝试。</div>\n<div>    成功使用反汇编objdump指令找到了bootasm.o中长条转指令ljmp指令的逻辑地址0x002d&#xff0c;然后&#43;0x7c00得到实际物理地址0x7c2d&#xff0c;重新设置断点 b *0x7c2d 可以达到在汇编文件56行设置断点的效果。</div>\n<div>    继续单步执行随后的汇编指令&#xff0c;可得到寄存器cs/ds/es/fs/gs/ss相应的值。这个(提取逻辑地址)方法可以在bootsam.S任意行设置断点&#xff0c;从而分析每条指令执行寄存器的值&#xff0c;希望对大家有帮助。</div>\n<div></div>\n<div></div>\n<div>    图片&#xff1a;</div>\n<p><img src=\"/img/1267-47a92729f848fa52.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-5e5330705aa0f238.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T22:08:44Z", "content": "<p><strong>————————————————————————————分割线1——————————————————————————</strong></p>\n<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>\n<p></p>\n<p><strong>————————————————————————————分割线2——————————————————————————</strong></p>\n<p></p>\n<div>    一次尝试。</div>\n<div>    成功使用反汇编objdump指令找到了bootasm.o中长条转指令ljmp指令的逻辑地址0x002d&#xff0c;然后&#43;0x7c00得到实际物理地址0x7c2d&#xff0c;重新设置断点 b *0x7c2d 可以达到在汇编文件56行设置断点的效果。</div>\n<div>    继续单步执行随后的汇编指令&#xff0c;可得到寄存器cs/ds/es/fs/gs/ss相应的值。这个(提取逻辑地址)方法可以在bootsam.S任意行设置断点&#xff0c;从而分析每条指令执行寄存器的值&#xff0c;希望对大家有帮助。</div>\n<div></div>\n<div></div>\n<div>    图片&#xff1a;</div>\n<p><img src=\"/img/1267-47a92729f848fa52.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-5e5330705aa0f238.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T22:08:20Z", "content": "<p><strong>————————————————————————————分割线1——————————————————————————</strong></p>\n<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>\n<p></p>\n<p><strong>————————————————————————————分割线2——————————————————————————</strong></p>\n<p></p>\n<div>    一次尝试。</div>\n<div>    成功使用反汇编objdump指令找到了bootasm.o中长条转指令ljmp指令的逻辑地址0x002d&#xff0c;然后&#43;0x7c00得到实际物理地址0x7c2d&#xff0c;重新设置断点 b *0x7c2d 可以达到在汇编文件56行设置断点的效果。</div>\n<div>    继续单步执行随后的汇编指令&#xff0c;可得到寄存器cs/ds/es/fs/gs/ss相应的值。这个(提取逻辑地址)方法可以在bootsam.S任意行设置断点&#xff0c;从而分析每条指令执行寄存器的值&#xff0c;希望对大家有帮助。</div>\n<div></div>\n<div>    图片&#xff1a;</div>\n<p><img src=\"/img/1267-47a92729f848fa52.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-5e5330705aa0f238.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T17:57:30Z", "content": "<p><strong>————————————————————————————分割线1——————————————————————————</strong></p>\n<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>\n<p></p>\n<p><strong>————————————————————————————分割线2——————————————————————————</strong></p>\n<p></p>\n<div>    一次尝试。</div>\n<div>    成功使用反汇编objdump指令找到了bootasm.o中长条转指令ljmp指令的逻辑地址0x002d&#xff0c;然后&#43;0x7c00得到实际物理地址0x7c2d&#xff0c;重新设置断点 b *0x7c2d 可以达到在汇编文件56行设置断点的效果。</div>\n<div>    继续单步执行随后的汇编指令&#xff0c;可得到寄存器cs/ds/es/fs/gs/ss相应的值。这个(提取逻辑地址)方法可以在bootsam.S任意行设置断点&#xff0c;从而分析每条指令执行寄存器的值&#xff0c;希望对大家有帮助。</div>\n<div></div>\n<div>    图片&#xff1a;</div>\n<p></p>\n<p><img src=\"/img/1267-47a92729f848fa52.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-5e5330705aa0f238.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T17:49:18Z", "content": "<p><strong>————————————————————————————分割线1——————————————————————————</strong></p>\n<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>\n<p></p>\n<p><strong>————————————————————————————分割线2——————————————————————————</strong></p>\n<p></p>\n<div>    成功使用反汇编objdump指令找到了bootasm.o中长条转指令ljmp指令的逻辑地址0x002d&#xff0c;然后&#43;0x7c00得到实际物理地址0x7c2d&#xff0c;设置断点可以达到在汇编文件56行设置断点的效果。</div>\n<div>    得到了对应汇编语句cs/ds/es/fs/gs/ss相应的值。这个(提取逻辑地址)方法可以在bootsam.S任意行设置断点&#xff0c;从而分析每条指令执行寄存器的值&#xff0c;希望这个方法对大家有帮助。</div>\n<div></div>\n<div>    图片&#xff1a;</div>\n<p></p>\n<p><img src=\"/img/1267-47a92729f848fa52.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-5e5330705aa0f238.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T15:22:23Z", "content": "<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        就是怎么在56行设置断点&#xff1f; c代码可以直接 break (行号)&#xff0c;bootloader的汇编代码怎么用gdb命令设置行号断点...</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>"}, {"anon": "no", "uid": "j7f1tr6wJNH", "subject": "使用gdb调试bootloader时&#xff0c;可以根据汇编代码行号设置断点吗&#xff1f;答&#xff1a;不能的。", "created": "2019-03-05T14:58:22Z", "content": "<p>    原问题是这样的&#xff1a;</p>\n<p>        “使用gdb调试时&#xff0c;刚进入bootloader&#xff0c;在0x7c00处设置断点。怎么跳到第56行ljmp汇编指令处&#xff1f;</p>\n<p>        &#xff08;如图&#xff09; 中间17-55行是开A20门&#xff0c;我想直接跳到56行可以吗&#xff1f;</p>\n<p>        该不会汇编只能用内存位置设置断点吧&#xff1f;”</p>\n<p></p>\n<p>    向老师的回复&#xff1a;“进行源代码调试&#xff0c;需要编译时带调试信息。bootloader加载时&#xff0c;没有调试信息。所以&#xff0c;无法设置行号断点。”</p>\n<p>    </p>\n<p>    因为这个问题不时有同学问到&#xff0c;所以特地整理一下&#xff0c;供大家参考。</p>\n<p></p>\n<p>    图片&#xff1a;</p>\n<p>    <img src=\"/img/1267-16b8ef1399c57263.png\" alt=\"gdb bootloader\" /></p>"}], "type": "question", "tags": ["2019", "lab1", "student", "工具使用"], "tag_good": [{"role": "student", "name": "289212182@qq.com", "endorser": {}, "admin": false, "photo": "1551463481_35.png", "id": "j7f1tr6wJNH", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/j7f1tr6wJNH/1551463481_35.png", "published": true, "us": false, "facebook_id": null}], "unique_views": 166, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2019-03-07T13:42:01Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "jsyok3j0zpj1aa", "history": [{"anon": "no", "uid": "jc197h1hOIh1", "subject": "", "created": "2019-03-07T13:42:26Z", "content": "<p>谢谢&#xff0c;我在lab1的练习4里可以直接跳到bootmain了。</p>\n<p>不过后来我发现在lab1/obj的bootblock.asm里可以直接查看这个具体地址</p>\n<p><img src=\"/img/1267-a1a5bafce6075aa5.png\" alt=\"\" /></p>"}, {"anon": "no", "uid": "jc197h1hOIh1", "subject": "", "created": "2019-03-07T13:42:01Z", "content": "<p>谢谢&#xff0c;我在lab1的练习4里可以直接跳到bootmain了。</p>\n<p>不过后来我发现在lab1/obj的bootblock.asm里可以直接查看这个具体地址<img src=\"/img/1267-ec7e21baa63fa631.png\" alt=\"\" /></p>\n<p><img src=\"/img/1267-a1a5bafce6075aa5.png\" alt=\"\" /></p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}], "tag_good_arr": ["j7f1tr6wJNH"], "no_answer": 0, "id": "jsvwel5bys042x", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169549066, "default_anonymity": "no"}, "error": null, "aid": "kyv0q2h6iuk4x2"}