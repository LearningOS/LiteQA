{"result": {"folders": ["lab1", "学习方法", "2019"], "nr": 1308, "data": {"embed_links": []}, "created": "2019-04-20T14:24:27Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "full", "data": "juplg51wl0w6cv", "type": "create", "when": "2019-04-20T14:24:27Z", "uid_a": "a_0"}, {"anon": "full", "to": "juplg51tsp76cu", "type": "followup", "when": "2019-04-20T14:25:52Z", "uid_a": "a_0"}, {"anon": "full", "data": "jupljtgwy5s1ih", "type": "update", "when": "2019-04-20T14:27:18Z", "uid_a": "a_0"}, {"anon": "full", "data": "jupllv0tsq12kw", "type": "update", "when": "2019-04-20T14:28:54Z", "uid_a": "a_0"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "jupmfbsoasu5ks", "type": "update", "when": "2019-04-20T14:51:48Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "to": "juplg51tsp76cu", "type": "feedback", "when": "2019-04-20T14:54:44Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "to": "juplg51tsp76cu", "type": "followup", "when": "2019-04-20T15:12:29Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "to": "juplg51tsp76cu", "type": "feedback", "when": "2019-04-21T02:29:19Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "to": "juplg51tsp76cu", "type": "feedback", "when": "2019-04-22T01:56:22Z"}, {"anon": "no", "uid": "j7f1tr6wJNH", "to": "juplg51tsp76cu", "type": "feedback", "when": "2019-04-22T02:51:46Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "lab1学习经验", "created": "2019-04-20T14:51:48Z", "content": "<p><md><br />lab1是ucore实验的基础&#xff0c;一旦将lab1完全理解了&#xff0c;那么后续的实验将会是水到渠成的。<br /><br />lab1和其他项目的代码是不同的&#xff0c;它是一个操作系统&#xff0c;尽管它很小实现的功能很简陋&#xff0c;但它是直接运行在硬件上的&#xff0c;为此我们应该考虑一些更加底层的东西。<br /><br />## 了解硬件<br /><br />硬件细节是lab1必须掌握的内容&#xff0c;不须太多&#xff0c;我认为以下几点是必要的:<br /><br />- AT&amp;T汇编语法&#xff0c;具体可以google或者Linux中执行&#96;info as&#96;查看<br />- X86实模式和保护模式的转换&#xff0c;推荐《80X86汇编语言程序设计教程》&#xff0c;这本书详细的介绍了80386的实模式保护模式&#xff0c;段机制等等&#xff0c;唯一有点美中不足的是它的汇编语法格式不是AT&amp;T的<br />- 驱动&#xff0c;lab1涉及到的驱动有读写磁盘、串口并口、中断控制器等等&#xff0c;这些资料在ucore实验指导的参考资料里&#xff0c;也可以直接百度google&#xff0c;不用全部都理解&#xff0c;但是我觉得还是要懂一些。<br />- 中断时硬件行为&#xff0c;这一点能帮助理解ucore处理中断时软件和硬件之间的分工合作<br /><br />---<br />以上几点是lab1中涉及硬件的部分&#xff0c;虽说硬件细节不是操作系统课程的重点&#xff0c;但是写操作系统必须要懂。<br /><br /><br />## 练习<br /><br />lab1的几个练习&#xff0c;涉及面很广泛&#xff0c;前几个都是关于Makefile&#xff0c;gcc&#xff0c;gdb&#xff0c;qemu等工具的使用&#xff0c;这些我认为多花点时间去学一学也是有好处的&#xff0c;当然不用很精通&#xff0c;基本用法会了就可以&#xff0c;其实都不难。<br />- Makefile语法&#xff0c;makefile就是一个帮助管理项目的工具&#xff0c;它的语法很简单&#xff0c;复杂的函数可以暂时不用过于关注&#xff0c;看懂ucore的Makefile还是挺有必要的<br />- gcc、gdb等工具都是编译调试用的&#xff0c;吧Makefile中关于gcc、gdb的几个选项弄清楚大致就OK了<br />- qemu的选项也不用全部了解&#xff0c;看Makefile中涉及到的几个选项就可以了<br /><br />将上述几点看完前几个练习就没问题了&#xff0c;关于那个打印栈帧的函数&#xff0c;我是将ucore中关于调试的代码都看完了&#xff0c;看完之后我觉得对做实验的来说可以看也可以不看<br /><br />对于练习6&#xff0c;建立好中断机制&#xff0c;其实看完X86的段机制和中断机制就够了&#xff0c;虽说我认为补充代码很难&#xff0c;但是看懂lab_result中相关的答案没什么问题。<br /><br />## challenge<br /><br />lab1的两个challenge练习我认为很重要&#xff0c;可能确实是做不出来&#xff0c;但是可以看lab_result中相关的答案&#xff0c;只有lab1的challenge才有答案&#xff0c;理解了它后续的实验会简单很多。<br /><br /><br />## 总结<br /><br />lab1是ucore的基础&#xff0c;它学好了后续的实验基本上都不成问题。lab1花费的时间长一些完全是可以接受的&#xff0c;关键是要弄懂它&#xff0c;懂得关键代码每一行的具体意义&#xff08;如ucore实现中断的相关代码&#xff09;。<br /></md></p>"}, {"anon": "full", "uid_a": "a_0", "subject": "lab1学习经验", "created": "2019-04-20T14:28:54Z", "content": "<p><md><br />lab1是ucore实验的基础&#xff0c;一旦将lab1完全理解了&#xff0c;那么后续的实验将会是水到渠成的。<br /><br />lab1和其他项目的代码是不同的&#xff0c;它是一个操作系统&#xff0c;尽管它很小实现的功能很简陋&#xff0c;但它是直接运行在硬件上的&#xff0c;为此我们应该考虑一些更加底层的东西。<br /><br />## 了解硬件<br /><br />硬件细节是lab1必须掌握的内容&#xff0c;不须太多&#xff0c;我认为以下几点是必要的:<br /><br />- AT&amp;T汇编语法&#xff0c;具体可以google或者Linux中执行&#96;info as&#96;查看<br />- X86实模式和保护模式的转换&#xff0c;推荐《80X86汇编语言程序设计教程》&#xff0c;这本书详细的介绍了80386的实模式保护模式&#xff0c;段机制等等&#xff0c;唯一有点美中不足的是它的汇编语法格式不是AT&amp;T的<br />- 驱动&#xff0c;lab1涉及到的驱动有读写磁盘、串口并口、中断控制器等等&#xff0c;这些资料在ucore实验指导的参考资料里&#xff0c;也可以直接百度google&#xff0c;不用全部都理解&#xff0c;但是我觉得还是要懂一些。<br />- 中断时硬件行为&#xff0c;这一点能帮助理解ucore处理中断时软件和硬件之间的分工合作<br /><br />---<br />以上几点是lab1中涉及硬件的部分&#xff0c;虽说硬件细节不是操作系统课程的重点&#xff0c;但是写操作系统必须要懂。<br /><br /><br />## 练习<br /><br />lab1的几个练习&#xff0c;涉及面很广泛&#xff0c;前几个都是关于Makefile&#xff0c;gcc&#xff0c;gdb&#xff0c;qemu等工具的使用&#xff0c;这些我认为多花点时间去学一学也是有好处的&#xff0c;当然不用很精通&#xff0c;基本用法会了就可以&#xff0c;其实都不难。<br />- Makefile语法&#xff0c;makefile就是一个帮助管理项目的工具&#xff0c;它的语法很简单&#xff0c;复杂的函数可以暂时不用过于关注&#xff0c;看懂ucore的Makefile还是挺有必要的<br />- gcc、gdb等工具都是编译调试用的&#xff0c;吧Makefile中关于gcc、gdb的几个选项弄清楚大致就OK了<br />- qemu的选项也不用全部了解&#xff0c;看Makefile中涉及到的几个选项就可以了<br /><br />将上述几点看完前几个练习就没问题了&#xff0c;关于那个打印栈帧的函数&#xff0c;我是将ucore中关于调试的代码都看完了&#xff0c;看完之后我觉得对做实验的来说可以看也可以不看<br /><br />对于练习6&#xff0c;建立好中断机制&#xff0c;其实看完X86的段机制和中断机制就够了&#xff0c;虽说我认为补充代码很难&#xff0c;但是看懂lab_result中相关的答案没什么问题。<br /><br />## challenge<br /><br />lab1的两个challenge练习我认为很重要&#xff0c;可能确实是做不出来&#xff0c;但是可以看lab_result中相关的答案&#xff0c;只有lab1的challenge才有答案&#xff0c;理解了它后续的实验会简单很多。<br /><br /><br />## 总结<br /><br />lab1是ucore的基础&#xff0c;它学好了后续的实验基本上都不成问题。lab1花费的时间长一些完全是可以接受的&#xff0c;关键是要弄懂它&#xff0c;懂得关键代码每一行的具体意义&#xff08;如ucore实现中断的相关代码&#xff09;。<br /></md></p>"}, {"anon": "full", "uid_a": "a_0", "subject": "lab1学习经验", "created": "2019-04-20T14:27:18Z", "content": "<p><md><br />lab1是ucore实验的基础&#xff0c;一旦将lab1完全理解了&#xff0c;那么后续的实验将会是水到渠成的。<br /><br />lab1和其他项目的代码是不同的&#xff0c;它是一个操作系统&#xff0c;尽管它很小实现的功能很简陋&#xff0c;但它是直接运行在硬件上的&#xff0c;为此我们应该考虑一些更加底层的东西。<br /><br />## 了解硬件<br /><br />硬件细节是lab1必须掌握的内容&#xff0c;不须太多&#xff0c;我认为以下几点是必要的:<br /><br />- AT&amp;T汇编语法&#xff0c;具体可以google或者Linux中执行&#96;info as&#96;查看<br />- X86实模式和保护模式的转换&#xff0c;推荐《80X86汇编语言程序设计教程》&#xff0c;这本书详细的介绍了80386的实模式保护模式&#xff0c;段机制等等&#xff0c;唯一有点美中不足的是它的汇编语法格式不是AT&amp;T的<br />- 驱动&#xff0c;lab1涉及到的驱动有读写磁盘、串口并口、中断控制器等等&#xff0c;这些资料在ucore实验指导的参考资料里&#xff0c;也可以直接百度google&#xff0c;不用全部都理解&#xff0c;但是我觉得还是要懂一些。<br />- 中断时硬件行为&#xff0c;这一点能帮助理解ucore处理中断时软件和硬件之间的分工合作<br /><br />---<br />以上几点是lab1中涉及硬件的部分&#xff0c;虽说硬件细节不是操作系统课程的重点&#xff0c;但是写操作系统必须要懂。<br />---<br />## 练习<br /><br />lab1的几个练习&#xff0c;涉及面很广泛&#xff0c;前几个都是关于Makefile&#xff0c;gcc&#xff0c;gdb&#xff0c;qemu等工具的使用&#xff0c;这些我认为多花点时间去学一学也是有好处的&#xff0c;当然不用很精通&#xff0c;基本用法会了就可以&#xff0c;其实都不难。<br />- Makefile语法&#xff0c;makefile就是一个帮助管理项目的工具&#xff0c;它的语法很简单&#xff0c;复杂的函数可以暂时不用过于关注&#xff0c;看懂ucore的Makefile还是挺有必要的<br />- gcc、gdb等工具都是编译调试用的&#xff0c;吧Makefile中关于gcc、gdb的几个选项弄清楚大致就OK了<br />- qemu的选项也不用全部了解&#xff0c;看Makefile中涉及到的几个选项就可以了<br /><br />将上述几点看完前几个练习就没问题了&#xff0c;关于那个打印栈帧的函数&#xff0c;我是将ucore中关于调试的代码都看完了&#xff0c;看完之后我觉得对做实验的来说可以看也可以不看<br /><br />对于练习6&#xff0c;建立好中断机制&#xff0c;其实看完X86的段机制和中断机制就够了&#xff0c;虽说我认为补充代码很难&#xff0c;但是看懂lab_result中相关的答案没什么问题。<br />---<br />## challenge<br /><br />lab1的两个challenge练习我认为很重要&#xff0c;可能确实是做不出来&#xff0c;但是可以看lab_result中相关的答案&#xff0c;只有lab1的challenge才有答案&#xff0c;理解了它后续的实验会简单很多。<br />---<br />## 总结<br /><br />lab1是ucore的基础&#xff0c;它学好了后续的实验基本上都不成问题。lab1花费的时间长一些完全是可以接受的&#xff0c;关键是要弄懂它&#xff0c;懂得关键代码每一行的具体意义&#xff08;如ucore实现中断的相关代码&#xff09;。<br /></md></p>"}, {"anon": "full", "uid_a": "a_0", "subject": "lab1学习经验", "created": "2019-04-20T14:24:27Z", "content": "<p><md><br />lab1是ucore实验的基础&#xff0c;一旦将lab1完全理解了&#xff0c;那么后续的实验将会是水到渠成的。<br /><br />lab1和其他项目的代码是不同的&#xff0c;它是一个操作系统&#xff0c;尽管它很小实现的功能很简陋&#xff0c;但它是直接运行在硬件上的&#xff0c;为此我们应该考虑一些更加底层的东西。<br /><br />## 了解硬件<br /><br />硬件细节是lab1必须掌握的内容&#xff0c;不须太多&#xff0c;我认为以下几点是必要的:<br /><br />- AT&amp;T汇编语法&#xff0c;具体可以google或者Linux中执行&#96;info as&#96;查看<br />- X86实模式和保护模式的转换&#xff0c;推荐《80X86汇编语言程序设计教程》&#xff0c;这本书详细的介绍了80386的实模式保护模式&#xff0c;段机制等等&#xff0c;唯一有点美中不足的是它的汇编语法格式不是AT&amp;T的<br />- 驱动&#xff0c;lab1涉及到的驱动有读写磁盘、串口并口、中断控制器等等&#xff0c;这些资料在ucore实验指导的参考资料里&#xff0c;也可以直接百度google&#xff0c;不用全部都理解&#xff0c;但是我觉得还是要懂一些。<br />- 中断时硬件行为&#xff0c;这一点能帮助理解ucore处理中断时软件和硬件之间的分工合作<br /><br />---<br />以上几点是lab1中涉及硬件的部分&#xff0c;虽说硬件细节不是操作系统课程的重点&#xff0c;但是写操作系统必须要懂。<br /><br />## 练习<br /><br />lab1的几个练习&#xff0c;涉及面很广泛&#xff0c;前几个都是关于Makefile&#xff0c;gcc&#xff0c;gdb&#xff0c;qemu等工具的使用&#xff0c;这些我认为多花点时间去学一学也是有好处的&#xff0c;当然不用很精通&#xff0c;基本用法会了就可以&#xff0c;其实都不难。<br />- Makefile语法&#xff0c;makefile就是一个帮助管理项目的工具&#xff0c;它的语法很简单&#xff0c;复杂的函数可以暂时不用过于关注&#xff0c;看懂ucore的Makefile还是挺有必要的<br />- gcc、gdb等工具都是编译调试用的&#xff0c;吧Makefile中关于gcc、gdb的几个选项弄清楚大致就OK了<br />- qemu的选项也不用全部了解&#xff0c;看Makefile中涉及到的几个选项就可以了<br /><br />将上述几点看完前几个练习就没问题了&#xff0c;关于那个打印栈帧的函数&#xff0c;我是将ucore中关于调试的代码都看完了&#xff0c;看完之后我觉得对做实验的来说可以看也可以不看<br /><br />对于练习6&#xff0c;建立好中断机制&#xff0c;其实看完X86的段机制和中断机制就够了&#xff0c;虽说我认为补充代码很难&#xff0c;但是看懂lab_result中相关的答案没什么问题。<br /><br />## challenge<br /><br />lab1的两个challenge练习我认为很重要&#xff0c;可能确实是做不出来&#xff0c;但是可以看lab_result中相关的答案&#xff0c;只有lab1的challenge才有答案&#xff0c;理解了它后续的实验会简单很多。<br /><br />## 总结<br /><br />lab1是ucore的基础&#xff0c;它学好了后续的实验基本上都不成问题。lab1花费的时间长一些完全是可以接受的&#xff0c;关键是要弄懂它&#xff0c;懂得关键代码每一行的具体意义&#xff08;如ucore实现中断的相关代码&#xff09;。<br /></md></p>"}], "type": "note", "tags": ["2019", "lab1", "student", "学习方法"], "tag_good": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "student", "name": "289212182@qq.com", "endorser": {}, "admin": false, "photo": "1551463481_35.png", "id": "j7f1tr6wJNH", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/j7f1tr6wJNH/1551463481_35.png", "published": true, "us": false, "facebook_id": null}], "unique_views": 399, "children": [{"anon": "full", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>请各位同学补充相关经验&#xff0c;以方便后续学习的同学&#xff0c;感谢&#xff01;</p>\n<p></p>", "created": "2019-04-20T14:25:52Z", "bucket_order": 49, "bucket_name": "Week 4/14 - 4/20", "type": "followup", "tag_good": [], "uid_a": "a_0", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>&#34;关键是要弄懂它&#xff0c;懂得关键代码每一行的具体意义&#34;&#xff0c;这应该是通过实验来掌握操作系统知识的一条重要途径。表扬一下。</p>", "created": "2019-04-20T14:54:44Z", "bucket_order": 49, "bucket_name": "Week 4/14 - 4/20", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "jupmj3hsrk42d4", "updated": "2019-04-20T14:54:44Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "juplhz4qip572u", "updated": "2019-04-20T14:25:52Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>占个楼&#xff0c;明天来补充&#xff01; 哈哈~</p>", "created": "2019-04-20T15:12:29Z", "bucket_order": 49, "bucket_name": "Week 4/14 - 4/20", "type": "followup", "tag_good": [], "uid": "j7f1tr6wJNH", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "大家的主要问题应该是在实验环境搭建&#xff0c;以及实验一、实验二所要具备的额外的IA-32知识方面的问题。<div>针对第一个问题&#xff0c;我的建议是&#xff1a;以《ucore实验指导书》为基准。使用gdb进行调试&#xff1b;</div><div>针对第二个问题&#xff0c;我的建议是&#xff1a;可以参考陈老师在实验指导书中给出的参考教材《x86汇编语言从实模式到保护模式》&#xff0c;这本书提供了很多IA32保护模式的软硬件知识。</div>", "created": "2019-04-21T02:29:19Z", "bucket_order": 49, "bucket_name": "Week 4/14 - 4/20", "type": "feedback", "tag_good": [], "uid": "j7f1tr6wJNH", "children": [], "tag_good_arr": [], "id": "juqbcc4082o1pu", "updated": "2019-04-21T02:29:19Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "对于新同学——刚开始学习操作系统这门课的同学&#xff0c;可以先把理论课内容过一下(有条件可以做一下习题或者期中期末试卷)。形成对操作体统这门课的整体认识与知识框架。包括进程管理、内存管理、I/O设备管理、文件管理——四个主要部分&#xff0c;进程同步互斥&#xff0c;死锁&#xff0c;处理机调度&#xff0c;页面置换。<div>个人感觉操作系统理论课部分难度并不大&#xff0c;大多是对于概念或者模型的阐释与认识。辅佐适当习题可以更好的分清概念与概念之间的区别与联系&#xff0c;使得知识框架更清晰&#xff01;&#xff3b;注&#xff3d;教材&#xff1a;可以选用老师在课程wiki上提供的三本教材</div><div>&#xff08;对于初学者如果觉得太厚可以以上文知识框架的四个主要部分为主线&#xff0c;图书的其他部分为次要知识点。当然如果还是觉得不够清晰&#xff0c;可以任意选择一本手边可以得到的“超薄”操作系统教材。我认为对于课程原理内容的阐释&#xff0c;不同的教材都是大同小异的&#xff09;。然后把重点落实到实验课上来&#xff0c;也就是具体实现。</div>", "created": "2019-04-22T01:56:22Z", "bucket_order": 48, "bucket_name": "Week 4/21 - 4/27", "type": "feedback", "tag_good": [], "uid": "j7f1tr6wJNH", "children": [], "tag_good_arr": [], "id": "jurpltcocv83de", "updated": "2019-04-22T01:56:22Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>对于中等级别的同学——似乎精读课本&#xff0c;与更加深入的理解更为重要。就相当于操作系统这门课的知识框架建立好了&#xff0c;然后添砖加瓦&#xff0c;形成漂亮房屋的过程。</p>\n<div>举个小例子&#xff1a;如果知道了“写文件”的系统调用号是1&#xff0c;按照惯例%rax存放系统调用号&#xff0c;%rdi、%rsi、%rdx、%r10、%r8和%r9依次包含各种参数。那么我们在调用write函数时&#xff0c;头脑就可以非常清晰代码的具体动作。</div>\n<div>&#xff08;当然不仅仅是这个小的非常简单的write函数。在ucore实验中有很多这样“小的、非常简单的”函数&#xff0c;具体了解了“他们”的“动作”&#xff0c;阅读源码时就不会看不懂了。&#xff09;</div>\n<div>&#xff08;或者反过来说&#xff0c;正是这些“小部件”的不理解&#xff0c;它们累计起来一股脑出现在实验课的源码中&#xff0c;使你晕头转向 &#xff1a;&#xff09;</div>", "created": "2019-04-22T02:51:46Z", "bucket_order": 48, "bucket_name": "Week 4/21 - 4/27", "type": "feedback", "tag_good": [], "uid": "j7f1tr6wJNH", "children": [], "tag_good_arr": [], "id": "jurrl1m95v179", "updated": "2019-04-22T02:51:46Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jupn5wm0hbp50f", "updated": "2019-04-20T15:12:29Z", "config": {}}], "tag_good_arr": ["hdjonbiyfs62ie", "j7f1tr6wJNH"], "id": "juplg51tsp76cu", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 8, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169714750, "default_anonymity": "no"}, "error": null, "aid": "kyv0tmbi50o4n1"}