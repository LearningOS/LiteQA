{"result": {"folders": ["lecture21"], "nr": 869, "data": {"embed_links": []}, "created": "2016-05-16T02:50:01Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i0ccfx63sir1e", "anon": "no", "when": "2016-05-16T02:50:01Z", "data": "io9exgrj2xg6o", "type": "create"}, {"to": "io9exgrhqh96n", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-05-16T03:15:57Z", "type": "followup"}, {"to": "io9exgrhqh96n", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-05-16T03:53:09Z", "data": "io9h6nfku7m4jh", "type": "i_answer"}, {"to": "io9exgrhqh96n", "uid": "i0et95bli7r7ky", "anon": "no", "when": "2016-05-18T07:28:26Z", "type": "followup"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i0ccfx63sir1e", "subject": "文件系统的初步了解", "created": "2016-05-16T02:50:01Z", "content": "<p>上周课上&#xff0c;向勇老师让我们去了解ZFS等文件系统。我想到了一个问题&#xff1a;<strong>一个文件系统与另一个文件系统&#xff0c;主要区别在哪些方面呢&#xff1f;</strong></p>\n<p></p>\n<p>为此我看了一些资料&#xff0c;整理如下。</p>\n<p></p>\n<p>1、文件系统之间的不同&#xff0c;主要体现在三个方面&#xff1a;</p>\n<ul><li>Limits</li><li>Features</li><li>Allocation and layout policies</li></ul>\n<p></p>\n<p>2、Limits</p>\n<p></p>\n<p>Limits与metadata的有关&#xff0c;metadata某些字段的长度是固定的&#xff0c;从而对某些属性有限制。</p>\n<p></p>\n<p>文件系统与此有关的特点&#xff1a;</p>\n<ul><li>文件名长度限制(filename length)。例如我们常见的文件系统一般限制为255字节。</li><li>单个文件大小限制(file size)</li><li>文件数限制(numbers of files)</li></ul>\n<p></p>\n<p>3、Features</p>\n<p></p>\n<p>这部分主要是文件系统的功能特点&#xff0c;不同文件系统可能有其中的某些功能。这些功能不包括文件系统的分配管理。常见的特点简单介绍如下&#xff1a;</p>\n<p></p>\n<ol><li>Symbolic links, Hard links 软链接、硬链接<br />\n<ul><li>你应该懂的</li></ul>\n</li><li>filesystem-level encryption 文件系统级加密\n<ul><li>对用户透明</li></ul>\n</li><li>case-sensitive, case-preserving 大小写敏感\n<ul><li>有两部分&#xff1a;文件名大小写敏感、文件名大小写保留。case-preserving是指文件名在系统中保存时&#xff0c;是否保留大小写&#xff1b;case-sensitive是指文件调用的时候&#xff0c;是否对文件名大小写敏感。</li><li>文件名保留大小写&#xff0c;但仍然可以大小写不敏感&#xff0c;例如在mac(HFS&#43;)下执行以下命令&#xff0c;Temp和temp都能访问&#xff0c;但如果已有Temp再创建temp&#xff0c;则报错已存在。</li><li>\n<pre>$ mkdir Temp<br />$ file temp<br />temp: directory<br />$ mkdir temp<br />mkdir: temp: File exists</pre>\n</li></ul>\n</li><li>file change log 文件更改记录\n<ul><li>记录创建、链接、重命名等数据的改变。&#xff08;不同于journal&#xff09;</li><li>log记录的是某个文件的某些属性的改变</li><li>journal记录的是文件系统操作&#xff0c;关心事务的提交、完成</li></ul>\n</li><li>block journaling, metadata-only journaling 日志\n<ul><li>拥有该特性的系统&#xff0c;一般被称为日志文件系统(journaling file system)</li><li>有日志与没有日志有什么不同呢&#xff1f;有日志是为了解决文件系统恢复的问题。例如delete file操作&#xff0c;在unix系统下分为三步&#xff1a;</li><li>\n<pre>removing its directory entry<br />releasing the inode to the pool of free inodes<br />returning all used disk blocks to the pool of free disk blocks</pre>\n</li><li>如果完成第一步后突然掉电&#xff0c;那么inode和disk blocks 就没有正常释放&#xff0c;造成存储泄漏。</li><li>日志文件系统则会这么做&#xff1a;例如给一个文件追加一部分内容&#xff0c;步骤如下&#xff1a;</li><li>\n<pre>1、拷贝所有内容块到文件系统某个位置<br />2、再这些内容追加到该文件的末尾</pre>\n</li><li>如果中间发生意外&#xff0c;如发生在步骤一&#xff0c;则操作未发生&#xff0c;可根据日志重新执行&#xff1b;如发生在步骤二&#xff0c;则根据日志从文件系统某处重新拷贝可恢复。缺点是拷贝2次。其它操作也是如此&#xff0c;通过日志的方式分步骤&#xff0c;确保操作安全、可恢复。</li></ul>\n</li><li>copy-on-write file system COW\n<ul><li>基于日志文件系统&#xff0c;进一步优化&#xff0c;既可实现日志功能&#xff0c;又避免拷贝2次。</li><li>例如修改一个block&#xff1a;正在使用的block不会覆盖&#xff0c;而是分配一个新的block&#xff0c;内容写到新的block中&#xff0c;然后修改metadata指向新的block。</li><li>ZFS的特点之一</li></ul>\n</li><li>snapshot 快照\n<ul><li>COW恰恰可以用作快照。旧的数据可以被保留&#xff0c;分配一个版本号。</li></ul>\n</li><li>excute in place XIP\n<ul><li>直接在存储器上运行程序&#xff0c;而不用把程序拷贝到RAM。</li><li>为什么要这么做呢&#xff1f;大概是跟BIOS、嵌入式有关吧~不太理解</li></ul>\n</li><li>data deduplication 数据去重</li></ol>\n<p></p>\n<p>4、Allocation and layout policies</p>\n<p></p>\n<p>文件系统为文件的data分配空间&#xff0c;用一些策略来提高性能或利用率。</p>\n<p></p>\n<ol><li>Tail packing 末尾合并\n<ul><li>按块分配的空间分配造成内部碎片&#xff08;internal fragment&#xff09;&#xff0c;每个文件最后的用那个block有浪费。</li><li>Tail packing就是让若干文件的尾巴部分共享使用一个block。</li></ul>\n</li><li>Transparent compression 透明压缩\n<ul><li>对用户透明。</li><li>每次读写要解压和压缩消耗CPU&#xff0c;但减小了对外设的操作数据量&#xff0c;性能反而可以提高&#xff0c;因为外设的访问更费时</li></ul>\n</li><li>Block suballocation 块的子划分\n<ul><li>也是用于解决最后那个block。</li><li>对最后的block单独用更小单位划分&#xff0c;充分利用空间。</li></ul>\n</li><li>Allocate-on-flush 延后分配\n<ul><li>delayed allocation&#xff0c;flush时才allocate</li><li>例如HFS&#43;支持该功能&#xff0c;mac下&#xff08;生成1G文件&#xff09;</li><li>\n<pre>FILE *file = fopen(&#34;temp.txt&#34;,&#34;w&#34;);<br />fseek(file,1024*1024*1024,SEEK_CUR);<br />fputc(&#39;0&#39;,file);<br />fclose(file);</pre>\n</li><li>停在fclose好几秒&#xff0c;说明flush时才allocate。</li></ul>\n</li><li>Extents\n<ul><li>用一定范围变动的簇大小&#xff0c;而不是唯一的簇大小。&#xff08;不太懂&#xff09;</li></ul>\n</li><li>Variable file block size\n<ul><li>单文件可被分配不同大小的簇。</li><li>区别于固定大小块的文件系统&#xff1a;例如簇为4KB、8KB的文件系统&#xff0c;可分配的簇是固定的。该特点是指可分配的簇大小可以变</li></ul>\n</li><li>Sparse files 稀疏文件\n<ul><li>如前面生成1G文件的操作&#xff0c;中间有大片空白&#xff0c;支持稀疏的文件系统操作更快更省空间。</li><li>缺点是可能造成更多文件碎片。</li></ul>\n</li></ol>\n<p></p>\n<p>5、小结</p>\n<p></p>\n<p>对于一个文件系统&#xff0c;我们要看到一些数字&#xff0c;例如单文件最大长度、目录最大层级数&#xff0c;等等&#xff0c;这是我们容易注意到的。同时也要看到文件系统的特点&#xff0c;例如ZFS的日志、COW、快照等等&#xff0c;但特点可能会牺牲时间、空间&#xff0c;不一定越强大越好&#xff0c;简单的U盘可能FAT就够了。写程序的时候&#xff0c;可以根据文件系统的特点做优化。</p>\n<p></p>\n<p>课上向勇老师还提出&#xff0c;希望我们能进一步了解这些文件系统的某些细节。我们是否可以了解一下ZFS的zpools更具体的内容、这些文件系统的inode长什么样、这些文件系统的空间如何partition&#xff0c;等等。大家感兴趣可以进一步了解。</p>\n<p></p>\n<p>6、参考资料</p>\n<p></p>\n<p>主要就是把wiki上看到整理了一下。</p>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa380375%28v=vs.85%29.aspx\">https://msdn.microsoft.com/en-us/library/windows/desktop/aa380375(v=vs.85).aspx</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Design_of_the_FAT_file_system\">https://en.wikipedia.org/wiki/Design_of_the_FAT_file_system</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Comparison_of_file_systems\">https://en.wikipedia.org/wiki/Comparison_of_file_systems</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Journaling_file_system\">https://en.wikipedia.org/wiki/Journaling_file_system</a></p>\n<p></p>\n<p>可能有理解不正确的地方&#xff0c;欢迎大家批评指正~</p>"}], "type": "question", "tags": ["lecture21", "student"], "tag_good": [{"role": "student", "name": "叶子鹏", "endorser": {}, "admin": false, "photo": null, "id": "i0f24oie8102cr", "photo_url": null, "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 187, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>赞&#xff01;</p>", "created": "2016-05-16T03:15:57Z", "bucket_order": 203, "bucket_name": "Week 5/15 - 5/21", "type": "followup", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "io9futix5oh310", "updated": "2016-05-16T03:15:57Z", "config": {}}, {"folders": [], "data": {"embed_links": []}, "children": [], "created": "2016-05-16T03:53:09Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "io9h6nfg3wq4jg", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2016-05-16T03:53:09Z", "content": "<p>这是我想看到分析。希望有更多的同学来提问和回答。</p>\n<p></p>\n<p>实际上&#xff0c;在我们的教学过中会引用网上的wikipedia或百科类的参考。但目前这些参考中与操作系统相关的内容并不是都是描述很准确。也许以后我们可以基于课堂上的讨论来形成一些比较准确的操作系统百科。</p>\n<p></p>\n<p>总之&#xff0c;希望同学在操作系统课的学习过程中&#xff0c;通过交流来深化对操作系统知识的理解。</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>太棒&#xff01;</p>", "created": "2016-05-18T07:28:26Z", "bucket_order": 203, "bucket_name": "Week 5/15 - 5/21", "type": "followup", "tag_good": [], "uid": "i0et95bli7r7ky", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "iocjr7h3p3o5at", "updated": "2016-05-18T07:28:26Z", "config": {}}], "tag_good_arr": ["i0f24oie8102cr", "hdjonbiyfs62ie"], "no_answer": 0, "id": "io9exgrhqh96n", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168663047, "default_anonymity": "no"}, "error": null, "aid": "kyv072tjxyj1zb"}