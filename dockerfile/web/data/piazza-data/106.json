{"result": {"folders": ["lab1"], "nr": 106, "data": {"embed_links": []}, "created": "2015-03-15T02:06:37Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i6rvi22aN6Q", "anon": "no", "when": "2015-03-15T02:06:37Z", "data": "i79sx2am340506", "type": "create"}, {"uid": "i6rvi22aN6Q", "anon": "no", "when": "2015-03-15T02:22:15Z", "data": "i79th6at5645au", "type": "update"}, {"to": "i79sx2aka9k505", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-15T04:07:54Z", "data": "i79x911nr1n7g0", "type": "i_answer"}, {"to": "i79sx2aka9k505", "uid": "i6tx0nskPKr", "anon": "no", "when": "2015-03-15T05:47:24Z", "type": "followup"}, {"to": "i79sx2aka9k505", "uid": "hdjoucuyb836fq", "anon": "no", "when": "2015-03-16T00:32:59Z", "type": "feedback"}, {"to": "i79sx2aka9k505", "uid": "i6rvi22aN6Q", "anon": "no", "when": "2015-03-19T13:22:33Z", "type": "followup"}, {"uid": "i6rvi22aN6Q", "anon": "no", "when": "2015-03-19T13:24:15Z", "data": "i7g6vx3fcjk4m1", "type": "update"}, {"to": "i79sx2aka9k505", "uid": "hs2swpdtr91gu", "anon": "no", "when": "2015-03-19T15:20:33Z", "type": "feedback"}, {"to": "i79sx2aka9k505", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-21T01:34:45Z", "type": "followup"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i6rvi22aN6Q", "subject": "cpu寻址时机器如何区分ROM和RAM", "created": "2015-03-19T13:24:15Z", "content": "<p>比如&#xff0c;IA-32CPU上电复位后&#xff0c;产生地址0xFFFFFFF0&#xff0c;从BIOS&#xff08;ROM&#xff09;中抓取第一条指令。</p>\n<p></p>\n<p>可是理论上&#xff0c;这个地址也在内存&#xff08;RAM&#xff09;的访问范围内&#xff0c;系统为什么不是首先寻址内存呢&#xff08;RAM与ROM一样连着地址线&#xff09;&#xff1f;</p>\n<p></p>\n<p>想必机器启动后&#xff0c;首先纯由硬件系统来区分寻址ROM还是RAM&#xff0c;因为此时还没执行指令呢。那么&#xff0c;困惑就是&#xff1a;机器是通过什么机制或原理保障第一条指令是访问BIOS而不是内存呢&#xff1f;</p>\n<p></p>\n<p>&#xff08;学习操作系统主要是探究kernel的机理。不过&#xff0c;如果针对一个裸机&#xff08;如一个具体的嵌入式系统硬件&#xff09;&#xff0c;需要写或配置一个OS&#xff0c;作为软件开发人员&#xff0c;不仅需要掌握kernel、bootloader和BIOS程序&#xff0c;本人认为了解硬件是如何确保软件正确运行之类的知识也是有实际益处的。&#xff09;</p>\n<p></p>"}, {"anon": "no", "uid": "i6rvi22aN6Q", "subject": "cpu寻址时机器如何区分ROM和RAM", "created": "2015-03-15T02:22:15Z", "content": "<p>比如&#xff0c;IA-32CPU上电复位后&#xff0c;产生地址0xFFFFFFF0&#xff0c;从BIOS&#xff08;ROM&#xff09;中抓取第一条指令。</p>\n<p></p>\n<p>可是理论上&#xff0c;这个地址也在内存&#xff08;RAM&#xff09;的访问范围内&#xff0c;系统为什么不是首先寻址内存呢&#xff08;RAM与ROM一样连着地址线&#xff09;&#xff1f;</p>\n<p></p>\n<p>想必机器启动后&#xff0c;首先纯由硬件系统来区分寻址ROM还是RAM&#xff0c;因为此时还没执行指令呢。那么&#xff0c;困惑就是&#xff1a;机器是通过什么机制或原理保障第一条指令是访问BIOS而不是内存呢&#xff1f;</p>\n<p></p>\n<p>&#xff08;学习操作系统主要是探究kernel的机理。不过&#xff0c;如果针对一个裸机&#xff08;如一个具体的嵌入式系统硬件&#xff09;&#xff0c;需要写或配置一个OS&#xff0c;作为软件开发人员&#xff0c;不仅需要掌握kernel、bootloader和BIOS程序&#xff0c;本人认为了解硬件是如何确保软件正确运行之类的知识也是有实际益处的。&#xff09;</p>\n<p></p>"}, {"anon": "no", "uid": "i6rvi22aN6Q", "subject": "cpu寻址时机器如何区分ROM和RAM", "created": "2015-03-15T02:06:37Z", "content": "<p>比如&#xff0c;IA-32CPU上电复位后&#xff0c;产生地址0xFFFFFFF0&#xff0c;从BIOS&#xff08;ROM&#xff09;中抓取第一条指令。</p>\n<p></p>\n<p>可是理论上&#xff0c;这个地址也在内存&#xff08;RAM&#xff09;的访问范围内&#xff0c;系统为什么不是首先寻址内存呢&#xff08;RAM与ROM一样连着地址线&#xff09;&#xff1f;</p>\n<p></p>\n<p>想必机器启动后&#xff0c;首先纯由硬件系统来区分寻址ROM还是RAM&#xff0c;因为此时还没执行指令呢。那么&#xff0c;困惑就是&#xff1a;机器是通过什么机制或原理保障第一条指令是访问BIOS而不是内存呢&#xff1f;</p>\n<p></p>\n<p>&#xff08;学习操作系统主要是探究kernel的机理。不过&#xff0c;如果针对一个裸机&#xff08;如一个具体的嵌入式系统硬件&#xff09;&#xff0c;需要写或配置一个OS&#xff0c;作为软件开发人员&#xff0c;不仅需要掌握kernel、bootloader和BIOS程序&#xff0c;本人认为了解硬件是如何确保软件运行之类的知识也是有实际益处的。&#xff09;</p>\n<p></p>"}], "type": "note", "tags": ["lab1", "student"], "tag_good": [{"role": "instructor", "name": "Yu Chen", "endorser": {}, "admin": true, "photo": "1378950179_35.png", "id": "hcrrjuyequh4bt", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hcrrjuyequh4bt/1378950179_35.png", "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 158, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2015-03-15T04:07:54Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "i79x911hefi7fz", "history": [{"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "", "created": "2015-03-15T04:07:54Z", "content": "<p>我理解对于嵌入式CPU寻址&#xff0c;可不用区分ROM还是RAM&#xff0c;而是通过软件就可以搞定&#xff0c;比如对一个地址写一个数&#xff0c;然后读出来&#xff0c;如果与写的一致那就是RAM,如果不一致&#xff0c;那可能就是ROM了。</p>\n<p>对于x86 CPU, 我想在BIOS也是通过类似的机制实现了对内存特征的探测&#xff0c;然后提供了int 15服务&#xff0c;让bootloader知道当前的内存特征 &#xff08;可看lab2/boot/bootasm.S&#xff09;</p>\n<p></p>\n<p>Q:机器是通过什么机制或原理保障第一条指令是访问BIOS而不是内存呢&#xff1f;</p>\n<p>A&#xff1a;我理解&#xff0c;x86 CPU定死了第一条指令的地址0xFFFFFFF0&#xff0c;这只是一个约定而已。至于是BIOS还是其他软件&#xff0c;是ROM还是RAM其实没那么重要&#xff0c;只要放在那的软件能进一步完成初始化工作即可。</p>\n<p>对于某些ARM CPU, 加电后第一条指令的地址为0x0, 这也是一个约定&#xff0c;且这个地址可以是RAM&#xff0c;也可以是ROM&#xff0c;还可以通过跳线来把加电后第一条指令的地址为另外一个地址。</p>\n<p>所以&#xff0c;理解硬件手册(hardware datasheet)对于某些类型的开发人员是必须的&#xff0c;但这没有OS理论在里面。</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p></p><p style=\"text-align:left\">The first instruction that is fetched and executed following a hardware reset is located at physical address <br />FFFFFFF0H. This address is 16 bytes below the processor’s uppermost physical address.The EPROM containing the <br />softwareinitialization code must be located at this address.</p>\n<p></p>\n<p> IA32手册 。 我觉得这是规定吧都说了在 EPROM。。</p>", "created": "2015-03-15T05:47:24Z", "bucket_order": 273, "bucket_name": "Week 3/15 - 3/21", "type": "followup", "tag_good": [], "uid": "i6tx0nskPKr", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>就是规定&#xff1a;The EPROM ... <strong>must</strong> be located at this address<br /></p>", "created": "2015-03-16T00:32:59Z", "bucket_order": 273, "bucket_name": "Week 3/15 - 3/21", "type": "feedback", "tag_good": [], "uid": "hdjoucuyb836fq", "children": [], "tag_good_arr": [], "id": "i7b50hpn7h72sf", "updated": "2015-03-16T00:32:59Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i7a0szcrw3g3b4", "updated": "2015-03-15T05:47:24Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>谢谢老师和童鞋的解释。<br />看来没有表达清楚&#xff0c;让大家误解了问题的本意。</p>\n<p></p>\n<p>可否先达成如下共识&#xff1a;</p>\n<p></p>\n<p>1. 无论何时&#xff0c;CPU都不管抓取的指令是来自ROM还是RAM。</p>\n<p></p>\n<p>CPU只管向bus发出寻址信息&#xff08;包括地址和控制信息&#xff09;&#xff0c;由识别这个寻址信息的ROM或RAM响应&#xff0c;向bus提供数据信息&#xff0c;CPU再从bus上获得这个数据信息作为它执行的指令。</p>\n<p></p>\n<p>2. 无论如何&#xff0c;对于CPU执行的第一条指令&#xff0c;计算机系统都要保障来自ROM。</p>\n<p></p>\n<p>原因是显然的&#xff0c;因为计算机系统上电复位后&#xff0c;RAM还没进行处理&#xff0c;其内容是不确定的&#xff0c;不能作为第一条指令。</p>\n<p></p>\n<p>3. 那么&#xff0c;计算机系统如何保障第一条指令来自ROM?</p>\n<p></p>\n<p>对于使用Microcontroller&#xff08;MCU&#xff09;的系统&#xff0c;因为芯片内嵌ROM&#xff0c;可由这个MCU本身保障第一条指令来自ROM&#xff08;ROM里的程序视ROM类型&#xff08;OTP/MASK/FLASH ROM&#xff09;采用不同方式写入&#xff09;。</p>\n<p></p>\n<p>而对于使用Microprocessor&#xff08;如x86系列&#xff09;的系统&#xff0c;由于芯片无ROM&#xff0c;必须外挂 ROM&#xff0c;所以&#xff0c;第一条指令的寻址是由Microprocessor上电复位后&#xff08;管脚&#xff09;的物理地址、控制信息和系统的硬件电路&#xff08;Hardware Circuit&#xff09;共同决定的&#xff0c;也就是说&#xff0c;要保障第一条指令来自ROM取决于Microprocessor和Hardware Circuit。</p>\n<p></p>\n<p>通过一个具体的计算机寻址第一条指令的过程来说明这个观点&#xff1a;</p>\n<p>采用南北桥结构的PC&#xff08;不知现在的电脑还是不是这种结构&#xff09;启动后&#xff0c;CPU依次通过主板上的北桥、南桥访问到BIOS而获得第一条指令。试想&#xff0c;如果改变硬件电路&#xff0c;把BIOS芯片连接到北桥上&#xff08;其他不变&#xff09;或者连接到南桥的方式不对&#xff0c;那可以断定&#xff1a;计算机连第一条指令都不能正常执行&#xff0c;程序不能跑起来。。。</p>\n<p></p>\n<p>&#xff08;计算机包括硬件和软件&#xff0c;作为系统设计者&#xff0c;在原理上是要确保程序能正常运行的电路条件获得满足的。而作为软件&#xff08;包括OS&#xff09;开发人员&#xff0c;不仅要对程序的正确性负责&#xff0c;也要了解程序运行之硬件环境的知识&#xff0c;以便与系统设计者、硬件工程师一起解决系统的一些问题。这就是帖子所说的”了解硬件是如何确保软件正确运行之类的知识也是有实际益处的“的具体意思。&#xff09;</p>\n<p></p>\n<p>如果以上三点没有异议&#xff0c;那么现在&#xff0c;把本人的问题&#xff1a;</p>\n<p></p>\n<p><strong>&#34;机器</strong>是通过什么机制或原理<strong>保障</strong>第一条指令是<strong>访问BIOS</strong>而不是内存呢&#xff1f;&#34;</p>\n<p>&#xff08;按照关键字简化就是&#xff1a;机器&#xff08;指计算机&#xff09;保障访问BIOS的机制或原理是什么&#xff1f;&#xff09;</p>\n<p></p>\n<p>具体一下就是&#xff1a;</p>\n<p></p>\n<p>&#xff08;对于x86系列的&#xff09;CPU上电复位后&#xff0c;产生的地址0xFFFFFFF0&#xff08;和控制&#xff09;信息是如何传递到BIOS芯片的&#xff1f;假定系统采用南北桥结构&#xff0c;这些信息为什么没有通过北桥传递到RAM?对此&#xff0c;南、北桥都干了些什么&#xff1f;如何干的&#xff1f;</p>\n<p>也就是说&#xff0c;想明确知道南、北桥协同CPU控制寻址的机理。</p>\n<p>&#xff08;可能大家会说这是”计算机组成原理“课程的内容&#xff0c;但本人没有看到国内此类课程讲解到这个层次的&#xff0c;课程范围主要在CPU本身。&#xff09;</p>\n<p></p>\n<p>如上分析&#xff0c;软件&#xff08;包括OS&#xff09;本身与计算机硬件控制寻址没有关系&#xff08;在这点上&#xff0c;硬件对软件是透明的&#xff09;&#xff0c;没搞清硬件的这个问题不妨碍OS的学习。</p>\n<p>但本人没钱也任性&#xff0c;好奇包括硬件在内的计算机运行的各个环节。^_^</p>\n<p></p>\n<p>最后&#xff0c; 针对IA32手册写道&#34;The EPROM containing the software initialization code must be located at this address&#34;&#xff0c;确实是”规定“&#xff0c;或者说是”需求“&#xff0c;是IA32系列processor要求外挂的ROM在processor上电复位后必须在物理地址0xFFFFFFF0寻址到&#xff08;以便processor获得第一条指令是正确的&#xff09;。这个”需求“由系统的硬件电路&#xff08;不仅仅是processor&#xff09;来满足它的。</p>\n<p></p>\n<p>&#xff08;如果系统使用的是Microcontroller&#xff08;内含ROM&#xff09;&#xff0c;则由这个芯片本身做到这点&#xff0c;这时MCU datasheet或MCU manual针对上电复位大慨不会使用”must“这个词。&#xff09;</p>", "created": "2015-03-19T13:22:33Z", "bucket_order": 273, "bucket_name": "Week 3/15 - 3/21", "type": "followup", "tag_good": [], "uid": "i6rvi22aN6Q", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>可以参考以下两个同学之前的问题以及其中的链接</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=105\">https://piazza.com/class/i5j09fnsl7k5x0?cid=105</a> </p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=91\">https://piazza.com/class/i5j09fnsl7k5x0?cid=91</a> </p>\n<p>个人觉得北桥遇到0xFFFFFFF0就会送到ROM处理&#xff0c;具体的实现应该与硬件密切相关&#xff0c;需要查阅相关的文档&#xff0c;还有的说法是BIOS会自解压到内存</p>", "created": "2015-03-19T15:20:33Z", "bucket_order": 273, "bucket_name": "Week 3/15 - 3/21", "type": "feedback", "tag_good": [], "uid": "hs2swpdtr91gu", "children": [], "tag_good_arr": [], "id": "i7gb1h8y5e5v9", "updated": "2015-03-19T15:20:33Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i7g6tprdlog464", "updated": "2015-03-19T13:22:33Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>&#64;<a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=106\">Alanpsc</a>  </p>\n<p>很高兴有看到这么深入的问题&#xff01;</p>\n<p>你其实已经了解硬件架构&#xff08;CPU&#43;主板&#xff09;上的一些细节了。对于你的问题&#xff1a;“机器&#xff08;指计算机&#xff09;保障访问BIOS的机制或原理是什么&#xff1f;”涉及到了x86的硬件设计&#xff0c;且时间发生在OS&#xff0c;甚至是BIOS启动之前&#xff0c;其难度安和深度已经超出了本课的范畴。</p>\n<p>我觉得我答不出你的问题。</p>\n<p>如果群里有Intel工程师&#xff0c;也许能够比较清楚地解答你的问题。</p>\n<p></p>\n<p></p>", "created": "2015-03-21T01:34:45Z", "bucket_order": 273, "bucket_name": "Week 3/15 - 3/21", "type": "followup", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "i7icf70mw2872z", "updated": "2015-03-21T01:34:45Z", "config": {}}], "tag_good_arr": ["hcrrjuyequh4bt"], "id": "i79sx2aka9k505", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167321858, "default_anonymity": "no"}, "error": null, "aid": "kyuzebyazsw4ep"}