{"result": {"folders": ["lecture4", "2018"], "nr": 1132, "data": {"embed_links": []}, "created": "2018-03-01T09:29:50Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "ikvcvno79n07iu", "data": "je8b6qu7z2z7k3", "type": "create", "when": "2018-03-01T09:29:50Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "je8e1gmxcsm1m7", "to": "je8b6qu4zlv7k1", "type": "i_answer", "when": "2018-03-01T10:49:42Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "je8e24moofo1t1", "type": "update", "when": "2018-03-01T10:50:13Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "je9rje7u26x1yg", "to": "je8b6qu4zlv7k1", "type": "s_answer", "when": "2018-03-02T09:55:20Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "je9rl1rjkvp2mo", "type": "s_answer_update", "when": "2018-03-02T09:56:37Z"}, {"anon": "no", "uid": "j9p3tttiDdhN", "to": "je8b6qu4zlv7k1", "type": "followup", "when": "2018-03-02T16:20:52Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "to": "je8b6qu4zlv7k1", "type": "feedback", "when": "2018-03-03T16:08:35Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jebkduqwgfb690", "type": "s_answer_update", "when": "2018-03-03T16:10:37Z"}, {"anon": "no", "uid": "j9p3tttiDdhN", "to": "je8b6qu4zlv7k1", "type": "feedback", "when": "2018-03-03T19:13:44Z"}, {"anon": "no", "uid": "je2ib344a1k69u", "to": "je8b6qu4zlv7k1", "type": "followup", "when": "2018-03-04T09:54:02Z"}, {"anon": "no", "uid": "je2ib344a1k69u", "to": "je8b6qu4zlv7k1", "type": "feedback", "when": "2018-03-04T09:54:26Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "to": "je8b6qu4zlv7k1", "type": "feedback", "when": "2018-03-05T15:03:33Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "网络学堂mooc中《4.3 GCC内联汇编》一节中的一些疑问", "created": "2018-03-01T10:50:13Z", "content": "<p>在4.3 GCC内联汇编一节中6:14处出现了这样的图像&#xff1a;</p>\n<p><img src=\"/img/1132-3c78b4b89393b422.png\" alt=\"\" /></p>\n<p>这个例子是陈渝老师用于说明在C语言代码中使用内联汇编。</p>\n<p></p>\n<p>针对这个例子&#xff0c;我在学习的时候主要有两个疑问&#xff1a;</p>\n<ol><li>&#34;a&#34;表示的是%eax寄存器&#xff0c;所以&#34;=a&#34;(__res)应该是指将%eax的值赋给__res&#xff0c;那为什么例子中是将%edi的值赋给了__res</li><li>C语言会将局部变量依次储存在栈中&#xff0c;arg1对应的位置为-28(%ebp),arg2对应的位置为-24(%ebp)&#xff0c;所以__res得位置应该为-32(%ebp)&#xff0c;与例子中的-12(%ebp)不符</li></ol>\n<p></p>\n<p>我在mooc所指定的虚拟机中进行了实验&#xff1a;</p>\n<pre>// main.cpp\nint main(int argc, char* argv[])\n{\n\tlong __res, arg1=2, arg2=22, arg3=222, arg4=233;\n\t__asm__ volatile(&#34;int $0x80&#34;\n\t\t\t: &#34;=a&#34;(__res)\n\t\t\t: &#34;0&#34;(11), &#34;b&#34;(arg1), &#34;c&#34;(arg2), &#34;d&#34;(arg3), &#34;S&#34;(arg4));\n\n\treturn 0;\n}</pre>\n<p>执行命令&#xff1a;</p>\n<pre>gcc main.cpp -o main.exe -m32\nobjdump -d main.exe &gt; main.s</pre>\n<p>在生产的汇编代码main.s中&#xff0c;找到了如下代码&#xff1a;</p>\n<pre> 8048411:\tb8 0b 00 00 00       \tmov    $0xb,%eax\n 8048416:\t8b 5d e4             \tmov    -0x1c(%ebp),%ebx\n 8048419:\t8b 4d e8             \tmov    -0x18(%ebp),%ecx\n 804841c:\t8b 55 ec             \tmov    -0x14(%ebp),%edx\n 804841f:\t8b 75 f0             \tmov    -0x10(%ebp),%esi\n 8048422:\tcd 80                \tint    $0x80\n 8048424:\t89 45 f4             \tmov    %eax,-0xc(%ebp)</pre>\n<p>从反汇编的结果来看可以解答我的疑问2&#xff0c;也就是说&#xff0c;编译器在生产最终代码的时候&#xff0c;可能由于某些原因&#xff0c;将__res的位置安排在了最后&#xff0c;所以-12(%ebp)是正确的。</p>\n<p>但是疑问1依然没有解决&#xff1a;为什么&#34;=a&#34;(__res)会将%edi寄存器的值赋值给__res。</p>"}, {"anon": "no", "uid": "ikvcvno79n07iu", "subject": "网络学堂mooc中《4.3 GCC内联汇编》一节中的一些疑问", "created": "2018-03-01T09:29:50Z", "content": "<p>在4.3 GCC内联汇编一节中6:14处出现了这样的图像&#xff1a;</p>\n<p><img src=\"/img/1132-3c78b4b89393b422.png\" alt=\"\" /></p>\n<p>这个例子是陈渝老师用于说明在C语言代码中使用内联汇编。</p>\n<p></p>\n<p>针对这个例子&#xff0c;我在学习的时候主要有两个疑问&#xff1a;</p>\n<ol><li>&#34;a&#34;表示的是%eax寄存器&#xff0c;所以&#34;=a&#34;(__res)应该是指将%eax的值赋给__res&#xff0c;那为什么例子中是将%edi的值赋给了__res</li><li>C语言会将局部变量依次储存在栈中&#xff0c;arg1对应的位置为-28(%ebp),arg2对应的位置为-24(%ebp)&#xff0c;所以__res得位置应该为-32(%ebp)&#xff0c;与例子中的-12(%ebp)不符</li></ol>\n<p></p>\n<p>我在mooc所指定的虚拟机中进行了实验&#xff1a;</p>\n<pre>// main.cpp<br />int main(int argc, char* argv[])\n{\n\tlong __res, arg1=2, arg2=22, arg3=222, arg4=233;\n\t__asm__ volatile(&#34;int $0x80&#34;\n\t\t\t: &#34;=a&#34;(__res)\n\t\t\t: &#34;0&#34;(11), &#34;b&#34;(arg1), &#34;c&#34;(arg2), &#34;d&#34;(arg3), &#34;S&#34;(arg4));\n\n\treturn 0;\n}</pre>\n<p>执行命令&#xff1a;</p>\n<pre>gcc main.cpp -o main.exe -m32<br />objdump -d main.exe &gt; main.s</pre>\n<p>在生产的汇编代码main.s中&#xff0c;找到了如下代码&#xff1a;</p>\n<pre> 8048411:\tb8 0b 00 00 00       \tmov    $0xb,%eax\n 8048416:\t8b 5d e4             \tmov    -0x1c(%ebp),%ebx\n 8048419:\t8b 4d e8             \tmov    -0x18(%ebp),%ecx\n 804841c:\t8b 55 ec             \tmov    -0x14(%ebp),%edx\n 804841f:\t8b 75 f0             \tmov    -0x10(%ebp),%esi\n 8048422:\tcd 80                \tint    $0x80\n 8048424:\t89 45 f4             \tmov    %eax,-0xc(%ebp)</pre>\n<p>从反汇编的结果来看可以解答我的疑问2&#xff0c;也就是说&#xff0c;编译器在生产最终代码的时候&#xff0c;可能由于某些原因&#xff0c;将__res的位置安排在了最后&#xff0c;所以-12(%ebp)是正确的。</p>\n<p>但是疑问1依然没有解决&#xff1a;为什么&#34;=a&#34;(__res)会将%edi寄存器的值赋值给__res。</p>"}], "type": "question", "tags": ["2018", "lecture4", "student"], "tag_good": [], "unique_views": 173, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-03-01T10:49:42Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "je8e1gmtafn1m6", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2018-03-01T10:49:42Z", "content": "<p>在嵌入汇编的文档中找”=a“的含义&#xff0c;就可以明白了。它有两个含义&#xff0c;一是调用前把输入的系统调用号放到eax中&#xff0c;二是调用后把返回值放从eax中读出来。</p>\n<p></p>\n<p>请尝试给出”=a“的准确解释。</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-03-02T09:55:20Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "je9rje7tlyl1yf", "history": [{"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-03T16:10:37Z", "content": "<p>写错了吧。</p>\n<p></p>\n<p>另&#xff0c;“一是调用前把输入的系统调用号放到eax中”我觉得是“&#34;0&#34;(11)”干的</p>\n<p></p>\n<p>补充&#xff1a;&#34;0&#34;(11)是引用第0个约束&#xff0c;即&#34;=a&#34;(__res)的a</p>"}, {"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-02T09:56:37Z", "content": "<p>写错了吧。</p>\n<p></p>\n<p>另&#xff0c;“一是调用前把输入的系统调用号放到eax中”我觉得是“&#34;0&#34;(11)”干的</p>"}, {"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-02T09:55:20Z", "content": "<p>写错了吧。</p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>个人认为那个&#34;0&#34;(11) 应该改为 “a”&#xff08;11&#xff09;<br />但是在本机上&#xff08;Ubuntu 17.10 gcc7.20)运行&#xff0c;老师的代码仍然是正确的&#xff1a;</p>\n<pre>long testfun(void)\n{\n\tlong _res, arg1 = 2, arg2 = 22, arg3 = 222, arg4 = 233;\n\tasm volatile(&#34;int $0x80&#34;\n\t\t\t      : &#34;=a&#34;(_res)\n\t\t\t      : &#34;0&#34;(11), &#34;b&#34;(arg1), &#34;c&#34;(arg2), &#34;d&#34;(arg3), &#34;S&#34;(arg4)\n\t\t\t\t);\n\t_res&#43;&#43;;\n\treturn _res;\n}</pre>\n<p>编译生成汇编代码&#xff0c;不链接&#xff1a;</p>\n<pre>fanese&#64;fanese-Hasee:~/Documents/CSAPP/embedded_asm$ gcc -m32 -Og -Wall -c -S testt.c</pre>\n<p>查看生成的汇编代码&#xff1a;</p>\n<pre>testfun:\n.LFB0:\n\t.cfi_startproc\n\tpushl\t%esi\n\t.cfi_def_cfa_offset 8\n\t.cfi_offset 6, -8\n\tpushl\t%ebx\n\t.cfi_def_cfa_offset 12\n\t.cfi_offset 3, -12\n\tmovl\t$11, %eax\n\tmovl\t$2, %ebx\n\tmovl\t$22, %ecx\n\tmovl\t$222, %edx\n\tmovl\t$233, %esi\n#APP\n# 4 &#34;testt.c&#34; 1\n\tint $0x80\n# 0 &#34;&#34; 2\n#NO_APP\n\taddl\t$1, %eax\n\tpopl\t%ebx\n\t.cfi_restore 3\n\t.cfi_def_cfa_offset 8\n\tpopl\t%esi\n\t.cfi_restore 6\n\t.cfi_def_cfa_offset 4\n\tret\n\t.cfi_endproc</pre>\n<p>经过验证&#xff0c;将&#34;0&#34;(11)  改为 “a”&#xff08;11&#xff09; 生成的汇编代码是相同的。</p>", "created": "2018-03-02T16:20:52Z", "bucket_order": 121, "bucket_name": "Week 2/25 - 3/3", "type": "followup", "tag_good": [], "uid": "j9p3tttiDdhN", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>不需要修改也是对的&#xff0c;&#34;0&#34;(11)是引用第0个约束&#xff0c;即&#34;=a&#34;(__res)的a</p>", "created": "2018-03-03T16:08:35Z", "bucket_order": 121, "bucket_name": "Week 2/25 - 3/3", "type": "feedback", "tag_good": [], "uid": "isu0wqaoff5125", "children": [], "tag_good_arr": [], "id": "jebkb909v785ao", "updated": "2018-03-03T16:08:35Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>恩&#xff0c;我仔细考虑了一下&#xff0c;你说的有道理&#xff0c;谢谢&#xff01;</p>", "created": "2018-03-03T19:13:44Z", "bucket_order": 121, "bucket_name": "Week 2/25 - 3/3", "type": "feedback", "tag_good": [], "uid": "j9p3tttiDdhN", "children": [], "tag_good_arr": [], "id": "jebqxcsh1ek4gp", "updated": "2018-03-03T19:13:44Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jea5b6yli7s40x", "updated": "2018-03-02T16:20:52Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>我觉得可能mooc上面写少了一条指令吧&#xff0c;我用gcc编译出来的结果是先把eax move到edi&#xff0c;再把edi赋值给__res的&#xff0c;这样跟直接eax输出到__res没有区别&#xff0c;而使用clang编译的话直接就使用eax move到__res了&#xff1b;</p>\n<p><img src=\"/img/1132-ee3c7c9f85ef120e.png\" alt=\"\" /></p>\n<p></p>\n<p><img src=\"/img/1132-ee6c290b1f2793ef.png\" alt=\"\" /></p>", "created": "2018-03-04T09:54:02Z", "bucket_order": 120, "bucket_name": "Week 3/4 - 3/10", "type": "followup", "tag_good": [], "uid": "je2ib344a1k69u", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p></p>", "created": "2018-03-04T09:54:26Z", "bucket_order": 120, "bucket_name": "Week 3/4 - 3/10", "type": "feedback", "tag_good": [], "uid": "je2ib344a1k69u", "children": [], "tag_good_arr": [], "id": "jecmdxje86y14g", "updated": "2018-03-04T09:54:26Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>原来是这种操作</p>", "created": "2018-03-05T15:03:33Z", "bucket_order": 120, "bucket_name": "Week 3/4 - 3/10", "type": "feedback", "tag_good": [], "uid": "isu0wqaoff5125", "children": [], "tag_good_arr": [], "id": "jeecvb796vvaf", "updated": "2018-03-05T15:03:33Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jecmdexzwj8u6", "updated": "2018-03-04T09:54:02Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "je8b6qu4zlv7k1", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169185898, "default_anonymity": "no"}, "error": null, "aid": "kyv0ia967bq4ie"}