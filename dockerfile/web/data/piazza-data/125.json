{"result": {"folders": ["lab1"], "nr": 125, "data": {"embed_links": []}, "created": "2015-03-17T02:57:11Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "hs2ssz7dkh76h6", "anon": "no", "when": "2015-03-17T02:57:11Z", "data": "i7cplscbcwe7g0", "type": "create"}, {"to": "i7cplsc6zxg7fz", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-17T03:39:53Z", "data": "i7cr4pbql0i5hx", "type": "i_answer"}, {"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-17T03:40:45Z", "data": "i7cr5tyzd5n1k2", "type": "i_answer_update"}, {"to": "i7cplsc6zxg7fz", "uid": "hs2ssz7dkh76h6", "anon": "no", "when": "2015-03-17T05:13:24Z", "type": "followup"}, {"to": "i7cplsc6zxg7fz", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-17T16:15:56Z", "type": "feedback"}, {"to": "i7cplsc6zxg7fz", "uid": "i78odcf1aiM", "anon": "no", "when": "2015-03-21T14:46:00Z", "type": "followup"}, {"to": "i7cplsc6zxg7fz", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-03-22T03:09:31Z", "type": "feedback"}, {"anon": "no", "uid": "j5hy76n8lpM", "data": "j5mfxjfd8i64yj", "type": "update", "when": "2017-07-27T12:54:04Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "j5hy76n8lpM", "subject": "SETGATE宏的第二个参数istrap的设置", "created": "2017-07-27T12:54:04Z", "content": "<p>在给出的答案中&#xff0c;所有istrap全部设置为0. 而根据mmu.h中的定义&#xff0c;istrap用来区分异常和中断。</p>\n<p></p>\n<p>我以为合适的实现方式应该如下所示&#xff1a;</p>\n<p></p>\n<pre>    int i;\n    for (i = 0; i &lt; 256; i &#43;&#43;) {\n        if (i == T_SYSCALL) {\n            SETGATE(idt[i], 1, GD_KTEXT, __vectors[i], DPL_USER)\n        }\n        else if (i &lt; IRQ_OFFSET) {\n            SETGATE(idt[i], 1, GD_KTEXT, __vectors[i], DPL_KERNEL)\n        }\n        else {\n            SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL)\n        }\n    }</pre>\n<p>即应该区分异常和中断对istrap参数进行不同的设置。</p>\n<p>而不是参考答案中的</p>\n<pre>    int i;\n    for (i = 0; i &lt; sizeof(idt) / sizeof(struct gatedesc); i &#43;&#43;) {\n        SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL);\n    }\n\t// set for switch from user to kernel\n    SETGATE(idt[T_SWITCH_TOK], 0, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER);</pre>\n<p></p>"}, {"anon": "no", "uid": "hs2ssz7dkh76h6", "subject": "SETGATE宏的第二个参数istrap的设置", "created": "2015-03-17T02:57:11Z", "content": "<p>在给出的答案中&#xff0c;所有istrap全部设置为0. 而根据mmu.h中的定义&#xff0c;istrap用来区分异常和中断。</p>\n<p></p>\n<p>我以为合适的实现方式应该如下所示&#xff1a;</p>\n<p></p>\n<pre>    int i;\n    for (i = 0; i &lt; 256; i &#43;&#43;) {\n        if (i == T_SYSCALL) {\n            SETGATE(idt[i], 1, GD_KTEXT, __vectors[i], DPL_USER)\n        }\n        else if (i &lt; IRQ_OFFSET) {\n            SETGATE(idt[i], 1, GD_KTEXT, __vectors[i], DPL_KERNEL)\n        }\n        else {\n            SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL)\n        }\n    }</pre>\n<p>即应该区分异常和中断对istrap参数进行不同的设置。</p>\n<p>而不是参考答案中的</p>\n<pre>    int i;\n    for (i = 0; i &lt; sizeof(idt) / sizeof(struct gatedesc); i &#43;&#43;) {\n        SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL);\n    }\n\t// set for switch from user to kernel\n    SETGATE(idt[T_SWITCH_TOK], 0, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER);</pre>\n<p></p>"}], "type": "note", "tags": ["lab1", "student"], "tag_good": [{"role": "instructor", "name": "Yu Chen", "endorser": {}, "admin": true, "photo": "1378950179_35.png", "id": "hcrrjuyequh4bt", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hcrrjuyequh4bt/1378950179_35.png", "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "", "name": "郭子雷", "endorser": {}, "admin": false, "photo": null, "id": "i78odcf1aiM", "photo_url": null, "us": false, "facebook_id": null}, {"role": "", "name": "Jialiang Cao", "endorser": {}, "admin": false, "photo": null, "id": "jh1ahmqehdv28y", "photo_url": null, "us": false, "facebook_id": null}, {"role": "student", "name": "WangQi", "endorser": {}, "admin": false, "photo": null, "id": "irbw4zhhXAY", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "Hongkun Ge", "endorser": {}, "admin": false, "photo": null, "id": "i5ehqgv6vgu535", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "liuyu", "endorser": {}, "admin": false, "photo": null, "id": "k6ngyr7kqun3oi", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 185, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2015-03-17T03:39:53Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "i7cr4pb46hp5hw", "history": [{"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "", "created": "2015-03-17T03:40:45Z", "content": "<p>很好&#xff01;我理解这样更加准确&#xff01;多谢&#xff01;</p>\n<p>我会尽快合并到labcodes_answer中</p>\n<p>另外&#xff0c;参考答案只是一个参考&#xff0c;并不是正确或唯一的解&#xff0c;请大家在实验时注意&#xff01;</p>\n<p></p>\n<p>我的问题&#xff1a;如果采用老的实现&#xff0c;请问会出现什么不是我们期望的现象&#xff1f;有一个例子吗&#xff1f;</p>"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "", "created": "2015-03-17T03:39:53Z", "content": "<p>很好&#xff01;我理解这样更加准确&#xff01;多谢&#xff01;</p>\n<p>我会尽快合并到labcodes_answer中</p>\n<p>另外&#xff0c;参考答案只是一个参考&#xff0c;并不是正确或唯一的解&#xff0c;请大家在实验时注意&#xff01;</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>如果采用老的实现的话&#xff0c;所有trap都会被当成interrupt处理。</p>\n<p></p>\n<p>trap和interrupt处理的不同之处在于interrupt gate会将IF flag清零而trap gate不会。</p>\n<p></p>\n<p>也就是说&#xff0c;在老的实现下&#xff0c;操作系统在处理trap的时候将无法响应maskable interrupt&#xff0c;这会导致功能和标准出现不同。</p>\n<p></p>\n<p>一个简单的例子就是&#xff0c;当我们的应用程序产生了一个trap的时候&#xff0c;我们本来可以通过键盘强制关闭该程序&#xff0c;但是此时键盘的中断信号无法被接收&#xff0c;必须等到trap处理完才能得到响应。</p>\n<p></p>\n<p>即便如此&#xff0c;在大多数情况&#xff0c;操作系统仍然可以正常完成其功能&#xff0c;而且用户很难发现有何不同。</p>", "created": "2015-03-17T05:13:24Z", "bucket_order": 263, "bucket_name": "Week 3/15 - 3/21", "type": "followup", "tag_good": [], "uid": "hs2ssz7dkh76h6", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>Excellent!</p>", "created": "2015-03-17T16:15:56Z", "bucket_order": 263, "bucket_name": "Week 3/15 - 3/21", "type": "feedback", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "id": "i7di503qsea5om", "updated": "2015-03-17T16:15:56Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i7cugz304ur4vj", "updated": "2015-03-17T05:13:24Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "32号可能有NMI  全部是trap还是有点不妥", "created": "2015-03-21T14:46:00Z", "bucket_order": 263, "bucket_name": "Week 3/15 - 3/21", "type": "followup", "tag_good": [], "uid": "i78odcf1aiM", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>如果是NMI错误&#xff0c;系统应该是彻底不行了&#xff0c;OS已经无能为力了。</p>", "created": "2015-03-22T03:09:31Z", "bucket_order": 263, "bucket_name": "Week 3/15 - 3/21", "type": "feedback", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "id": "i7jv8wolle227", "updated": "2015-03-22T03:09:31Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i7j4oqnoucd1sz", "updated": "2015-03-21T14:46:00Z", "config": {}}], "tag_good_arr": ["hcrrjuyequh4bt", "i78odcf1aiM", "jh1ahmqehdv28y", "irbw4zhhXAY", "i5ehqgv6vgu535", "k6ngyr7kqun3oi"], "id": "i7cplsc6zxg7fz", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 5, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167347877, "default_anonymity": "no"}, "error": null, "aid": "kyuzew112zz6qw"}