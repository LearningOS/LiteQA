{"result": {"folders": ["lab5"], "nr": 623, "data": {"embed_links": []}, "created": "2016-02-28T03:02:33Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:02:33Z", "data": "il5z159pc3q52g", "type": "create"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:03:29Z", "data": "il5z2cgdqat2x4", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:22:22Z", "data": "il5zqmhjj7h3i8", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:24:55Z", "data": "il5ztwmyqh73ev", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:57:01Z", "data": "il60z71crjg1cw", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T03:59:46Z", "data": "il612prlls43g5", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:07:59Z", "data": "il61da6b6bymb", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:36:37Z", "data": "il62e46briu6i3", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:37:01Z", "data": "il62emmhuf37ly", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:42:15Z", "data": "il62lcqpr20451", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:44:49Z", "data": "il62onx7jvq17e", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:52:32Z", "data": "il62ykmspd22tt", "type": "update"}, {"to": "il5z159lcdp52f", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:53:15Z", "data": "il62zi9p8163en", "type": "s_answer"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:54:12Z", "data": "il630qevkit26i", "type": "s_answer_update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T04:56:44Z", "data": "il633zg1n3z36y", "type": "s_answer_update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T06:04:30Z", "data": "il65j53gt5y47n", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T07:28:13Z", "data": "il68is4v316qf", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T07:34:01Z", "data": "il68q8pr1ty3js", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T12:04:03Z", "data": "il6idi68go353s", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T12:13:08Z", "data": "il6ip6xqa957go", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T12:23:33Z", "data": "il6j2kypn1j29k", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T12:28:51Z", "data": "il6j9ejc9ap3b2", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T15:13:41Z", "data": "il6p5dwa2p2ab", "type": "update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T15:14:04Z", "data": "il6p5vbxjgl273", "type": "s_answer_update"}, {"uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T15:16:46Z", "data": "il6p9cbvap218z", "type": "s_answer_update"}, {"to": "il5z159lcdp52f", "uid": "i76z9sx78G8", "anon": "no", "when": "2016-02-28T15:19:54Z", "data": "il6pddb3dnt5pp", "type": "i_answer"}, {"uid": "i76z9sx78G8", "anon": "no", "when": "2016-02-28T15:21:09Z", "data": "il6pezxmtgj30l", "type": "i_answer_update"}, {"to": "il5z159lcdp52f", "uid": "ijf9jcjt7oslj", "anon": "no", "when": "2016-02-28T15:29:42Z", "type": "followup"}, {"to": "il5z159lcdp52f", "uid": "i76z9sx78G8", "anon": "no", "when": "2016-02-28T16:58:17Z", "type": "feedback"}, {"to": "il5z159lcdp52f", "uid": "i0f9pvv0uxm6ko", "anon": "no", "when": "2016-02-29T03:13:28Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度", "created": "2016-02-28T15:13:41Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕时&#xff0c;是如何把控制权交给ucore并调用exit的&#xff1f;</p>\n<p>           </p>\n<p>                  2、调度是只有在内核态才能进行么&#xff1f;比如一个用户态进程只有通过中断或者系统调用进入内核态才能再进行调度&#xff0c;</p>\n<p>     </p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T12:28:51Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕时&#xff0c;是如何把控制权交给ucore并调用exit的&#xff1f;</p>\n<p>           </p>\n<p>                  2、调度是只有在内核态才能进行么&#xff1f;比如一个用户态进程只有通过中断或者系统调用进入内核态才能再进行调度&#xff0c;</p>\n<p>     </p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T12:23:33Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕时&#xff0c;是如何把控制权交给ucore并调用exit的&#xff1f;</p>\n<p>           </p>\n<p>                  2、调度是只有在内核态才能进行么&#xff1f;比如一个用户态进程只有通过中断或者系统调用才能再进行调度&#xff0c;</p>\n<p>     </p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T12:13:08Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?   我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、调度是只有在内核态才能进行么&#xff1f;比如一个用户态进程只有通过中断或者系统调用才能再进行调度&#xff0c;</p>\n<p>     </p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T12:04:03Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有3个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?   我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、调度是只有在内核态才能进行么&#xff1f;比如一个用户态进程只有通过中断或者系统调用才能再进行调度&#xff0c;</p>\n<p>     </p>\n<p>                  3、在创建user_main进程时我们给他分配了一个栈&#xff0c;这个栈在哪里回收了&#xff1f;</p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T07:34:01Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有3个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是调度点不止一个&#xff0c;进程中可以直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;或者内核线程直接调度用户进程的&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p></p>\n<p>                  3、在运行switch to之前我们先lcr3(next-&gt;cr3)&#xff0c;比如我们现在从内核进程切换到用户进程&#xff0c;我们先把页目录修改成用户进程的页目录&#xff0c;那么switch to函数在movl操作时岂不是找不到prev-&gt;context 和next-&gt;context&#xff0c;这两个进程控制块都是在内核页目录上才能找到的吧&#xff1f;</p>\n<p>                        同样在load_icode中&#xff0c;我们也lcr3了用户进程的页目录表&#xff0c;这样的话返回到do_execv的时候cs&#xff1a;eip和ss:esp在新的目录表中应该找不到原来指向的地方&#xff1f;</p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T07:28:13Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有3个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是调度点不止一个&#xff0c;进程中可以直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;或者内核线程直接调度用户进程的&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p></p>\n<p>                  3、在运行switch to之前我们先lcr3(next-&gt;cr3)&#xff0c;比如我们现在从内核进程切换到用户进程&#xff0c;我们先把页目录修改成用户进程的页目录&#xff0c;那么switch to函数在movl操作时岂不是找不到prev-&gt;context 和next-&gt;context&#xff0c;这两个进程控制块都是在内核页目录上才能找到的吧&#xff1f;</p>\n<p>                        同样在load_icode中&#xff0c;我们也lcr3了用户进程的页目录表&#xff0c;这样的话返回之后cs&#xff1a;eip和ss:esp在新的目录表中应该找不到原来指向的地方&#xff1f;</p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T06:04:30Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有3个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是调度点不止一个&#xff0c;进程中可以直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;或者内核线程直接调度用户进程的&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p></p>\n<p>                  3、在运行switch to之前我们先lcr3(next-&gt;cr3)&#xff0c;比如我们现在从内核进程切换到用户进程&#xff0c;我们先把页目录修改成用户进程的页目录&#xff0c;那么switch to函数在movl操作时岂不是找不到prev-&gt;context 和next-&gt;context&#xff0c;这两个进程控制块都是在内核页目录上才能找到的吧&#xff1f;</p>\n<p>    </p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:52:32Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是调度点不止一个&#xff0c;进程中可以直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;或者内核线程直接调度用户进程的&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:44:49Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:42:15Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程里面有调度。如果一个用户进程选中的新进程是内核进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:37:01Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程里面又调度&#xff0c;如果选中的新进程是用户进程&#xff08;这个进程已经不是最开始创建时入口也不是fork ret&#xff09;&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:36:37Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程里面又调度&#xff0c;如果选中的新进程是用户进程&#xff08;这个进程已经不是最开始创建时如何也不是fork ret&#xff09;&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T04:07:59Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程里面又调度&#xff0c;如果选中的新进程是用户进程&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T03:59:46Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;比如父进程init_main是内核进程&#xff0c;子进程是用户进程&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit 以及进程调度时段的切换", "created": "2016-02-28T03:57:01Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有2个问题&#xff1a;</p>\n<p>                  1、用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>           </p>\n<p>                  2、在中断中进行调度&#xff0c;段的切换没问题&#xff0c;我的疑问是父进程中直接进行调度的&#xff0c;假如父进程是内核进程&#xff0c;子进程是用户进程&#xff0c;数据段&#xff0c;代码段等等是如何切换的&#xff0c;switch中也没有管理这些信息。</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit", "created": "2016-02-28T03:24:55Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有个问题&#xff1a;</p>\n<p>                  用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行do_exit回收的</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit", "created": "2016-02-28T03:22:22Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有个问题&#xff1a;</p>\n<p>                  用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;entry中保存do_exit的eip应该是在内核栈中。</p>\n<p>                  那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行回收的</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit", "created": "2016-02-28T03:03:29Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有个问题&#xff1a;</p>\n<p>                  用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数&#xff0c;那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行回收的</p>\n<p>               谢谢&#xff01;    </p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "lab5 关于用户进程exit", "created": "2016-02-28T03:02:33Z", "content": "<p>老师和同学们&#xff1a;</p>\n<p>     我有个问题&#xff1a;</p>\n<p>                  用户进程执行完毕返回时&#xff0c;如何调用do_exit?在kernerl_thread_entry_entry中有call do_exit&#xff0c;但是我们创建用户之后已经应该是不会在返回到这个函数之中了&#xff0c;所以我发通过kernnel_thread_entry调用do_exit&#xff0c;那么是如何调用do_exit的&#xff1f;我也没有看到调用中断&#xff0c;所以很不理解是如何把控制权交给内核进行回收的</p>\n<p>               谢谢&#xff01;    </p>"}], "type": "question", "tags": ["lab5", "student"], "tag_good": [], "unique_views": 130, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2016-02-28T04:53:15Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "il62zi9lmkr3em", "history": [{"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "", "created": "2016-02-28T15:16:46Z", "content": "<p>等老师解答</p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "", "created": "2016-02-28T15:14:04Z", "content": "<p></p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "", "created": "2016-02-28T04:56:44Z", "content": "<p>在线等</p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "", "created": "2016-02-28T04:54:12Z", "content": "<p></p>"}, {"anon": "no", "uid": "ijf9jcjt7oslj", "subject": "", "created": "2016-02-28T04:53:15Z", "content": "<p>麻烦老师回答一下&#xff0c;在线等&#xff0c;想不通</p>\n<p></p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"folders": [], "data": {"embed_links": []}, "children": [], "created": "2016-02-28T15:19:54Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "wangpeng", "endorser": {}, "admin": false, "photo": null, "id": "ijf9jcjt7oslj", "photo_url": null, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "il6pddb3ozc5po", "history": [{"anon": "no", "uid": "i76z9sx78G8", "subject": "", "created": "2016-02-28T15:21:09Z", "content": "<p>1. Ucore  通过用户库中的umain函数然后调转到main函数执行&#xff0c; 从main返回后在umain中调用exit</p>\n<p>2. 在Ucore中调度的发生都是在内核态&#xff0c;因为调度的程序在内核中。</p>"}, {"anon": "no", "uid": "i76z9sx78G8", "subject": "", "created": "2016-02-28T15:19:54Z", "content": "<p>1. Ucore  通过用户库中的umain函数然后调转到main函数执行&#xff0c; 从main返回后在umain中有调用exit</p>\n<p>2. 在Ucore中调度的发生都是在内核态&#xff0c;因为调度的程序在内核中。</p>"}], "type": "i_answer", "tag_endorse_arr": ["ijf9jcjt7oslj"], "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>老师&#xff0c;是不是没个程序都要在编写的时候自己进行exit的调用&#xff1f;</p>", "created": "2016-02-28T15:29:42Z", "bucket_order": 213, "bucket_name": "Week 2/28 - 3/5", "type": "followup", "tag_good": [], "uid": "ijf9jcjt7oslj", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>你可以看下umain的实现以及umain的caller, umain调用main是操作系统写好的&#xff0c;不需要用户程序自己来实现。也就是说&#xff0c;某些情况下&#xff0c;从用户程序的角度来看&#xff0c;main函数中return相当于调用exit。</p>", "created": "2016-02-28T16:58:17Z", "bucket_order": 213, "bucket_name": "Week 2/28 - 3/5", "type": "feedback", "tag_good": [], "uid": "i76z9sx78G8", "children": [], "tag_good_arr": [], "id": "il6svwnh1jh49s", "updated": "2016-02-28T16:58:17Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>用户态的程序的main之外还有一个壳&#xff0c;就是umain&#xff0c;这个umain是操作系统写好的&#xff0c;负责进入main&#xff0c;main的return也会返回到umain&#xff0c;之后umain会调用syscall exit。</p>", "created": "2016-02-29T03:13:28Z", "bucket_order": 213, "bucket_name": "Week 2/28 - 3/5", "type": "feedback", "tag_good": [], "uid": "i0f9pvv0uxm6ko", "children": [], "tag_good_arr": [], "id": "il7ev1hc816ne", "updated": "2016-02-29T03:13:28Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "il6ppzpktti6di", "updated": "2016-02-28T15:29:42Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "il5z159lcdp52f", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 5, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168181600, "default_anonymity": "no"}, "error": null, "aid": "kyuzwrc02mr5as"}