{"result": {"history_size": 1, "folders": ["lab2"], "nr": 274, "data": {"embed_links": []}, "created": "2015-04-10T07:50:28Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i1gf2bzq1ni677", "anon": "no", "when": "2015-04-10T07:50:28Z", "data": "i8baneisld8oc", "type": "create"}, {"to": "i8baneioqs0ob", "uid": "hs2sszxmgag6jq", "anon": "no", "when": "2015-04-10T13:39:14Z", "data": "i8bn3x4flok6ui", "type": "i_answer"}, {"to": "i8baneioqs0ob", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-04-13T01:34:38Z", "type": "followup"}, {"to": "i8baneioqs0ob", "uid": "i6x8l44nF0P", "anon": "no", "when": "2015-04-23T09:21:07Z", "type": "followup"}, {"to": "i8baneioqs0ob", "uid": "i6x8l44nF0P", "anon": "no", "when": "2015-04-23T09:21:07Z", "type": "dupe"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i1gf2bzq1ni677", "subject": "关于lab2中虚拟地址的疑问", "created": "2015-04-10T07:50:28Z", "content": "<p>lab2提到要建立段页式映射 vir addr == linear addr == phy addr &#43; 0xC0000000</p>\n<p>但是这个映射关系跟页表有什么关系&#xff1f;</p>\n<p>忽视段式管理&#xff0c;页式管理&#xff08;32位&#xff09;中物理地址跟逻辑地址除了低12位相同之外&#xff0c;没有其他联系了吧&#xff1f;那么这样也不会有这个vir addr == phy addr &#43; 0xC0000000成立了呀。</p>\n<p>这样的话为什么还需要这个映射关系&#xff1f;</p>\n<p>换种说法&#xff0c;操作系统本身使用物理地址来管理&#xff0c;然后通过页式管理将分配到的物理地址转为逻辑地址交给程序&#xff1b;而lab2则是操作系统将所有地址都转为物理地址&#43;C0000000&#xff0c;然后再通过页式管理转成逻辑地址给程序&#xff0c;就算是这样那也不会有vir addr == phy addr &#43; C0000000成立呀&#xff08;这里的vir addr是程序的逻辑地址&#xff09;&#xff1f;</p>\n<p>在我看来页表跟这个映射之间没有关系&#xff0c;既然有了页表这个映射机制&#xff0c;为什么还要找麻烦让物理地址 &#43; C0000000&#xff1f;</p>\n<p></p>\n<p>------------------------------------------------------</p>\n<p>不提上面那些的话&#xff0c;为什么空闲链表存的页的地址是实际的物理地址&#xff0c;而不是先转为物理地址 &#43; C0000000&#xff0c;再存进去&#xff1f;这样的话alloc_pages返回的就是物理地址&#43;C0000000&#xff0c;而不用像之前那样每次使用都得手动加一次了。</p>"}], "type": "question", "tags": ["lab2", "student"], "tag_good": [{"role": "", "name": "WU Xiangjin", "endorser": {}, "admin": false, "photo": null, "id": "hs2sszxmgag6jq", "photo_url": null, "published": true, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "", "name": "Yong Ren", "endorser": {}, "admin": false, "photo": null, "id": "hs2sszr363d6jd", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "zm", "endorser": {}, "admin": false, "photo": null, "id": "j08y9de1xpZ", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "SongChunlin", "endorser": {}, "admin": false, "photo": null, "id": "k0bt3s5i5a46n4", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 188, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2015-04-10T13:39:14Z", "bucket_order": 3, "tag_endorse": [{"role": "instructor", "name": "Yu Chen", "endorser": {}, "admin": true, "photo": "1378950179_35.png", "id": "hcrrjuyequh4bt", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hcrrjuyequh4bt/1378950179_35.png", "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "student", "name": "Jiaxin Lei", "endorser": {}, "admin": false, "photo": null, "id": "jxvik4qcwgc5wu", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hs2sszxmgag6jq", "subject": "", "created": "2015-04-10T13:39:14Z", "content": "如果仔细看 lab 的代码&#xff0c;会发现这样一个词 kva (Kernel Virtual Address). 你也提到了 lab2 中操作系统将所有地址都转为物理地址&#43;0xC0000000.\n\n实际上, 在这里一个物理地址对应两个虚拟地址: 给用户程序的地址和 kva. 这样做的话, 可以在页表中给二者不同的权限, 即使对用户程序只读的页, 操作系统可以通过 kva 来写入初始信息. 用户程序地址映射显然通过页表实现, 而 kva 也需要用页表实现, 为了简便取为 kva = phyaddr &#43; 0xC0000000, 这样相互转换简单快速.\n\n至于空闲链表存的页地址, 既不是物理地址也不是 kva, 而是 page 指针地址, 三者之间可以相互转换:\n请自行研究一下 page2pa 等宏和函数的实现."}], "type": "i_answer", "tag_endorse_arr": ["hcrrjuyequh4bt", "jxvik4qcwgc5wu"], "children": [], "id": "i8bn3x4alx76uh", "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>注意&#xff1a;以80386为例&#xff0c;说明一下一些基本概念&#xff08;虚拟地址&#xff0c;线性地址&#xff0c;物理地址&#xff09;的关系&#xff0c;</p>\n<p>CPU收到一个指令&#xff0c;这个指令中有对一个内存单元的读操作&#xff0c;所以指令包含了内存单元的地址&#xff0c;这个地址是虚拟地址&#xff08;或逻辑地址&#xff09;。</p>\n<p>这个虚拟地址通过段机制&#xff08;即全局描述符表中的段描述符&#xff08;其索引来源于DS,...&#xff09;&#xff09;的转换&#xff0c;形成了线性地址。</p>\n<p>这个线性地址通过页机制&#xff08;即页表&#xff0c;或者TLB&#xff09;的转换&#xff0c;形成了物理地址&#xff0c;然后通过内存地址总线&#xff0c;把这个物理地址对应的</p>\n<p>内存单元从内存读入到cache,再读入到寄存器,让CPU进行相应的操作。</p>", "created": "2015-04-13T01:34:38Z", "bucket_order": 299, "bucket_name": "Week 4/12 - 4/18", "type": "followup", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "i8f7jn68haw466", "updated": "2015-04-13T01:34:38Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "lab2 的练习一 &#xff0c;default_init, default_init_memmap函数都在哪里被调用的&#xff1f;\n<p>eclipse 里有没有查看函数调用的方法&#xff1f;</p>", "created": "2015-04-23T09:21:07Z", "bucket_order": 298, "bucket_name": "Week 4/19 - 4/25", "type": "followup", "tag_good": [], "uid": "i6x8l44nF0P", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "", "created": "2015-04-23T09:21:07Z", "bucket_order": 298, "bucket_name": "Week 4/19 - 4/25", "type": "dupe", "uid": "i6x8l44nF0P", "children": [], "id": "i8tym1sd7rg6ev", "updated": "2015-04-23T09:21:07Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i8tym1np44n6et", "updated": "2015-04-23T09:21:07Z", "config": {}}], "tag_good_arr": ["hs2sszxmgag6jq", "hs2sszr363d6jd", "j08y9de1xpZ", "k0bt3s5i5a46n4"], "no_answer": 0, "id": "i8baneioqs0ob", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167563579, "default_anonymity": "no"}, "error": null, "aid": "kyuzjigrdnw3v2"}