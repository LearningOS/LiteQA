{"result": {"folders": ["lab1"], "nr": 1149, "data": {"embed_links": []}, "created": "2018-03-11T12:48:37Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "j9p3tttiDdhN", "data": "jemsowguv302t4", "type": "create", "when": "2018-03-11T12:48:37Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jeo9esn4jfa196", "to": "jemsowgruwm2t3", "type": "s_answer", "when": "2018-03-12T13:24:25Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jeo9g67qskg1xh", "type": "s_answer_update", "when": "2018-03-12T13:25:29Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jezgqop9axz2xj", "type": "s_answer_update", "when": "2018-03-20T09:35:05Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "j9p3tttiDdhN", "subject": "关于Lab1 练习5的小疑问", "created": "2018-03-11T12:48:37Z", "content": "<p>众所周知&#xff0c;Lab1的练习5需要实现print_stackframe函数。</p>\n<p>然而&#xff0c;我在查阅Lab1 answer的时候有了以下疑问&#xff1a;</p>\n<ol><li>answer中&#xff0c;输出了args[0]到args[3],位置分别为%ebp&#43; 8—— %ebp &#43; 20&#xff0c;并且假设每个参数都是4字节。但是&#xff1a;调用的函数不一定有4个参数&#xff08;这一点去查看代码也能得到证实&#xff09;&#xff0c;而且参数也不一定是4字节的。在这种情况下&#xff0c;输出arg[0] 到arg[3]有什么意义呢&#xff1f;</li><li>print_debuginfo(eip - 1); 这句话意思是输出caller的栈帧信息&#xff0c;而eip位置存放的是caller‘s return address&#xff0c;是call 指令下一条指令的地址。那么问题来了&#xff0c;我们知道call指令编码一般为5个字节&#xff08;通过测试也确实如此&#xff0c;见下图&#xff09;&#xff0c;而这里eip - 1 计算的却是 return address 上面4个字节的内容&#xff08;因为eip类型为uint32_t)&#xff0c;这种写法是否不太妥当&#xff1f;改为print_debuginfo((uint8_t) eip - 5) 是否更为合适&#xff1f;</li></ol>\n<p><img src=\"/img/1149-b8d3ce762324af0f.png\" alt=\"call指令编码长度为5字节\" /></p>"}], "type": "question", "tags": ["lab1", "student"], "tag_good": [], "unique_views": 169, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-03-12T13:24:25Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "孟永康", "endorser": {}, "admin": false, "photo": null, "id": "j9p3tttiDdhN", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "", "name": "Jialiang Cao", "endorser": {}, "admin": false, "photo": null, "id": "jh1ahmqehdv28y", "photo_url": null, "us": false, "facebook_id": null}, {"role": "student", "name": "孙桢波2016011277", "endorser": {}, "admin": false, "photo": null, "id": "jsiyf76cGzf9", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "jeo9esn06sd195", "history": [{"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-20T09:35:05Z", "content": "<p>1. 据说栈是要求4字节补齐的&#xff08;32位&#xff09;。然后参数个数较难确定&#xff0c;就简单输出4个了。</p>\n<p></p>\n<p>2. 目的是指向这个call指令吧&#xff08;落在call指令占的范围&#xff09;。eip-1就是减1&#xff0c;因为eip类型为uint32_t&#xff0c;不是uint32_t*。call 指令编码很多很多种&#xff0c;不一定5字节。</p>"}, {"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-12T13:25:29Z", "content": "<p>1. 据说栈是要求4字节补齐的&#xff08;32位&#xff09;。然后参数个数较难确定&#xff0c;就简单输出4个了。</p>\n<p></p>\n<p>2. 目的是指向这个call指令吧。eip-1就是减1&#xff0c;因为eip类型为uint32_t&#xff0c;不是uint32_t*。call 指令编码很多很多种&#xff0c;不一定5字节。</p>"}, {"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-12T13:24:25Z", "content": "<p>1. 据说栈是要求4字节补齐的。然后参数个数较难确定&#xff0c;就简单输出4个了。</p>\n<p></p>\n<p>2. 目的是指向这个call指令吧。eip-1就是减1&#xff0c;因为eip类型为uint32_t&#xff0c;不是uint32_t*。call 指令编码很多很多种&#xff0c;不一定5字节。</p>"}], "type": "s_answer", "tag_endorse_arr": ["j9p3tttiDdhN", "jh1ahmqehdv28y", "jsiyf76cGzf9"], "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "jemsowgruwm2t3", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 2, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169238431, "default_anonymity": "no"}, "error": null, "aid": "kyv0jesfln1mq"}