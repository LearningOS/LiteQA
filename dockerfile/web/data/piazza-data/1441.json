{"result": {"folders": ["lecture13"], "nr": 1441, "data": {"embed_links": []}, "created": "2020-03-30T15:03:58Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "k71vna4kh1r59q", "data": "k8elrup9xod45t", "type": "create", "when": "2020-03-30T15:03:58Z"}, {"anon": "no", "uid": "k6ogdp961fl5lm", "to": "k8elrup7wgl45s", "type": "followup", "when": "2020-04-01T06:44:36Z"}, {"anon": "no", "uid": "k71vna4kh1r59q", "data": "k8i31191s2t50w", "type": "update", "when": "2020-04-02T01:30:18Z"}, {"anon": "no", "uid": "k71vna4kh1r59q", "to": "k8elrup7wgl45s", "type": "feedback", "when": "2020-04-02T01:33:42Z"}, {"anon": "no", "uid": "jsjptolvvI0o", "data": "k9bzrcy8qg402", "type": "update", "when": "2020-04-22T23:51:53Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "jsjptolvvI0o", "subject": "Peterson问题分析(初步分析)", "created": "2020-04-22T23:51:53Z", "content": "<p><md>Peterson算法&#xff1a;\n```cpp\ndo{\nflag[i] = true;\nturn = j;\nwhile(flag[j] && turn == j);\n// CRITICAL SECTION\nflag[i] = false;\n// REMAINDER SECTION\n} while(true);\n```\n当算法拓展到3个进程时会发生2个问题&#xff0c;就是turn的切换问题以及内部while等待的条件选择。由于没有给出3个进程时的具体实现过程&#xff0c;我们只能做出猜想&#xff0c;不妨假设&#xff0c;对于i、j、k三个进程而言&#xff0c;三者均将turn转为编号上的下一个进程&#xff0c;即i->j,j->k,k->i。判断等待的条件变更为&#xff0c;除自己进程外的某一个falg为1同时turn不为自身&#xff0c;则进行等待。\n此时算法变更为&#xff1a;\n```cpp\ndo{\nflag[i] = true;\nturn = j;\nwhile((flag[j] || flag[k]) && turn != i);\n// CRITICAL SECTION\nflag[i] = false;\n// REMAINDER SECTION\n} while(true);\n```\n仔细分析这个算法就会发现这个算法无法全面满足4个原则。\n当面临i、j、k同时开始进入区代码时&#xff0c;不妨假设k最后更新了turn&#xff0c;此时会发生turn变为i。i进程优先执行临界区代码&#xff0c;j、k进入等待过程。此时&#xff0c;还不会发生问题。\n但是&#xff0c;当i进程退出临界区后&#xff0c;此时turn==i&#xff0c;所以turn!=j&&turn!=k&#xff0c;j、k仍然保持继续等待&#xff0c;没有进程进入临界区。所以题目的答案可能应该是不满足空闲则入。</md>\n</p>"}, {"anon": "no", "uid": "k71vna4kh1r59q", "subject": "Peterson问题分析(初步分析)", "created": "2020-04-02T01:30:18Z", "content": "<md>\nPeterson算法&#xff1a;\n&#96;&#96;&#96;cpp\ndo{\n    flag[i] = true;\n    turn = j;\n    while(flag[j] &amp;&amp; turn == j);\n    // CRITICAL SECTION\n    flag[i] = false;\n    // REMAINDER SECTION\n} while(true);\n&#96;&#96;&#96;\n当算法拓展到3个进程时会发生2个问题&#xff0c;就是turn的切换问题以及内部while等待的条件选择。由于没有给出3个进程时的具体实现过程&#xff0c;我们只能做出猜想&#xff0c;不妨假设&#xff0c;对于i、j、k三个进程而言&#xff0c;三者均将turn转为编号上的下一个进程&#xff0c;即i-&gt;j,j-&gt;k,k-&gt;i。判断等待的条件变更为&#xff0c;除自己进程外的某一个falg为1同时turn不为自身&#xff0c;则进行等待。\n此时算法变更为&#xff1a;\n&#96;&#96;&#96;cpp\ndo{\n    flag[i] = true;\n    turn = j;\n    while((flag[j] || flag[k]) &amp;&amp; turn != i);\n    // CRITICAL SECTION\n    flag[i] = false;\n    // REMAINDER SECTION\n} while(true);\n&#96;&#96;&#96;\n仔细分析这个算法就会发现这个算法无法全面满足4个原则。\n当面临i、j、k同时开始进入区代码时&#xff0c;不妨假设k最后更新了turn&#xff0c;此时会发生turn变为i。i进程优先执行临界区代码&#xff0c;j、k进入等待过程。此时&#xff0c;还不会发生问题。\n但是&#xff0c;当i进程退出临界区后&#xff0c;此时turn==i&#xff0c;所以turn!=j&amp;&amp;turn!=k&#xff0c;j、k仍然保持继续等待&#xff0c;没有进程进入临界区。所以题目的答案可能应该是不满足空闲则入。</md>"}, {"anon": "no", "uid": "k71vna4kh1r59q", "subject": "Peterson问题分析(初步分析)", "created": "2020-03-30T15:03:58Z", "content": "<md>\nPeterson算法&#xff1a;\n&#96;&#96;&#96;cpp\ndo{\n    flag[i] = true;\n    turn = j;\n    while(flag[j] &amp;&amp; turn == j);\n    // CRITICAL SECTION\n    flag[i] = false;\n    // REMAINDER SECTION\n} while(true);\n&#96;&#96;&#96;\n当算法拓展到3个进程时会发生2个问题&#xff0c;就是turn的切换问题以及内部while等待的条件选择。由于没有给出3个进程时的具体实现过程&#xff0c;我们只能做出猜想&#xff0c;不妨假设&#xff0c;对于i、j、k三个进程而言&#xff0c;三者均将turn转为编号上的下一个进程&#xff0c;即i-&gt;j,j-&gt;k,k-&gt;i。判断等待的条件变更为&#xff0c;除自己进程外的某一个falg为1同时turn不为自身&#xff0c;则进行等待。\n此时算法变更为&#xff1a;\n&#96;&#96;&#96;cpp\ndo{\n    flag[i] = true;\n    turn = j;\n    while((flag[j] || flag[k]) &amp;&amp; turn != i);\n    // CRITICAL SECTION\n    flag[i] = false;\n    // REMAINDER SECTION\n} while(true);\n&#96;&#96;&#96;\n仔细分析这个算法就会发现这个算法无法全面满足4个原则。\n当面临i、j、k同时开始进入区代码时&#xff0c;不妨假设k最后更新了turn&#xff0c;此时会发生turn变为i。i进程优先执行临界区代码&#xff0c;j、k进入等待过程。此时&#xff0c;还不会发生问题。\n但是&#xff0c;当i进程退出临界区后&#xff0c;此时turn==i&#xff0c;所以turn!=j&amp;&amp;turn!=k&#xff0c;j、k同时结束等待&#xff0c;发生冲突。没有满足忙则等待的要求。所以题目的答案应该选择忙则等待。</md>"}], "type": "note", "tags": ["lecture13", "student", "unanswered"], "tag_good": [], "unique_views": 72, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>i进程退出之后&#xff0c;因为j和k的flag都是true&#xff0c;而且turn==i&#xff0c;所以应该两个进程都在等待吧&#xff1f;</p>", "created": "2020-04-01T06:44:36Z", "bucket_order": 9, "bucket_name": "Week 3/29 - 4/4", "type": "followup", "tag_good": [], "uid": "k6ogdp961fl5lm", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<md>确实有点问题&#xff0c;经过班级讨论已经有修改。</md>", "created": "2020-04-02T01:33:42Z", "bucket_order": 9, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "k71vna4kh1r59q", "children": [], "tag_good_arr": [], "id": "k8i35eez3p1665", "updated": "2020-04-02T01:33:42Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "k8gytcxmrnr1b5", "updated": "2020-04-01T06:44:36Z", "config": {}}], "tag_good_arr": [], "id": "k8elrup7wgl45s", "config": {"seen": {"1217": 6, "366": 2, "1202": 1, "1036": 4, "1366": 3, "887": 5, "1440": 7, "625": 8, "1060": 0}}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643170053088, "default_anonymity": "no"}, "error": null, "aid": "kyv10vdsn3x3v4"}