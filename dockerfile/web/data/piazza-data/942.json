{"result": {"history_size": 2, "folders": ["lab5", "2017"], "nr": 942, "data": {"embed_links": []}, "created": "2016-10-10T16:14:17Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "illojz7yoPj", "data": "iu49dz8sje1671", "type": "create", "when": "2016-10-10T16:14:17Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "ju3jf4inphz1ur", "type": "update", "when": "2019-04-05T03:56:44Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "关于内核线程之间调度的问题", "created": "2019-04-05T03:56:44Z", "content": "<p>## 问题1 &#xff1a; 内核线程在切换的过程中 &#xff0c;把相关的寄存器保存在了 context 结构体中&#xff0c;而 TSS 任务状态段没有关系。那TSS 任务状态段中的 eax的变量又何时使用呢&#xff1f;</p>\n<p></p>\n<p>第一个idleproc内核线程创建了 initproc 第二个内核线程&#xff0c;然后在调度的过程中&#xff0c;在 switch_to 汇编代码中去保存了当前线程到context结构体中&#xff0c;和 TSS  任务状态段没有关系</p>\n<pre>   # save from&#39;s registers\n    movl 4(%esp), %eax         \n   # restore to&#39;s registers\n    movl 4(%esp), %eax          </pre>\n<p></p>\n<p></p>\n<p>## 问题 2 &#xff1a;线程绑定函数&#xff08;fn&#xff09;要经过  汇编代码 forkrets 和 kernel_thread_entry 才被调用 &#xff1f;为什么不直接在 forkret 函数中直接调用 fn 函数呢&#xff1f;不知道在这里使用汇编代码的优点是什么&#xff1f;</p>\n<p></p>\n<p>###  fn 函数调用过程如下&#xff1a;</p>\n<pre> forkret → forkrets → kernel_thread_entry → fn</pre>\n<p></p>\n<p>为什么不可以在 forkret 中直接写&#xff1a;</p>\n<pre># 直接在 forkret 中调用 forkret → fn\nstruct trapframe tf = current-&gt;tf;\n\nint (*fn)(void *) = tf.tf_regs.reg_eax;   // eax 存放了指针函数\n\nfn(tf.tf_regs.reg_edx);                         // edx 存放了对应的参数 \n\n# 源程序\n/* forkret.c */\nvoid forkret(void) {forkrets(current-&gt;tf);}\n/* forkrets.S */\nforkrets: \n\tmovl 4(%esp), %esp\n\tjmp __trapret\n__trapret:\n\tpopal # 中断现场恢复\n\t...\n\tiret  # 进入kernel_thread_entry\nkernel_thread_entry:\n\tpushl %edx            # push arg\n    \tcall *%ebx              # call fn</pre>\n<p></p>"}, {"anon": "no", "uid": "illojz7yoPj", "subject": "关于内核线程之间调度的问题", "created": "2016-10-10T16:14:17Z", "content": "<p>## 问题1 &#xff1a; 内核线程在切换的过程中 &#xff0c;把相关的寄存器保存在了 context 结构体中&#xff0c;而 TSS 任务状态段没有关系。那TSS 任务状态段中的 eax的变量又何时使用呢&#xff1f;</p>\n<p></p>\n<p>第一个idleproc内核线程创建了 initproc 第二个内核线程&#xff0c;然后在调度的过程中&#xff0c;在 switch_to 汇编代码中去保存了当前线程到context结构体中&#xff0c;和 TSS  任务状态段没有关系</p>\n<pre>   # save from&#39;s registers\n    movl 4(%esp), %eax         <br />   # restore to&#39;s registers\n    movl 4(%esp), %eax          </pre>\n<p></p>\n<p></p>\n<p>## 问题 2 &#xff1a;线程绑定函数&#xff08;fn&#xff09;要经过  汇编代码 forkrets 和 kernel_thread_entry 才被调用 &#xff1f;为什么不直接在 forkret 函数中直接调用 fn 函数呢&#xff1f;不知道在这里使用汇编代码的优点是什么&#xff1f;</p>\n<p></p>\n<p>###  fn 函数调用过程如下&#xff1a;</p>\n<pre> forkret → forkrets → kernel_thread_entry → fn</pre>\n<p></p>\n<p>为什么不可以在 forkret 中直接写&#xff1a;</p>\n<pre># 直接在 forkret 中调用 forkret → fn<br />struct trapframe tf = current-&gt;tf;<br /><br />int (*fn)(void *) = tf.tf_regs.reg_eax;   // eax 存放了指针函数<br /><br />fn(tf.tf_regs.reg_edx);                         // edx 存放了对应的参数 <br /><br /># 源程序<br />/* forkret.c */<br />void forkret(void) {forkrets(current-&gt;tf);}<br />/* forkrets.S */<br />forkrets: <br />\tmovl 4(%esp), %esp<br />\tjmp __trapret<br />__trapret:<br />\tpopal # 中断现场恢复<br />\t...<br />\tiret  # 进入kernel_thread_entry<br />kernel_thread_entry:<br />\tpushl %edx            # push arg\n    \tcall *%ebx              # call fn</pre>\n<p></p>"}], "type": "question", "tags": ["2017", "lab5", "student", "unanswered"], "tag_good": [{"role": "student", "name": "游宇铭2013011386", "endorser": {}, "admin": false, "photo": null, "id": "i0fzq77r8zy1yz", "photo_url": null, "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "student", "name": "YaoJiexian", "endorser": {}, "admin": false, "photo": null, "id": "kkoy9j9i9xw55l", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 122, "children": [], "tag_good_arr": ["i0fzq77r8zy1yz", "kkoy9j9i9xw55l"], "no_answer": 1, "id": "iu49dz8quaq670", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 7, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168832261, "default_anonymity": "no"}, "error": null, "aid": "kyv0apdxyos1kw"}