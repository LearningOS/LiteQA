{"result": {"folders": ["lab5"], "nr": 830, "data": {"embed_links": []}, "created": "2016-04-25T03:16:12Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-25T03:16:12Z", "data": "inffm8s55aj2im", "type": "create"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-25T03:17:12Z", "data": "inffnj1yyk55fh", "type": "update"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-25T03:17:38Z", "data": "inffo3g2rpu4fm", "type": "update"}, {"to": "inffm8s3bpx2ik", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-25T03:52:02Z", "data": "infgwcbnoxa6eu", "type": "i_answer"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "lab5 cow机制&#xff08;有swap的实现&#xff09;", "created": "2016-04-25T03:17:38Z", "content": "<p>如题</p>\n<p>co&#39;w机制实现原理。<a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=792\" target=\"_blank\">https://piazza.com/class/i5j09fnsl7k5x0?cid=792</a></p>\n<p>具体实现方法可以查看<a href=\"https://github.com/nathenqian/ucoreos/tree/cow\" target=\"_blank\">https://github.com/nathenqian/ucoreos/tree/cow</a> 里的lab5文件夹。</p>\n<p>在做lab5的时候发现非常多的vmm的问题。</p>\n<p>这里指出。</p>\n<p>1. swap_fifo.c的init有问题。多进程的时候就错了。</p>\n<p>2. swap分区的虚拟地址不能过大&#xff0c;不然写入交换区的时候会错。我这里设置了0x90000000以上的地址不进行交换。</p>\n<p>3. pgdir_alloc_page里面有部分代码不全&#xff0c;使得原来的ucore代码根本没有交换。</p>\n<p>4. load_icode的时候&#xff0c;mm没有提前设置&#xff0c;导致拷贝的页全部没有加入swap分区。</p>\n<p>简而言之&#xff0c;vmm基本就是个空架子&#xff0c;在lab3之后一点用都没- -。</p>\n<p></p>\n<p>使用user/forktest.c验证cow机制&#xff0c;结果在result中。</p>\n<p>加入了user/cowtest.c&#xff0c;结果在cow_result中&#xff0c;验证交换的正确。具体做法&#xff0c;在init_main中&#xff0c;提前分配光所有页面给kernel&#xff0c;然后用户进程只有13个页面&#xff0c;然后进行写操作。这么做的原因是因为没有malloc的系统调用。</p>\n<p></p>\n<p>由于时间关系&#xff0c;就没有看ucore&#43;&#xff0c;相信这些问题应该在ucore&#43;里面解决了= =。</p>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "lab5 cow机制&#xff08;有swap的实现&#xff09;", "created": "2016-04-25T03:17:12Z", "content": "<p>如题</p>\n<p>co&#39;w机制实现原理。<a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=792\" target=\"_blank\">https://piazza.com/class/i5j09fnsl7k5x0?cid=792</a></p>\n<p>具体实现方法可以查看<a href=\"https://github.com/nathenqian/ucoreos/tree/cow\" target=\"_blank\">https://github.com/nathenqian/ucoreos/tree/cow</a> 里的lab5文件夹。</p>\n<p>在做lab5的时候发现非常多的vmm的问题。</p>\n<p>这里指出。</p>\n<p>1. swap_fifo.c的init有问题。多进程的时候就错了。</p>\n<p>2. swap分区的虚拟地址不能过大&#xff0c;不然写入交换区的时候会错。我这里设置了0x90000000以上的地址不进行交换。</p>\n<p>3. pgdir_alloc_page里面有部分代码不全&#xff0c;使得原来的ucore代码根本没有交换。</p>\n<p>4. load_icode的时候&#xff0c;mm没有提前设置&#xff0c;导致拷贝的页全部没有加入swap分区。</p>\n<p>简而言之&#xff0c;vmm基本就是个空架子&#xff0c;在lab3之后一点用都没- -。</p>\n<p></p>\n<p>使用user/forktest.c验证cow机制&#xff0c;结果在result中。</p>\n<p>加入了user/cowtest.c&#xff0c;结果在cow_result中&#xff0c;验证交换的正确。具体做法&#xff0c;在init_main中&#xff0c;提前分配光所有页面给kernel&#xff0c;然后用户进程只有13个页面&#xff0c;然后进行写操作。这么做的原因是因为没有malloc的系统调用。</p>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "lab5 cow机制&#xff08;有swap的实现&#xff09;", "created": "2016-04-25T03:16:12Z", "content": "<p>如题</p>\n<p>具体实现方法可以查看<a href=\"https://github.com/nathenqian/ucoreos/tree/cow\" target=\"_blank\">https://github.com/nathenqian/ucoreos/tree/cow</a></p>\n<p>在做lab5的时候发现非常多的vmm的问题。</p>\n<p>这里指出。</p>\n<p>1. swap_fifo.c的init有问题。多进程的时候就错了。</p>\n<p>2. swap分区的虚拟地址不能过大&#xff0c;不然写入交换区的时候会错。我这里设置了0x90000000以上的地址不进行交换。</p>\n<p>3. pgdir_alloc_page里面有部分代码不全&#xff0c;使得原来的ucore代码根本没有交换。</p>\n<p>4. load_icode的时候&#xff0c;mm没有提前设置&#xff0c;导致拷贝的页全部没有加入swap分区。</p>\n<p>简而言之&#xff0c;vmm基本就是个空架子&#xff0c;在lab3之后一点用都没- -。</p>\n<p></p>\n<p>使用user/forktest.c验证cow机制&#xff0c;结果在result中。</p>\n<p>加入了user/cowtest.c&#xff0c;结果在cow_result中&#xff0c;验证交换的正确。具体做法&#xff0c;在init_main中&#xff0c;提前分配光所有页面给kernel&#xff0c;然后用户进程只有13个页面&#xff0c;然后进行写操作。这么做的原因是因为没有malloc的系统调用。</p>"}], "type": "question", "tags": ["lab5", "student"], "tag_good": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 124, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2016-04-25T03:52:02Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "infgwcbb7yq6et", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2016-04-25T03:52:02Z", "content": "<p>这是一个很的扩展实验。对COW理解&#xff0c;只有在实际动手做过&#xff0c;才能有透彻的理解。</p>\n<p></p>\n<p>尽管他的实现来有不足&#xff0c;我对此评价很高&#xff0c;并希望有其他同学对这个问题的进一步思考或对其他自己有兴趣的问题进行深入讨论。</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}], "tag_good_arr": ["hdjonbiyfs62ie"], "no_answer": 0, "id": "inffm8s3bpx2ik", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168585607, "default_anonymity": "no"}, "error": null, "aid": "kyv05f2f1w52wq"}