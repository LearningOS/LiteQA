{"result": {"folders": ["lab2"], "nr": 507, "data": {"embed_links": []}, "created": "2015-09-25T17:00:10Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "iezimbvr4Kl", "anon": "no", "when": "2015-09-25T17:00:10Z", "data": "iezw9fm5ifb7gx", "type": "create"}, {"uid": "iezimbvr4Kl", "anon": "no", "when": "2015-09-25T17:00:29Z", "data": "iezw9uocx865lx", "type": "update"}, {"to": "iezw9fix6a7gu", "uid": "hdjoucuyb836fq", "anon": "no", "when": "2015-09-28T00:42:53Z", "data": "if37o6typzj4xl", "type": "i_answer"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "iezimbvr4Kl", "subject": "地址映射的四个阶段问题", "created": "2015-09-25T17:00:29Z", "content": "<p><strong>第三个阶段</strong>从enable_page函数开始&#xff0c;到执行gdt_init函数&#xff08;在kern/mm/pmm.c中&#xff09;之前&#xff0c;启动了页映射机制&#xff0c;但没有第三次更新段映射。这时的虚拟地址&#xff0c;线性地址以及物理地址之间的映射关系比较微妙&#xff1a;</p>\n<p><code>virt addr - 0xC0000000 = linear addr = phy addr &#43; 0xC0000000 #物理地址在0~4MB之外的三者映射关系</code></p>\n<p><code> virt addr - 0xC0000000 = linear addr = phy addr #物理地址在0~4MB之内的三者映射关系<br /></code></p>\n<p></p>\n<p>根据上述映射关系&#xff0c;我自己测试了0xC0100000和0xC0400000虚拟地址转换物理地址的过程&#xff0c;结果如下&#xff1a;</p>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"558\"><tbody><tr height=\"18\"><td height=\"18\" width=\"112\">虚拟地址</td><td width=\"90\">线性地址</td><td width=\"72\">高10位</td><td width=\"72\">中10位</td><td width=\"101\">低12位</td><td width=\"111\">物理地址</td></tr><tr height=\"18\"><td height=\"18\">0xC0100000</td><td>0x100000</td><td>0</td><td>256</td><td>0</td><td>0x100000</td></tr><tr height=\"18\"><td height=\"18\">0xC0400000</td><td>0x400000</td><td>1</td><td>0</td><td>0</td><td>???????</td></tr></tbody></table>\n<p></p>\n<p>对于0xC0100000&#xff0c;根据第三阶段的映射转换关系&#xff0c;说明物理地址在0~4MB之内的三者映射关系是正确的&#xff1b;</p>\n<p></p>\n<p>对于0xC0400000&#xff0c;根据第三阶段的映射转换关系&#xff0c;我不能计算出最终的物理地址。因为页目录中的第二个页目录项&#xff0c;并没有设置相应的物理地址&#xff0c;那么4M之外的映射关系是如何得出的呢&#xff1f;0xC0400000在第三阶段的映射转换关系&#xff0c;它物理地址计算过程是什么&#xff1f;</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>"}, {"anon": "no", "uid": "iezimbvr4Kl", "subject": "地址映射的四个阶段问题", "created": "2015-09-25T17:00:10Z", "content": "<p><strong>第三个阶段</strong>从enable_page函数开始&#xff0c;到执行gdt_init函数&#xff08;在kern/mm/pmm.c中&#xff09;之前&#xff0c;启动了页映射机制&#xff0c;但没有第三次更新段映射。这时的虚拟地址&#xff0c;线性地址以及物理地址之间的映射关系比较微妙&#xff1a;</p>\n<p><code>virt addr - 0xC0000000 = linear addr = phy addr &#43; 0xC0000000 #物理地址在0~4MB之外的三者映射关系 virt addr - 0xC0000000 = linear addr = phy addr #物理地址在0~4MB之内的三者映射关系<br /></code></p>\n<p></p>\n<p>根据上述映射关系&#xff0c;我自己测试了0xC0100000和0xC0400000虚拟地址转换物理地址的过程&#xff0c;结果如下&#xff1a;</p>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"558\">     <tbody><tr height=\"18\"><td height=\"18\" width=\"112\">虚拟地址</td><td width=\"90\">线性地址</td><td width=\"72\">高10位</td><td width=\"72\">中10位</td><td width=\"101\">低12位</td><td width=\"111\">物理地址</td></tr><tr height=\"18\"><td height=\"18\">0xC0100000</td><td>0x100000</td><td>0</td><td>256</td><td>0</td><td>0x100000</td></tr><tr height=\"18\"><td height=\"18\">0xC0400000</td><td>0x400000</td><td>1</td><td>0</td><td>0</td><td>???????</td></tr></tbody></table>\n<p></p>\n<p>对于0xC0100000&#xff0c;根据第三阶段的映射转换关系&#xff0c;说明物理地址在0~4MB之内的三者映射关系是正确的&#xff1b;</p>\n<p></p>\n<p>对于0xC0400000&#xff0c;根据第三阶段的映射转换关系&#xff0c;我不能计算出最终的物理地址。因为页目录中的第二个页目录项&#xff0c;并没有设置相应的物理地址&#xff0c;那么4M之外的映射关系是如何得出的呢&#xff1f;0xC0400000在第三阶段的映射转换关系&#xff0c;它物理地址计算过程是什么&#xff1f;</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>"}], "type": "question", "tags": ["lab2", "student"], "tag_good": [], "unique_views": 167, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2015-09-28T00:42:53Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "szqxzh", "endorser": {}, "admin": false, "photo": null, "id": "iezimbvr4Kl", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "if37o6tto7r4xk", "history": [{"anon": "no", "uid": "hdjoucuyb836fq", "subject": "", "created": "2015-09-28T00:42:53Z", "content": "<p>0~4M之外的物理内存&#xff0c;在这个阶段里不能使用0xCXXXXXX这样的地址进行访问。根据你所给出的公式&#xff0c;以0x800000为例反推其虚拟地址&#xff1a;</p>\n<p></p>\n<p>物理地址&#xff08;phy addr&#xff09;&#xff1a;0x800000</p>\n<p>线性地址&#xff08;linear addr&#xff09;&#xff1a;phy addr &#43; 0xC0000000 = 0x800000 &#43; 0xC0000000 = 0xC0800000</p>\n<p>逻辑地址&#xff08;virt addr&#xff09;&#xff1a;linear addr &#43; 0xC00000 = 0xC0800000 &#43; 0xC0000000 = 0x80800000</p>\n<p></p>\n<p>所以在这一阶段&#xff0c;要访问8M位置的物理内存&#xff0c;只能使用0x80800000这个虚拟地址&#xff0c;用0xC0800000的话会让系统崩掉的。</p>\n<p></p>\n<p>因此&#xff0c;在这一阶段&#xff0c;ucore除了0~4M以外&#xff0c;不能用编译时确定的虚拟地址&#xff08;从0xC0000000&#xff09;访问其它位置的内存。不过因为这只是一个过渡阶段&#xff0c;其存在的原因是x86没办法在启用页表的同时修改段表&#xff0c;所以影响不大。</p>"}], "type": "i_answer", "tag_endorse_arr": ["iezimbvr4Kl"], "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "iezw9fix6a7gu", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167901003, "default_anonymity": "no"}, "error": null, "aid": "kyuzqqtn6xp40a"}