{"result": {"history_size": 2, "folders": ["big_proj"], "nr": 131, "data": {"embed_links": []}, "created": "2015-03-17T15:16:16Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i74g3aomM8b", "anon": "no", "when": "2015-03-17T15:16:16Z", "data": "i7dg097khqf6gy", "type": "create"}, {"uid": "i74g3aomM8b", "anon": "no", "when": "2015-03-17T16:15:25Z", "data": "i7di4bzgjqh2ot", "type": "update"}, {"to": "i7dg097h3n46gx", "uid": "hdjoucuyb836fq", "anon": "no", "when": "2015-03-18T00:17:00Z", "data": "i7dzbn994cc6wl", "type": "i_answer"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i74g3aomM8b", "subject": "SMP的基本意义是什么&#xff1f;", "created": "2015-03-17T16:15:25Z", "content": "<p>看基本介绍的话SMP代表几个CPU地位平等&#xff0c;使用同样的资源。那原本在一个CPU上的指令是如何分开被多个CPU并行执行的&#xff1f;</p>\n<p>单个CPU为了提高运行效率采取的流水线技术、指令乱序执行技术会保证这样的结果跟不使用流水线顺序执行的结果一样对吧&#xff1f;对于SMP来说CPU有没有进行任何保证&#xff1f;</p>\n<p>如果是从一加电开始SMP就开始发挥作用&#xff0c;那刚开始的代码不是很容易因为乱序执行出错&#xff1f;</p>\n<p>SMP从什么时候开始生效&#xff1f;在没有进程和线程的情况下&#xff0c;多个CPU和一个CPU有什么区别吗&#xff1f;</p>"}, {"anon": "no", "uid": "i74g3aomM8b", "subject": "SMP的基本意义是什么&#xff1f;", "created": "2015-03-17T15:16:16Z", "content": "<p>看基本介绍的话SMP代表几个CPU地位平等&#xff0c;使用同样的资源。那原本在一个CPU上的指令是如何分开被多个CPU并行执行的&#xff1f;</p>\n<p>单个CPU为了提高运行效率采取的流水线技术、指令乱序执行技术会保证这样的结果跟不使用流水线顺序执行的结果一样对吧&#xff1f;对于SMP来说CPU有没有进行任何保证&#xff1f;</p>\n<p>如果是从一加电开始SMP就开始发挥作用&#xff0c;那刚开始的代码不是很容易因为乱序执行出错&#xff1f;</p>\n<p>在没有进程和线程的情况下&#xff0c;进行加锁有什么意义&#xff1f;</p>"}], "type": "question", "tags": ["big_proj", "student"], "tag_good": [], "unique_views": 104, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2015-03-18T00:17:00Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "ArchStacker", "endorser": {}, "admin": false, "photo": null, "id": "i74g3aomM8b", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjoucuyb836fq", "subject": "", "created": "2015-03-18T00:17:00Z", "content": "<p>SMP&#xff08;Symmetric Multiprocessing&#xff09;指的是多个CPU有相似的架构&#xff08;例如相同的指令集、同样大小的L1、L2 cache等&#xff09;、对同一内存地址的访问时间相同、对外设的访问权限相同等&#xff0c;因而一个任务在任意一个CPU上执行的效率都差不多&#xff0c;操作系统&#xff08;在默认情况下&#xff09;也不会区分对待这些CPU。</p>\n<p></p>\n<p>SMP架构下&#xff0c;每个CPU执行自己的指令序列&#xff0c;而这些指令序列不能来自同一个进程&#xff08;可以是同一个程序&#xff09;&#xff0c;并不是一个指令序列被多个CPU分开执行。</p>\n<p></p>\n<p>在x86架构下&#xff0c;刚加电时只有一个CPU运行操作系统&#xff0c;其它CPU处于停滞状态&#xff0c;直到操作系统启用其它CPU&#xff0c;具体过程请参考ucore_plus的amd64实现或xv6。</p>\n<p></p>\n<p>在没有进程和线程时&#xff0c;平时只有一个CPU运行任务&#xff0c;其它CPU只能空闲&#xff0c;但它们仍然可以处理设备中断这样的异步事件。</p>"}], "type": "i_answer", "tag_endorse_arr": ["i74g3aomM8b"], "children": [], "id": "i7dzbn94r1v6wk", "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "i7dg097h3n46gx", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167356878, "default_anonymity": "no"}, "error": null, "aid": "kyuzf2z2t6d7i5"}