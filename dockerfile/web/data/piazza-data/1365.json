{"result": {"folders": ["学习方法", "labx", "2019"], "nr": 1365, "data": {"embed_links": []}, "created": "2019-11-03T14:18:30Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "jzpxxm02p1kwn", "data": "k2j2zat4ne0to", "type": "create", "when": "2019-11-03T14:18:30Z"}, {"anon": "no", "uid": "jzpxxm02p1kwn", "data": "k2j327k4qmw3lh", "type": "update", "when": "2019-11-03T14:20:45Z"}, {"anon": "no", "uid": "jzpxxm02p1kwn", "data": "k2j32yqfev5494", "type": "update", "when": "2019-11-03T14:21:21Z"}, {"anon": "no", "uid": "jzpxxm02p1kwn", "to": "k2j2zat2d5ztn", "type": "followup", "when": "2019-11-03T14:29:52Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "jzpxxm02p1kwn", "subject": "ucore plus 文件系统 bug【待修复】", "created": "2019-11-03T14:21:21Z", "content": "<p>之前在学习 ucore&#xff08;非plus&#xff09;的文件系统时&#xff0c;发现文件系统的制作工具 mksfs 存在一处 bug&#xff0c;我已将其修复&#xff08;<a href=\"https://github.com/chyyuu/ucore_os_lab/pull/74\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/chyyuu/ucore_os_lab/pull/74</a>&#xff09;&#xff0c;简单来说就是在添加 entry 的时候&#xff0c;写入 block 时的参数传错了。 ucore plus 同样有此问题&#xff0c;但不止 1 个 mksfs.c&#xff0c;有的考虑了大小端因素&#xff0c;且ucore plus 分支众多&#xff0c;有的涉及其他硬件环境&#xff0c;可能需要熟悉环境才方便回归验证&#xff0c;所以期待有熟悉其环境的同学将它们 fix 掉。</p>\n<p></p>"}, {"anon": "no", "uid": "jzpxxm02p1kwn", "subject": "ucore plus 文件系统 bug【待修复】", "created": "2019-11-03T14:20:45Z", "content": "<p>之前在学习 ucore&#xff08;非plus&#xff09;的文件系统时&#xff0c;发现文件系统的制作工具 mksfs 存在一处 bug&#xff0c;我已将其修复&#xff08;<a href=\"https://github.com/chyyuu/ucore_os_lab/pull/74\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/chyyuu/ucore_os_lab/pull/74</a>&#xff09;&#xff0c;简单来说就是在添加 entry 的时候&#xff0c;写入 block 时的参数传错了。 ucore plus 同样有此问题&#xff0c;但不止 1 个 mksfs.c&#xff0c;有的考虑了大小端因素&#xff0c;且ucore plus 分支众多&#xff0c;有的涉及其他硬件环境&#xff0c;可能需要熟悉环境才方便回归验证&#xff0c;所以期待有熟悉其环境的同学将它们 fix 掉。</p>\n<p></p>"}, {"anon": "no", "uid": "jzpxxm02p1kwn", "subject": "ucore plus 文件系统 bug【待修复】", "created": "2019-11-03T14:18:30Z", "content": "<p>之前在学习 ucore&#xff08;非plus&#xff09;的文件系统时&#xff0c;发现文件系统的制作工具 mksfs 存在一处 bug&#xff0c;我已将其修复&#xff08;https://github.com/chyyuu/ucore_os_lab/pull/74&#xff09;&#xff0c;简单来说就是在添加 entry 的时候&#xff0c;写入 block 时的参数传错了。 ucore plus 同样有此问题&#xff0c;但不止 1 个 mksfs.c&#xff0c;有的考虑了大小端因素&#xff0c;且ucore plus 分支众多&#xff0c;有的涉及其他硬件环境&#xff0c;可能需要熟悉环境才方便回归验证&#xff0c;所以期待有熟悉其环境的同学将它们 fix 掉。</p>\n<p></p>"}], "type": "note", "tags": ["2019", "labx", "student", "unanswered", "学习方法"], "tag_good": [], "unique_views": 121, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>bug 详细说明&#xff1a;</p>\n<p></p>\n<p>准确的说应该是 mksfs ——SFS 文件系统制作工具 &#34;mksfs&#34; 的 bug.</p>\n<p></p>\n<p>mksfs 工具用于将宿主机指定目录下所有文件&#xff0c;按照 SFS 文件系统的格式写入到指定的虚拟硬盘中。</p>\n<p>此 bug 将导致用 mksfs 工具制作文件系统时&#xff0c;如果宿主机提供的文件的名字超过 252 个字符&#xff0c;则操作系统运行时只能读到前 252 个字符&#xff1b;而系统声明最多支持文件名字符数为 255。</p>\n<p></p>\n<p>复现方法很方便&#xff0c;不一定真要写入一个有 255 个字符名字的文件&#xff0c;只需把 mksfs 中声明支持文件名最大字符数的宏 <code>SFS_MAX_FNAME_LEN</code> 改为较小值&#xff0c;比如改为 15. 正常编译并启动系统&#xff0c;shell 键入 <code>ls</code>, 会发现总长度为 15 个字符的文件 <code>faultreadkernel</code> 被截断成 <code>faultreadker</code>, 共 15 - 3 = 12 个字符。</p>\n<p></p>\n<p>原因&#xff1a;</p>\n<p></p>\n<p>mksfs 工具制作 SFS 文件系统时&#xff0c;<code>add_entry</code> 操作中&#xff0c;<code>write_block</code> 的参数不正确&#xff0c;写入数据大小不应是 <code>sizeof(entry-&gt;name)</code>&#xff0c;而应该是 <code>sizeof(struct sfs_entry)</code>。</p>\n<p><code>entry</code> 作为目录类型 <code>inode</code> 的数据内容&#xff0c;只包含两个元素&#xff1a;子节点的 <code>ino</code> 及其 <code>name</code>, <code>ino</code>的类型是 <code>uint32</code>, <code>name</code> 的类型是 <code>char[SFS_MAX_FNAME_LEN &#43; 1]</code>。</p>\n<p></p>\n<p>bug 代码相当于只写入了 <code>ino</code> 和 <code>name</code> 的一部分内容&#xff0c;且未包含最后的 <code>&#39;\\0&#39;</code> 。由于 <code>sizeof(entry-&gt;name) = 256</code>&#xff08;包括最后的 <code>&#39;\\0&#39;</code>&#xff09;&#xff0c; 而 <code>ino</code> 是 <code>uint32</code> 类型&#xff0c;占 4 个字节&#xff0c;所以 name 的最后 3 个字符将丢失&#xff0c;剩余不含 <code>&#39;\\0&#39;</code> 的部分共 252 个字符。</p>\n<p>这个 bug 可能还有一个风险&#xff1a;文件系统在读取此 <code>entry</code> 的 <code>name</code> 时&#xff0c;寻找的是 <code>null-terminated string</code>&#xff0c;而由于上述截断的发生&#xff0c;可能写入磁盘的不完整文件名之后紧邻的不是 <code>&#39;\\0&#39;</code>, 这就麻烦大了&#xff0c;会有兼容性问题。不过暂时没去查 C 语言是否规定全局 <code>struct</code> 中的 <code>char array</code> 会不会被初始化为 <code>\\0</code>&#xff0c;如果不会的话&#xff0c;那就确有问题了。</p>\n<p></p>\n<p>目前状态</p>\n<p></p>\n<p>ucore 已回归&#xff1a;<a href=\"https://github.com/chyyuu/ucore_os_lab/pull/74\">https://github.com/chyyuu/ucore_os_lab/pull/74</a><a href=\"https://github.com/chyyuu/ucore_os_lab/pull/74\" target=\"_blank\" rel=\"noopener noreferrer\"></a></p>\n<p>ucore plus 未修复</p>", "created": "2019-11-03T14:29:52Z", "bucket_order": 20, "bucket_name": "Week 11/3 - 11/9", "type": "followup", "tag_good": [], "uid": "jzpxxm02p1kwn", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "k2j3dwxzicn31e", "updated": "2019-11-03T14:29:52Z", "config": {}}], "tag_good_arr": [], "id": "k2j2zat2d5ztn", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 1, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169842110, "default_anonymity": "no"}, "error": null, "aid": "kyv0wclaewgfc"}