{"result": {"folders": ["lab4"], "nr": 265, "data": {"embed_links": []}, "created": "2015-04-09T11:07:23Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "stud", "when": "2015-04-09T11:07:23Z", "data": "i8a28siojnt4y8", "type": "create", "uid_a": "a_0"}, {"to": "i8a28sil8oj4y7", "uid": "hs2swpdtr91gu", "anon": "no", "when": "2015-04-09T14:37:18Z", "data": "i8a9qqnbysvk0", "type": "i_answer"}, {"to": "i8a28sil8oj4y7", "anon": "stud", "when": "2015-04-10T04:15:37Z", "type": "followup", "uid_a": "a_0"}, {"to": "i8a28sil8oj4y7", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-04-13T01:23:43Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "stud", "uid_a": "a_0", "subject": "Lab4 疑问", "created": "2015-04-09T11:07:23Z", "content": "<p>依我的理解&#xff0c;在lab4进程切换的时候&#xff0c;有以下几个步骤&#xff1a;</p>\n<p></p>\n<p>    1&#xff09;利用proc_struct中的context的eip&#xff0c;跳到forkret</p>\n<p></p>\n<p>    2&#xff09;在forkret中&#xff0c;利用原先设计好的context.esp&#xff0c;将栈顶指向proc_struct中的trapframe</p>\n<p></p>\n<p>    3&#xff09;跳到trapret&#xff0c;将trapframe中的寄存器一一还原&#xff0c;将eip指向kernel_thread_entry</p>\n<p></p>\n<p></p>\n<p>我的疑问就是&#xff0c;为什么要先用context还原一遍寄存器&#xff0c;然后到trapframe里再还原一遍&#xff1f;</p>\n<p></p>\n<p>为什么不能直接将context中的eip就指向kernel_thread_entry&#xff1f;</p>\n<p></p>\n<p>一直搞不懂proc_struct中trap的作用&#xff0c;求解释&#xff01;</p>"}], "type": "question", "tags": ["lab4", "student"], "tag_good": [], "unique_views": 112, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2015-04-09T14:37:18Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "i8a9qqn8dhrjz", "history": [{"anon": "no", "uid": "hs2swpdtr91gu", "subject": "", "created": "2015-04-09T14:37:18Z", "content": "<p>两处还原的寄存器好像不太一样</p>"}], "type": "i_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}, {"anon": "stud", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>看起来差不多啊&#xff1f;至少都有eip。</p>\n<p></p>\n<p>tf里的esp因为是内核栈&#xff0c;所以在lab4没有更新。</p>\n<p></p>\n<p>还是不懂为啥要用tf&#xff0c;是用于后面的用户进程保存用户栈吗&#xff1f;</p>", "created": "2015-04-10T04:15:37Z", "bucket_order": 272, "bucket_name": "Week 4/5 - 4/11", "type": "followup", "tag_good": [], "uid_a": "a_0", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>你考虑是对的。</p>\n<p>context为了恢复被调度打断的进程上下文。trapframe为了恢复被中断打断的进程上下文&#xff0c;trapframe的内容主要是用来回到用用户态的户进程的&#xff08;由于中断或系统调用被打断&#xff09;。lab5中会涉及。但lab4中也会存在内核线程被中断打断的情况&#xff0c;所以也是需要恢复的。</p>", "created": "2015-04-13T01:23:43Z", "bucket_order": 271, "bucket_name": "Week 4/12 - 4/18", "type": "feedback", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "id": "i8f75ld0lq3g9", "updated": "2015-04-13T01:23:43Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i8b2z3yil055wc", "updated": "2015-04-10T04:15:37Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i8a28sil8oj4y7", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 5, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167553123, "default_anonymity": "no"}, "error": null, "aid": "kyuzjaebgqu2u9"}