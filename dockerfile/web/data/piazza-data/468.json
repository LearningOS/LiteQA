{"result": {"folders": ["exam", "通知", "课堂问答"], "nr": 468, "data": {"embed_links": []}, "created": "2015-06-04T01:35:40Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-06-04T01:35:40Z", "data": "iahih91mtso5oj", "type": "create"}, {"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-06-04T01:50:27Z", "data": "iahj0a3rpnt4p", "type": "update"}, {"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-06-04T01:58:29Z", "data": "iahjaliukxp3qr", "type": "update"}, {"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-06-04T01:59:00Z", "data": "iahjb9t8lwj3bi", "type": "update"}, {"uid": "hcrrjuyequh4bt", "anon": "no", "when": "2016-02-20T09:44:16Z", "data": "ikuxuy454lx7cz", "type": "update"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "【提示】学堂在线的OS考试复习用习题", "created": "2016-02-20T09:44:16Z", "content": "<p>倒序&#xff1a;</p>\n<p></p>\n<p>1. IO/磁盘系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md</a> 中的问题&#xff11;&#xff0c;&#xff12;</p>\n<p></p>\n<p>2. 文件系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md</a></p>\n<p></p>\n<p>3. 死锁&#xff0f;银行家算法</p>\n<p></p>\n<p>每人用python实现<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py\">银行家算法</a>。大致输出可参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt\">参考输出</a>。除了<code>YOUR CODE</code>部分需要填写代码外&#xff0c;在算法的具体实现上&#xff0c;效率也不高&#xff0c;可进一步改进执行效率。</p>\n<p>银行家算法参考和需要补全的代码</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py</p>\n<p></p>\n<p>参考输出&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt</p>\n<p></p>\n<p></p>\n<p>4. 基于PV操作的同步互斥问题</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md</a></p>\n<p>根据自己的精力&#xff0c;挑选一道完成</p>\n<p></p>\n<p>5. 同步互斥</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md</a>　</p>\n<p>中的</p>\n<ol><li>\n<p>&#xff08;spoc&#xff09;阅读<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/lab7-spoc-exercise.md\">简化x86计算机模拟器的使用说明</a>&#xff0c;理解基于简化x86计算机的汇编代码。</p>\n</li><li>\n<p>&#xff08;spoc)了解race condition. 进入<a href=\"https://github.com/chyyuu/ucore_lab/tree/master/related_info/lab7/race-condition\">race-condition代码目录</a>。</p>\n</li></ol>\n<p> </p>\n<p>6.  调度算法</p>\n<p>理解并完善调度算法</p>\n<p>实现&#xff13;种调度算法&#xff08;SJF&#xff0c;FIFO&#xff0c;RR&#xff09;&#xff0c;可基于python, ruby, C, C&#43;&#43;&#xff0c;LISP等&#xff09;模拟实现&#xff0c;并给出测试。请参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py\">scheduler-homework.py</a>代码或独自实现。 最后统计采用不同调度算法的每个任务的相关时间和总体的平均时间&#xff1a; 　- turnaround time　周转时间 　- response time 响应时间 　- wait time　等待时间</p>\n<p></p>\n<p>调度算法和填空参考&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py</p>\n<p></p>\n<p>7. 进程管理</p>\n<p> 设计一个简化的进程管理子系统&#xff0c;可以管理并调度如下简化进程.给出了<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab5/process-cpuio-homework.py\">参考代码</a>&#xff0c;请理解代码&#xff0c;并完成&#xff02;YOUR CODE&#34;部分的内容&#xff0e;　</p>\n<p>参考代码&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py</a></p>\n<p>帮助信息</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题\">https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题</a></p>\n<p></p>\n<p>&#xff18;. 内存置换算法</p>\n<p>选择四种替换算法&#xff08;0&#xff1a;LRU置换算法&#xff0c;1:改进的clock 页置换算法&#xff0c;2&#xff1a;工作集页置换算法&#xff0c;3&#xff1a;缺页率置换算法&#xff09;中的一种来设计一个应用程序模拟实现&#xff0c;并给出测试。请参考如python代码或独自实现。</p>\n<p>页置换算法实现的参考实例</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab3/page-replacement-policy.py</p>\n<p></p>\n<p>9.  虚存管理</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换\">https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换</a></p>\n<p></p>\n<p>10. 物理内存管理</p>\n<p>选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在应用程序层面(可以 用python,ruby,C&#43;&#43;&#xff0c;C&#xff0c;LISP等语言)来实现&#xff0c;给出你的设思路&#xff0c;并给出测试用例。</p>\n<p></p>\n<p>11 系统调用&#xff0c;中断</p>\n<p>通过分析<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">lab1_ex0</a>了解Linux应用的系统调用编写和含义。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md</a></p>\n<p></p>\n<p>通过调试<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">lab1_ex1</a>了解Linux应用的系统调用执行过程。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md</a></p>\n<p></p>\n<p>如果能够比较顺利的完成上述题目&#xff0c;预估的考试成绩应该在95分以上</p>\n<p></p>\n<p>另外&#xff0c;很抱歉&#xff0c;老师和助教没有足够的时间评阅各位的完成情况。建议在piazza上相互讨论&#xff0c;或在此piazza论坛中寻找清华cs的学生写得有效的参考答案。 </p>\n<p></p>"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "【提示】学堂在线的OS考试复习用习题", "created": "2015-06-04T01:59:00Z", "content": "<p>倒序&#xff1a;</p>\n<p></p>\n<p>1. IO/磁盘系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md</a> 中的问题&#xff11;&#xff0c;&#xff12;</p>\n<p></p>\n<p>2. 文件系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md</a></p>\n<p></p>\n<p>3. 死锁&#xff0f;银行家算法</p>\n<p></p>\n<p>每人用python实现<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py\">银行家算法</a>。大致输出可参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt\">参考输出</a>。除了<code>YOUR CODE</code>部分需要填写代码外&#xff0c;在算法的具体实现上&#xff0c;效率也不高&#xff0c;可进一步改进执行效率。</p>\n<p>银行家算法参考和需要补全的代码</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py</p>\n<p></p>\n<p>参考输出&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt</p>\n<p></p>\n<p></p>\n<p>4. 基于PV操作的同步互斥问题</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md</a></p>\n<p>根据自己的精力&#xff0c;挑选一道完成</p>\n<p></p>\n<p>5. 同步互斥</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md</a>　</p>\n<p>中的</p>\n<ol><li>\n<p>&#xff08;spoc&#xff09;阅读<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/lab7-spoc-exercise.md\">简化x86计算机模拟器的使用说明</a>&#xff0c;理解基于简化x86计算机的汇编代码。</p>\n</li><li>\n<p>&#xff08;spoc)了解race condition. 进入<a href=\"https://github.com/chyyuu/ucore_lab/tree/master/related_info/lab7/race-condition\">race-condition代码目录</a>。</p>\n</li></ol>\n<p> </p>\n<p>6.  调度算法</p>\n<p>理解并完善调度算法</p>\n<p>实现&#xff13;种调度算法&#xff08;SJF&#xff0c;FIFO&#xff0c;RR&#xff09;&#xff0c;可基于python, ruby, C, C&#43;&#43;&#xff0c;LISP等&#xff09;模拟实现&#xff0c;并给出测试。请参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py\">scheduler-homework.py</a>代码或独自实现。 最后统计采用不同调度算法的每个任务的相关时间和总体的平均时间&#xff1a; 　- turnaround time　周转时间 　- response time 响应时间 　- wait time　等待时间</p>\n<p></p>\n<p>调度算法和填空参考&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py</p>\n<p></p>\n<p>7. 进程管理</p>\n<p> 设计一个简化的进程管理子系统&#xff0c;可以管理并调度如下简化进程.给出了<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab5/process-cpuio-homework.py\">参考代码</a>&#xff0c;请理解代码&#xff0c;并完成&#xff02;YOUR CODE&#34;部分的内容&#xff0e;　</p>\n<p>参考代码&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py</a></p>\n<p>帮助信息</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题\">https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题</a></p>\n<p></p>\n<p>&#xff18;. 内存置换算法</p>\n<p>选择四种替换算法&#xff08;0&#xff1a;LRU置换算法&#xff0c;1:改进的clock 页置换算法&#xff0c;2&#xff1a;工作集页置换算法&#xff0c;3&#xff1a;缺页率置换算法&#xff09;中的一种来设计一个应用程序模拟实现&#xff0c;并给出测试。请参考如python代码或独自实现。</p>\n<p>页置换算法实现的参考实例</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab3/page-replacement-policy.py</p>\n<p></p>\n<p>9.  虚存管理</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换\">https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换</a></p>\n<p></p>\n<p>10. 物理内存管理</p>\n<p>选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在应用程序层面(可以 用python,ruby,C&#43;&#43;&#xff0c;C&#xff0c;LISP等语言)来实现&#xff0c;给出你的设思路&#xff0c;并给出测试用例。</p>\n<p></p>\n<p>11 系统调用&#xff0c;中断</p>\n<p>通过分析<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">lab1_ex0</a>了解Linux应用的系统调用编写和含义。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md</a></p>\n<p></p>\n<p>通过调试<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">lab1_ex1</a>了解Linux应用的系统调用执行过程。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md</a></p>\n<p></p>\n<p>如果能够比较顺利的完成上述题目&#xff0c;预估的考试成绩应该在95分以上</p>\n<p></p>\n<p>另外&#xff0c;很抱歉&#xff0c;老师和助教没有足够的时间评阅各位的完成情况。建议在piazza上相互讨论&#xff0c;或在此piazza论坛中寻找清华cs的学生写得有效的参考答案。 </p>\n<p></p>\n<p>#pin</p>"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "【提示】学堂在线的OS考试复习用习题", "created": "2015-06-04T01:58:29Z", "content": "<p>倒序&#xff1a;</p>\n<p></p>\n<p>1. IO/磁盘系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md</a> 中的问题&#xff11;&#xff0c;&#xff12;</p>\n<p></p>\n<p>2. 文件系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md</a></p>\n<p></p>\n<p>3. 死锁&#xff0f;银行家算法</p>\n<p></p>\n<p>每人用python实现<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py\">银行家算法</a>。大致输出可参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt\">参考输出</a>。除了<code>YOUR CODE</code>部分需要填写代码外&#xff0c;在算法的具体实现上&#xff0c;效率也不高&#xff0c;可进一步改进执行效率。</p>\n<p>银行家算法参考和需要补全的代码</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py</p>\n<p></p>\n<p>参考输出&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt</p>\n<p></p>\n<p></p>\n<p>4. 基于PV操作的同步互斥问题</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md</a></p>\n<p>根据自己的精力&#xff0c;挑选一道完成</p>\n<p></p>\n<p>5. 同步互斥</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md</a>　</p>\n<p>中的</p>\n<ol><li>\n<p>&#xff08;spoc&#xff09;阅读<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/lab7-spoc-exercise.md\">简化x86计算机模拟器的使用说明</a>&#xff0c;理解基于简化x86计算机的汇编代码。</p>\n</li><li>\n<p>&#xff08;spoc)了解race condition. 进入<a href=\"https://github.com/chyyuu/ucore_lab/tree/master/related_info/lab7/race-condition\">race-condition代码目录</a>。</p>\n</li></ol>\n<p> </p>\n<p>6.  调度算法</p>\n<p>理解并完善调度算法</p>\n<p>实现&#xff13;种调度算法&#xff08;SJF&#xff0c;FIFO&#xff0c;RR&#xff09;&#xff0c;可基于python, ruby, C, C&#43;&#43;&#xff0c;LISP等&#xff09;模拟实现&#xff0c;并给出测试。请参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py\">scheduler-homework.py</a>代码或独自实现。 最后统计采用不同调度算法的每个任务的相关时间和总体的平均时间&#xff1a; 　- turnaround time　周转时间 　- response time 响应时间 　- wait time　等待时间</p>\n<p></p>\n<p>调度算法和填空参考&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py</p>\n<p></p>\n<p>7. 进程管理</p>\n<p> 设计一个简化的进程管理子系统&#xff0c;可以管理并调度如下简化进程.给出了<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab5/process-cpuio-homework.py\">参考代码</a>&#xff0c;请理解代码&#xff0c;并完成&#xff02;YOUR CODE&#34;部分的内容&#xff0e;　</p>\n<p>参考代码&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py</a></p>\n<p>帮助信息</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题\">https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题</a></p>\n<p></p>\n<p>&#xff18;. 内存置换算法</p>\n<p>选择四种替换算法&#xff08;0&#xff1a;LRU置换算法&#xff0c;1:改进的clock 页置换算法&#xff0c;2&#xff1a;工作集页置换算法&#xff0c;3&#xff1a;缺页率置换算法&#xff09;中的一种来设计一个应用程序模拟实现&#xff0c;并给出测试。请参考如python代码或独自实现。</p>\n<p>页置换算法实现的参考实例</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab3/page-replacement-policy.py</p>\n<p></p>\n<p>9.  虚存管理</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换\">https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换</a></p>\n<p></p>\n<p>10. 物理内存管理</p>\n<p>选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在应用程序层面(可以 用python,ruby,C&#43;&#43;&#xff0c;C&#xff0c;LISP等语言)来实现&#xff0c;给出你的设思路&#xff0c;并给出测试用例。</p>\n<p></p>\n<p>11 系统调用&#xff0c;中断</p>\n<p>通过分析<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">lab1_ex0</a>了解Linux应用的系统调用编写和含义。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md</a></p>\n<p></p>\n<p>通过调试<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">lab1_ex1</a>了解Linux应用的系统调用执行过程。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md</a></p>\n<p></p>\n<p>如果能够比较顺利的完成上述题目&#xff0c;预估的考试成绩应该在95分以上</p>\n<p></p>\n<p>另外&#xff0c;老师和助教没有足够的时间评阅各位的完成情况。建议在piazza上相互讨论&#xff0c;或在此piazza论坛中寻找清华cs的学生写得有效的参考答案。 </p>\n<p></p>\n<p>#pin</p>"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "【提示】学堂在线的OS考试复习用习题", "created": "2015-06-04T01:50:27Z", "content": "<p>倒序&#xff1a;</p>\n<p></p>\n<p>1. IO/磁盘系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md</a> 中的问题&#xff11;&#xff0c;&#xff12;</p>\n<p></p>\n<p>2. 文件系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md</a></p>\n<p></p>\n<p>3. 死锁&#xff0f;银行家算法</p>\n<p></p>\n<p>每人用python实现<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py\">银行家算法</a>。大致输出可参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt\">参考输出</a>。除了<code>YOUR CODE</code>部分需要填写代码外&#xff0c;在算法的具体实现上&#xff0c;效率也不高&#xff0c;可进一步改进执行效率。</p>\n<p>银行家算法参考和需要补全的代码</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py</p>\n<p></p>\n<p>参考输出&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt</p>\n<p></p>\n<p></p>\n<p>4. 基于PV操作的同步互斥问题</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md</a></p>\n<p>根据自己的精力&#xff0c;挑选一道完成</p>\n<p></p>\n<p>5. 同步互斥</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md</a>　</p>\n<p>中的</p>\n<ol><li>\n<p>&#xff08;spoc&#xff09;阅读<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/lab7-spoc-exercise.md\">简化x86计算机模拟器的使用说明</a>&#xff0c;理解基于简化x86计算机的汇编代码。</p>\n</li><li>\n<p>&#xff08;spoc)了解race condition. 进入<a href=\"https://github.com/chyyuu/ucore_lab/tree/master/related_info/lab7/race-condition\">race-condition代码目录</a>。</p>\n</li></ol>\n<p> </p>\n<p>6.  调度算法</p>\n<p>理解并完善调度算法</p>\n<p>实现&#xff13;种调度算法&#xff08;SJF&#xff0c;FIFO&#xff0c;RR&#xff09;&#xff0c;可基于python, ruby, C, C&#43;&#43;&#xff0c;LISP等&#xff09;模拟实现&#xff0c;并给出测试。请参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py\">scheduler-homework.py</a>代码或独自实现。 最后统计采用不同调度算法的每个任务的相关时间和总体的平均时间&#xff1a; 　- turnaround time　周转时间 　- response time 响应时间 　- wait time　等待时间</p>\n<p></p>\n<p>调度算法和填空参考&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab6/scheduler-homework.py</p>\n<p></p>\n<p>7. 进程管理</p>\n<p> 设计一个简化的进程管理子系统&#xff0c;可以管理并调度如下简化进程.给出了<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab5/process-cpuio-homework.py\">参考代码</a>&#xff0c;请理解代码&#xff0c;并完成&#xff02;YOUR CODE&#34;部分的内容&#xff0e;　</p>\n<p>参考代码&#xff1a;</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py</a></p>\n<p>帮助信息</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题\">https://github.com/xuyongjiande/os_exercises/blob/master/all/05-1-spoc-discussion.md#spoc小组思考题</a></p>\n<p></p>\n<p>&#xff18;. 内存置换算法</p>\n<p>选择四种替换算法&#xff08;0&#xff1a;LRU置换算法&#xff0c;1:改进的clock 页置换算法&#xff0c;2&#xff1a;工作集页置换算法&#xff0c;3&#xff1a;缺页率置换算法&#xff09;中的一种来设计一个应用程序模拟实现&#xff0c;并给出测试。请参考如python代码或独自实现。</p>\n<p>页置换算法实现的参考实例</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab3/page-replacement-policy.py</p>\n<p></p>\n<p>9.  虚存管理</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换\">https://github.com/xuyongjiande/os_exercises/blob/master/all/04-1-spoc-discussion.md#虚拟页式存储的地址转换</a></p>\n<p></p>\n<p>10. 物理内存管理</p>\n<p>选择四种&#xff08;0:最优匹配&#xff0c;1:最差匹配&#xff0c;2:最先匹配&#xff0c;3:buddy systemm&#xff09;分配算法中的一种或多种&#xff0c;在应用程序层面(可以 用python,ruby,C&#43;&#43;&#xff0c;C&#xff0c;LISP等语言)来实现&#xff0c;给出你的设思路&#xff0c;并给出测试用例。</p>\n<p></p>\n<p>11 系统调用&#xff0c;中断</p>\n<p>通过分析<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">lab1_ex0</a>了解Linux应用的系统调用编写和含义。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex0.md</a></p>\n<p></p>\n<p>通过调试<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">lab1_ex1</a>了解Linux应用的系统调用执行过程。</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab1/lab1-ex1.md</a></p>\n<p></p>\n<p>如果能够比较顺利的完成上述题目&#xff0c;预估的考试成绩应该在95分以上</p>\n<p></p>\n<p>#pin</p>"}, {"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "【提示】学堂在线的OS考试复习用习题", "created": "2015-06-04T01:35:40Z", "content": "<p>倒序&#xff1a;</p>\n<p></p>\n<p>1. IO/磁盘系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/disksim-homework.md</a> 中的问题&#xff11;&#xff0c;&#xff12;</p>\n<p></p>\n<p>2. 文件系统</p>\n<p><a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md\">https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab8/sfs-homework.md</a></p>\n<p></p>\n<p>3. 死锁&#xff0f;银行家算法</p>\n<p></p>\n<p>每人用python实现<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py\">银行家算法</a>。大致输出可参考<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt\">参考输出</a>。除了<code>YOUR CODE</code>部分需要填写代码外&#xff0c;在算法的具体实现上&#xff0c;效率也不高&#xff0c;可进一步改进执行效率。</p>\n<p>银行家算法参考和需要补全的代码</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/bankers-homework.py</p>\n<p></p>\n<p>参考输出&#xff1a;</p>\n<p>https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/deadlock/example-output.txt</p>\n<p></p>\n<p></p>\n<p>4. 基于PV操作的同步互斥问题</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-2-spoc-pv-problems.md</a></p>\n<p>根据自己的精力&#xff0c;挑选一道完成</p>\n<p></p>\n<p>5. 同步互斥</p>\n<p><a href=\"https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md\">https://github.com/xuyongjiande/os_exercises/blob/master/all/07-1-spoc-discussion.md</a>　</p>\n<p>中的</p>\n<ol><li>\n<p>&#xff08;spoc&#xff09;阅读<a href=\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab7/lab7-spoc-exercise.md\">简化x86计算机模拟器的使用说明</a>&#xff0c;理解基于简化x86计算机的汇编代码。</p>\n</li><li>\n<p>&#xff08;spoc)了解race condition. 进入<a href=\"https://github.com/chyyuu/ucore_lab/tree/master/related_info/lab7/race-condition\">race-condition代码目录</a>。</p>\n</li></ol>\n<p> </p>\n<p>6. </p>"}], "type": "note", "tags": ["exam", "instructor-note", "课堂问答", "通知"], "tag_good": [], "unique_views": 415, "children": [], "tag_good_arr": [], "id": "iahih91ifj95oi", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 8, "num_favorites": 9, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167842275, "default_anonymity": "no"}, "error": null, "aid": "kyuzphibl1v5o0"}