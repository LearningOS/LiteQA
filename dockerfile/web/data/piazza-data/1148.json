{"result": {"folders": ["quiz3"], "nr": 1148, "data": {"embed_links": []}, "created": "2018-03-10T04:23:26Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "isvxeq6bspf1vn", "data": "jekv7dqp5hn74d", "type": "create", "when": "2018-03-10T04:23:26Z"}, {"anon": "no", "uid": "j9p3tttiDdhN", "data": "jel0cznacw92v8", "to": "jekv7dqn8ah74c", "type": "s_answer", "when": "2018-03-10T06:47:46Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jelj8kyjyoj79p", "type": "s_answer_update", "when": "2018-03-10T15:36:13Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "isvxeq6bspf1vn", "subject": "关于内联汇编中到底什么时候使用%%eax什么时候使用%eax的问题", "created": "2018-03-10T04:23:26Z", "content": "<p>想请教一下各位同学和老师&#xff0c;为什么内联汇编中的incl指令下需要使用“%eax”来表示eax寄存器&#xff0c;而movl指令下则需要使用“%%eax”来表示eax寄存器&#xff1f;</p>"}], "type": "question", "tags": ["quiz3", "student"], "tag_good": [], "unique_views": 112, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-03-10T06:47:46Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "id": "jel0czm3j032v6", "history": [{"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-10T15:36:13Z", "content": "<p>具体代码呢&#xff1f;</p>\n<p>没看到代码&#xff0c;我猜一下&#xff0c;一个是basic inline assembly, 一个是extended form of asm。</p>\n<p>区别就是前者是把汇编代码放在asm(&#34; &#34;)里&#xff0c;没有别的操作&#xff08;比如指定输入 输出等&#xff09;</p>\n<p>后者就可以指定输入输出约束&#xff0c;让编译器根据约束决定把局部变量放在哪个寄存器/栈上。</p>\n<p>两者的区别可以看一下CSAPP 的这个Web Aside&#xff1a;<a href=\"http://csapp.cs.cmu.edu/3e/waside/waside-embedded-asm.pdf\">http://csapp.cs.cmu.edu/3e/waside/waside-embedded-asm.pdf</a></p>\n<p>另外我记得以前piazza也有关于这个的讨论贴&#xff0c;你可以找一下。</p>\n<p></p>\n<p>twd2: 后者&#xff08;%%eax&#xff09;的第一个%是转义符&#xff0c;生成%eax。和指令没有关系。</p>"}, {"anon": "no", "uid": "j9p3tttiDdhN", "subject": "", "created": "2018-03-10T06:47:46Z", "content": "<p>具体代码呢&#xff1f;</p>\n<p>没看到代码&#xff0c;我猜一下&#xff0c;一个是basic inline assembly, 一个是extended form of asm。</p>\n<p>区别就是前者是把汇编代码放在asm(&#34; &#34;)里&#xff0c;没有别的操作&#xff08;比如指定输入 输出等&#xff09;</p>\n<p>后者就可以指定输入输出约束&#xff0c;让编译器根据约束决定把局部变量放在哪个寄存器/栈上。</p>\n<p>两者的区别可以看一下CSAPP 的这个Web Aside&#xff1a;<a href=\"http://csapp.cs.cmu.edu/3e/waside/waside-embedded-asm.pdf\">http://csapp.cs.cmu.edu/3e/waside/waside-embedded-asm.pdf</a></p>\n<p>另外我记得以前piazza也有关于这个的讨论贴&#xff0c;你可以找一下。</p>"}], "type": "s_answer", "tag_endorse_arr": [], "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "jekv7dqn8ah74c", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169236975, "default_anonymity": "no"}, "error": null, "aid": "kyv0jdnzpms1io"}