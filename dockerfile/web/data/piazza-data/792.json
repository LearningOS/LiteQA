{"result": {"folders": ["lab5"], "nr": 792, "data": {"embed_links": []}, "created": "2016-04-11T03:06:07Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-11T03:06:07Z", "data": "imvf3d3b10v3ps", "type": "create"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-11T10:50:14Z", "data": "imvvo7w4uz83ao", "type": "update"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-11T11:01:11Z", "data": "imvw2ae82jk1mz", "type": "update"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-11T11:01:38Z", "data": "imvw2vulsiy7eu", "type": "update"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-13T08:12:17Z", "data": "imykwss7vgf32s", "type": "update"}, {"uid": "i0nuu5yhgno5tv", "anon": "no", "when": "2016-04-17T10:31:42Z", "data": "in4fnhngqtf5p4", "type": "update"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-17T10:31:42Z", "content": "<p>向勇老师上课整理</p>\n<p>COW机制简单来说就是fork的时候&#xff0c;子进程和父进程共用相同的内存&#xff0c;只有在修改的时候&#xff0c;拷贝原有内存当做一份私有的&#xff0c;在私有的基础上修改。</p>\n<p>参考了以往的帖子。</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\">https://piazza.com/class/i5j09fnsl7k5x0?cid=485</a><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\" target=\"_blank\"></a></p>\n<p></p>\n<p>具体修改方法&#xff1a;</p>\n<pre>1. fork的时候&#xff0c;进行如下处理。\n\t1. VM_SHARE = 0&#xff0c;且页表P=1&#xff0c;将父进程的页表中的PTE_W记为0&#xff0c;这样这份内存只读不写。\n\t\t如果考虑换入换出&#xff0c;应该注意&#xff0c;该页不能被换出&#xff0c;不然页表会不一致&#xff0c;所以我采取的办法是将该页设置为不可换出。\n\t2. VM_SHARE = 0&#xff0c;且页表P=0&#xff0c;那么我们将页换入&#xff0c;然后按1和3做&#xff0c;或者也可以直接拷贝&#xff0c;并写入硬盘&#xff08;比较麻烦&#xff09;。\n\t3. VM_SHARE = 1&#xff0c;不用cow机制。<br />\t段机制在这里不是特别好处理&#xff0c;我认为vma的管理就可以一定程度上取代段机制。\n2. 访问的时候如果发现pagefault&#xff0c;查看error_code和对应vmm的权限&#xff0c;如果发现\n\t页存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们进行处理。\n\t\t1. VM_SHARE = 1&#xff0c;也就是说这块内存都是共享的&#xff0c;那么我们不应该对这块内存使用cow。\n\t\t2. VM_SHARE = 0&#xff0c;新建对应的页表。<br />\t页存在&#xff0c;写出错&#xff0c;vmm不可以写&#xff0c;那就是错误异常了。\n\t页不存在&#xff0c;写出错&#xff0c;vmm可以写\n\t\t那么我们应该先把这一页换进来&#xff0c;再进行上面处理。\n\n</pre>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-13T08:12:17Z", "content": "<p>向勇老师上课整理</p>\n<p>COW机制简单来说就是fork的时候&#xff0c;子进程和父进程共用相同的内存&#xff0c;只有在修改的时候&#xff0c;拷贝原有内存当做一份私有的&#xff0c;在私有的基础上修改。</p>\n<p>参考了以往的帖子。</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\">https://piazza.com/class/i5j09fnsl7k5x0?cid=485</a><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\" target=\"_blank\"></a></p>\n<p></p>\n<p>具体修改方法&#xff1a;由于challenge还没做- -&#xff0c;等做完了可能再来补充有没有坑。</p>\n<p>不考虑换入换出。</p>\n<pre>1. fork的时候&#xff0c;进行如下处理。\n\t1. VM_SHARE = 0&#xff0c;且页表P=1&#xff0c;将父进程的页表中的PTE_W记为0&#xff0c;这样这份内存只读不写。<br />\t\t如果考虑换入换出&#xff0c;应该注意&#xff0c;该页不能被换出&#xff0c;不然页表会不一致。\n\t2. VM_SHARE = 0&#xff0c;且页表P=0&#xff0c;那么我们将页换入&#xff0c;然后按1和3做&#xff0c;或者也可以直接拷贝&#xff0c;并写入硬盘&#xff08;比较麻烦&#xff09;。\n\t3. VM_SHARE = 1&#xff0c;不用cow机制。\n2. 访问的时候如果发现pagefault&#xff0c;查看error_code和对应vmm的权限&#xff0c;如果发现\n\terror_code : <br />\t页存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们进行处理。\n\t\t1. VM_SHARE = 1&#xff0c;也就是说这块内存都是共享的&#xff0c;那么我们不应该对这块内存使用cow。\n\t\t2. VM_SHARE = 0&#xff0c;新建对应的页表。\n\terror_code : <br />\t页不存在&#xff0c;写出错&#xff0c;vmm可以写<br />\t\t那么我们应该先把这一页换进来&#xff0c;再进行上面处理。\n\n</pre>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-11T11:01:38Z", "content": "<p>向勇老师上课整理</p>\n<p>COW机制简单来说就是fork的时候&#xff0c;子进程和父进程共用相同的内存&#xff0c;只有在修改的时候&#xff0c;拷贝原有内存当做一份私有的&#xff0c;在私有的基础上修改。</p>\n<p>参考了以往的帖子。</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\">https://piazza.com/class/i5j09fnsl7k5x0?cid=485</a><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\" target=\"_blank\"></a></p>\n<p></p>\n<p>具体修改方法&#xff1a;由于challenge还没做- -&#xff0c;等做完了可能再来补充有没有坑。</p>\n<pre>1. fork的时候&#xff0c;进行如下处理。\n\t1. VM_SHARE = 0&#xff0c;且页表P=1&#xff0c;将父进程的页表中的PTE_W记为0&#xff0c;这样这份内存只读不写。\n\t2. VM_SHARE = 0&#xff0c;且页表P=0&#xff0c;那么我们将页换入&#xff0c;然后按1和3做&#xff0c;或者也可以直接拷贝&#xff0c;并写入硬盘&#xff08;比较麻烦&#xff09;。\n\t3. VM_SHARE = 1&#xff0c;不用cow机制。\n2. 访问的时候如果发现pagefault&#xff0c;查看error_code和对应vmm的权限&#xff0c;如果发现\n\terror_code : 页存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们进行处理。\n\t\t1. VM_SHARE = 1&#xff0c;也就是说这块内存都是共享的&#xff0c;那么我们不应该对这块内存使用cow。\n\t\t2. VM_SHARE = 0&#xff0c;新建对应的页表。\n\terror_code : 页不存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们应该先把这一页换进来&#xff0c;再进行上面处理。\n\n</pre>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-11T11:01:11Z", "content": "<p>向勇老师上课整理</p>\n<p>COW机制简单来说就是fork的时候&#xff0c;子进程和父进程共用相同的内存&#xff0c;只有在修改的时候&#xff0c;拷贝原有内存当做一份私有的&#xff0c;在私有的基础上修改。</p>\n<p>参考了以往的帖子。</p>\n<p><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\">https://piazza.com/class/i5j09fnsl7k5x0?cid=485</a><a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=485\" target=\"_blank\"></a></p>\n<p></p>\n<p>具体修改方法&#xff1a;</p>\n<pre>1. fork的时候&#xff0c;进行如下处理。<br />\t1. VM_SHARE = 0&#xff0c;且页表P=1&#xff0c;将父进程的页表中的PTE_W记为0&#xff0c;这样这份内存只读不写。<br />\t2. VM_SHARE = 0&#xff0c;且页表P=0&#xff0c;那么我们将页换入&#xff0c;然后按1和3做&#xff0c;或者也可以直接拷贝&#xff0c;并写入硬盘&#xff08;比较麻烦&#xff09;。<br />\t3. VM_SHARE = 1&#xff0c;不用cow机制。<br />2. 访问的时候如果发现pagefault&#xff0c;查看error_code和对应vmm的权限&#xff0c;如果发现<br />\terror_code : 页存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们进行处理。<br />\t\t1. VM_SHARE = 1&#xff0c;也就是说这块内存都是共享的&#xff0c;那么我们不应该对这块内存使用cow。<br />\t\t2. VM_SHARE = 0&#xff0c;新建对应的页表。<br />\terror_code : 页不存在&#xff0c;写出错&#xff0c;vmm可以写&#xff0c;那么我们应该先把这一页换进来&#xff0c;再进行上面处理。<br /><br /></pre>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-11T10:50:14Z", "content": "<p>向勇老师上课整理</p>\n<p>COW机制简单来说就是fork的时候&#xff0c;子进程和父进程共用相同的内存&#xff0c;只有在修改的时候</p>"}, {"anon": "no", "uid": "i0nuu5yhgno5tv", "subject": "cow机制", "created": "2016-04-11T03:06:07Z", "content": "<p>向勇老师上课整理</p>"}], "type": "note", "tags": ["lab5", "student"], "tag_good": [{"role": "student", "name": "叶子鹏", "endorser": {}, "admin": false, "photo": null, "id": "i0f24oie8102cr", "photo_url": null, "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 139, "children": [], "tag_good_arr": ["i0f24oie8102cr"], "id": "imvf3d3977k3pr", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 3, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168530601, "default_anonymity": "no"}, "error": null, "aid": "kyv048mhnaj5jp"}