{"result": {"folders": ["lecture18"], "nr": 1223, "data": {"embed_links": []}, "created": "2018-05-14T04:39:07Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "isvxeq6bspf1vn", "data": "jh5rdx4v9vc22x", "type": "create", "when": "2018-05-14T04:39:07Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "isvxeq6bspf1vn", "subject": "关于“管程属于语言特性&#xff0c;由编译器提供支持&#xff0c;c语言不支持它”的理解", "created": "2018-05-14T04:39:07Z", "content": "<p></p><p>管程是一种程序结构&#xff0c;结构内的多个子程序&#xff08;对象或模块&#xff09;形成的多个工作线程互斥访问共享资源。在Java程序设计语言中&#xff0c;每个对象都可以作为一个管程。需要互斥使用的方法必须明确标示关键字synchronized。代码块也可以标示关键字synchronized。这种方法已经被其它程序设计语言使用&#xff0c;如C#。但C语言没有在语言层面有类似sync关键字的支持和对producure的自动lock/unlock等扩展&#xff0c;需要在procedure中由程序员手写 lock, unlock等各种细节。 所以我们可理解C没有管程的语言支持。</p>\n<p></p>\n<p>有同学提到IOS系统中C语言中可以使用的dispatch&#xff08;GCD&#xff09;同步机制&#xff0c;以及pthread库&#xff0c;他们都属于用户态的library的支持&#xff0c;而不是C语言级的支持。其中的dispatch是一个很强大的队列管理库&#xff0c;它能够支持实现信号量机制; pthread可以通过pthread_cond_init&#xff0c;pthread_cond_signal&#xff0c;pthread_cond_wait来实现条件变量的创建&#xff0c;释放&#xff0c;等待&#xff0c;但是也只能够支持到CV层级&#xff0c;依旧不能算是管程的语言支持。</p>\n<p></p>\n<p>感兴趣的同学可以参见我在 <a href=\"https://www.piazza.com/class/i5j09fnsl7k5x0?cid=391\">https://piazza.com/class/i5j09fnsl7k5x0?cid=391</a> 上的关于生产消费者问题、读者写者问题的信号量&#xff0c;管程实现&#xff0c;以了解pthread以及dispatch机制的具体实现</p>"}], "type": "note", "tags": ["lecture18", "student"], "tag_good": [], "unique_views": 120, "children": [], "tag_good_arr": [], "id": "jh5rdx4skub22w", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 1, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169450881, "default_anonymity": "no"}, "error": null, "aid": "kyv0nyptfre3tv"}