{"result": {"folders": ["exam", "2018"], "nr": 1238, "data": {"embed_links": []}, "created": "2018-06-05T04:31:47Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "i76z9sx78G8", "data": "ji16t8ei6oy1ob", "type": "create", "when": "2018-06-05T04:31:47Z"}, {"anon": "no", "uid": "i76z9sx78G8", "to": "ji16t8ehatr1oa", "type": "followup", "when": "2018-06-05T04:36:41Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "ji1gbmhmyjj5zp", "type": "update", "when": "2018-06-05T08:58:02Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "期末试题 get_pte 答案讨论", "created": "2018-06-05T08:58:02Z", "content": "<p></p>\n<blockquote>\n<blockquote>\n<div></div>\n<div>有同学讨论get_pte 第25.2 空的答案能否填0xffffffff&#xff0c;以下是同学的观点&#xff08;部分信息隐去&#xff09;&#xff1a;</div>\n<div></div>\n<div>您好&#xff01;我是您班上学生&#xff0c;想确认下填空题25.2的答案是否也可以是0xffffffff&#xff08;这也是我在考试中的作答&#xff0c;但lab_answer给的是PTE_P&#xff0c;不知道判卷的时候怎么判的……&#xff09;&#xff1a;</div>\n<div><img height=\"340\" width=\"768\" src=\"https://mail.google.com/mail/u/0?ui=2&amp;ik=5f8a449139&amp;attid=0.1.1&amp;permmsgid=msg-f:1602400879329960266&amp;th=163cdf1c203c614a&amp;view=fimg&amp;sz=w1600-h1000&amp;attbid=ANGjdJ-5enB71qGA4PmFrhYyLCCYu-g-vs-HufZUKDkGCjN0QS5vZUPD9OVyfJT2X-51XlBpPa5TxjfXh0Y5WxFKPoShcbf-BzgH3svcOkujbCmmFFdMJkOX6-mpytM&amp;disp=emb\" /></div>\n<div>我认为在ucore下是可以的。首先0xffffffff意味着*pdep要所有位全0才会执行if&#xff0c;标准答案PTE_P则是*pdep的P位为0就执行&#xff0c;我的作答似乎约束更强。</div>\n<div>但事实上&#xff0c;并不存在标答执行&#xff08;P位=0&#xff09;&#xff0c;我的不执行情况&#xff08;其他位非零&#xff09;&#xff0c;因为ucore中若*pdep的P位为0&#xff0c;则所有位都为0。这是由于*pdep一开始初始化被memset为全0&#xff0c;而且一旦赋值&#xff0c;P位就变为1&#xff0c;而且不会再变为0。因为二级页表一旦被设置&#xff0c;是不会被换出的。否则get_pte函数就需要对这类情况特殊处理&#xff0c;而不是一概分配一个新的page。</div>\n<div>另外也可以在代码中看到&#xff0c;新建二级页表时&#xff0c;并没有调用swap_map_swappable&#xff0c;只是调用了底层的alloc_page()函数&#xff1a;if (!create || (page = alloc_page()) == NULL) 。而在do_pgfault函数中&#xff0c;新建页表项是有调用的&#xff1a;</div>\n<div>\n<div>   </div>\n<div>    if (*ptep == 0) { // if the phy addr isn&#39;t exist, then alloc a page &amp; map the phy addr with logical addr</div>\n<div>        if (pgdir_alloc_page(mm-&gt;pgdir, addr, perm) == NULL) {</div>\n<div>            cprintf(&#34;pgdir_alloc_page in do_pgfault failed\\n&#34;);</div>\n<div>            goto failed;</div>\n<div>        }</div>\n<div>    }</div>\n<div>    else {</div>\n</div>\n<div>\n<div>        if(swap_init_ok) {</div>\n<div>            struct Page *page=NULL;</div>\n<div>            if ((ret = swap_in(mm, addr, &amp;page)) != 0) {</div>\n<div>                cprintf(&#34;swap_in in do_pgfault failed\\n&#34;);</div>\n<div>                goto failed;</div>\n<div>            }    </div>\n<div>            page_insert(mm-&gt;pgdir, page, addr, perm);</div>\n<div>            swap_map_swappable(mm, addr, page, 1);</div>\n<div>            page-&gt;pra_vaddr = addr;</div>\n<div>        }</div>\n</div>\n<div>上面两个分支分别是pte不存在和被换出两种情况&#xff0c;都在高亮地方调用了swap_map_swappable。&#xff08;pgdir_alloc_page里调用了swap_map_swappable&#xff09;。因此页表项会被换出&#xff0c;但是二级页表不会。</div>\n<div>实验发现这样做是没有问题的&#xff0c;lab8测试结果&#xff0c;测试通过&#xff08;除去priority&#xff0c;它经常失败&#xff09;</div>\n<div></div>\n<div></div>\n</blockquote>\n</blockquote>"}, {"anon": "no", "uid": "i76z9sx78G8", "subject": "期末试题 get_pte 答案讨论", "created": "2018-06-05T04:31:47Z", "content": "<p></p><blockquote>\n<blockquote>\n<div> </div>\n<div>有同学讨论get_pte 第25.2 空的答案能否填0xffffffff&#xff0c;以下是同学的观点&#xff08;部分信息隐去&#xff09;&#xff1a;</div>\n<div></div>\n<div>您好&#xff01;我是您班上学生&#xff0c;想确认下填空题25.2的答案是否也可以是0xffffffff&#xff08;这也是我在考试中的作答&#xff0c;但lab_answer给的是PTE_P&#xff0c;不知道判卷的时候怎么判的……&#xff09;&#xff1a;</div>\n<div> <img height=\"340\" width=\"768\" src=\"https://mail.google.com/mail/u/0?ui=2&amp;ik=5f8a449139&amp;attid=0.1.1&amp;permmsgid=msg-f:1602400879329960266&amp;th=163cdf1c203c614a&amp;view=fimg&amp;sz=w1600-h1000&amp;attbid=ANGjdJ-5enB71qGA4PmFrhYyLCCYu-g-vs-HufZUKDkGCjN0QS5vZUPD9OVyfJT2X-51XlBpPa5TxjfXh0Y5WxFKPoShcbf-BzgH3svcOkujbCmmFFdMJkOX6-mpytM&amp;disp=emb\" /></div>\n<div> 我认为在ucore下是可以的。首先0xffffffff意味着*pdep要所有位全0才会执行if&#xff0c;标准答案PTE_P则是*pdep的P位为0就执行&#xff0c;我的作答似乎约束更强。</div>\n<div> 但事实上&#xff0c;并不存在标答执行&#xff08;P位=0&#xff09;&#xff0c;我的不执行情况&#xff08;其他位非零&#xff09;&#xff0c;因为ucore中若*pdep的P位为0&#xff0c;则所有位都为0。这是由于*pdep一开始初始化被memset为全0&#xff0c;而且一旦赋值&#xff0c;P位就变为1&#xff0c;而且不会再变为0。因为二级页表一旦被设置&#xff0c;是不会被换出的。否则get_pte函数就需要对这类情况特殊处理&#xff0c;而不是一概分配一个新的page。</div>\n<div> 另外也可以在代码中看到&#xff0c;新建二级页表时&#xff0c;并没有调用swap_map_swappable&#xff0c;只是调用了底层的alloc_page()函数&#xff1a;if (!create || (page = alloc_page()) == NULL) 。而在do_pgfault函数中&#xff0c;新建页表项是有调用的&#xff1a;</div>\n<div>\n<div>   </div>\n<div>    if (*ptep == 0) { // if the phy addr isn&#39;t exist, then alloc a page &amp; map the phy addr with logical addr</div>\n<div>        if (pgdir_alloc_page(mm-&gt;pgdir, addr, perm) == NULL) {</div>\n<div>            cprintf(&#34;pgdir_alloc_page in do_pgfault failed\\n&#34;);</div>\n<div>            goto failed;</div>\n<div>        }</div>\n<div>    }</div>\n<div>    else {</div>\n</div>\n<div>\n<div>        if(swap_init_ok) {</div>\n<div>            struct Page *page=NULL;</div>\n<div>            if ((ret = swap_in(mm, addr, &amp;page)) != 0) {</div>\n<div>                cprintf(&#34;swap_in in do_pgfault failed\\n&#34;);</div>\n<div>                goto failed;</div>\n<div>            }    </div>\n<div>            page_insert(mm-&gt;pgdir, page, addr, perm);</div>\n<div>            swap_map_swappable(mm, addr, page, 1);</div>\n<div>            page-&gt;pra_vaddr = addr;</div>\n<div>        }</div>\n</div>\n<div> 上面两个分支分别是pte不存在和被换出两种情况&#xff0c;都在高亮地方调用了swap_map_swappable。&#xff08;pgdir_alloc_page里调用了swap_map_swappable&#xff09;。因此页表项会被换出&#xff0c;但是二级页表不会。</div>\n<div> 实验发现这样做是没有问题的&#xff0c;lab8测试结果&#xff0c;测试通过&#xff08;除去priority&#xff0c;它经常失败&#xff09;</div>\n<div></div>\n<div></div>\n</blockquote>\n</blockquote>"}], "type": "note", "tags": ["2018", "exam", "instructor-note"], "tag_good": [], "unique_views": 309, "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p></p><p>答案0xffffffff 放宽了执行条件&#xff0c;虽然在实验的代码中测试能够通过&#xff0c;但是原则上是不对的。但是该学生乐于探索&#xff0c;且能够自圆其说&#xff0c;因此此次0xffffffff给分</p>", "created": "2018-06-05T04:36:41Z", "bucket_order": 97, "bucket_name": "Week 6/3 - 6/9", "type": "followup", "tag_good": [], "uid": "i76z9sx78G8", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "ji16zj0twpj2uf", "updated": "2018-06-05T04:36:41Z", "config": {}}], "tag_good_arr": [], "id": "ji16t8ehatr1oa", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 2, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169478626, "default_anonymity": "no"}, "error": null, "aid": "kyv0ok4ivbv6t4"}