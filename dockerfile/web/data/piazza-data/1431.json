{"result": {"folders": ["2020", "lecture10", "课堂问答"], "nr": 1431, "data": {"embed_links": []}, "created": "2020-03-23T01:16:11Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "hdjonbiyfs62ie", "data": "k83s4cfc6ky1o8", "type": "create", "when": "2020-03-23T01:16:11Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "关于第一个内核线程和第一个用户进程的创建和进程切换的讨论汇总", "created": "2020-03-23T01:16:11Z", "content": "<md>操作系统的原理和实现之间存在巨大的差别&#xff0c;这就是为什么“原理我都懂&#xff0c;但看到内核代码就一头雾水”。充分学习前人的代码&#xff0c;对同学们真正掌握操作系统的原理&#xff0c;是必要的。为了方便大家理解操作系统中的第一个内核线程和第一个用户进程是如何创建和启动的&#xff0c;我在下面汇总了piazza上中与此相关的一些讨论记录。希望对大家有帮助。\n\n## 关于第一个内核线程和第一个用户进程的创建和进程切换的讨论汇总\n\n### 简洁和准确的第一次线程切换描述\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=1044\n理解Lab4中的第一次线程切换\n\n### 线程切换过程分析和跟踪\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=1196\n进程切换的动态跟踪\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=331\nlab4中do_fork()函数具体如何产生一个新的内核线程的gdb过程展示\n\n### 线程切换相关的深入讨论\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=1192\n为什么交换了上下文后还需要设置中断栈?\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=1049\n【lab4】proc_run中的中断开闭问题\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=1029\nswitch_to 是否有必要保存 eip\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=942\n关于内核线程之间调度的问题\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=760\n关于forkret的地址问题\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=754\n关于idleproc和initproc切换时的通用寄存器恢复问题\n\nhttps://piazza.com/class/i5j09fnsl7k5x0?cid=311\nkernel_thread中设置的tf_regs.reg_ebx和 tf_regs.reg_edx是何时保存在相应寄存器中的?</md>"}], "type": "note", "tags": ["2020", "instructor-note", "lecture10", "课堂问答"], "tag_good": [], "unique_views": 168, "children": [], "tag_good_arr": [], "id": "k83s4cdj1nn1o3", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 2, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643170026964, "default_anonymity": "no"}, "error": null, "aid": "kyv10b84ypn1q9"}