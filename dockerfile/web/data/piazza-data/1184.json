{"result": {"folders": ["lab1"], "nr": 1184, "data": {"embed_links": []}, "created": "2018-03-31T09:20:48Z", "bucket_order": 3, "no_answer_followup": 1, "change_log": [{"anon": "no", "uid": "j9p3tttiDdhN", "data": "jff62ohory23nu", "type": "create", "when": "2018-03-31T09:20:48Z"}, {"anon": "no", "uid": "iswk6782g923e6", "data": "jffaxycbuz3486", "to": "jff62ohkxui3nt", "type": "s_answer", "when": "2018-03-31T11:37:05Z"}, {"anon": "no", "uid": "j9p3tttiDdhN", "to": "jff62ohkxui3nt", "type": "followup", "when": "2018-03-31T11:53:29Z"}, {"anon": "no", "uid": "iswk6782g923e6", "to": "jff62ohkxui3nt", "type": "feedback", "when": "2018-03-31T12:08:21Z"}, {"anon": "no", "uid": "j9p3tttiDdhN", "to": "jff62ohkxui3nt", "type": "feedback", "when": "2018-03-31T12:11:29Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "data": "jffqms2jm416m8", "type": "s_answer_update", "when": "2018-03-31T18:56:18Z"}, {"anon": "no", "uid": "isu0wqaoff5125", "to": "jff62ohkxui3nt", "type": "feedback", "when": "2018-03-31T18:57:23Z"}, {"anon": "no", "uid": "j1ez2n70KtR", "to": "jff62ohkxui3nt", "type": "followup", "when": "2018-12-01T08:15:48Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "j9p3tttiDdhN", "subject": "关于Lab1 Challenge部分的问题", "created": "2018-03-31T09:20:48Z", "content": "<p>Lab1 Challenge部分的答案代码有一些看不懂。</p>\n<p>首先第一个问题&#xff0c;kern_init代码应该是执行在内核态的吧&#xff1f;那么在切换到用户态后&#xff0c;CS 都改成用户态的了&#xff0c;如何继续执行剩下的代码&#xff1f;lab1_switch_to_user之类的</p>\n<p></p>\n<p>第二个问题&#xff0c;init.c Challenge部分添加的 movl %ebp, %esp有什么用&#xff1f;</p>\n<p></p>\n<p>第三个问题&#xff0c;在具体的中断处理代码处&#xff0c;处理切换到用户态中断&#xff0c;switchk2u.tf_esp = (uint32_t)tf &#43; sizeof(struct trapframe) - 8; 把esp设置为内核栈的地址&#xff0c;是否可行&#xff1f;</p>\n<p></p>\n<p>以及最后把switchk2u放进去&#xff0c;利用后面会执行的popl %esp指令&#xff0c;使得esp变为switchk2u的地址&#xff0c;这一步骤看的好晕。这样做确定没有问题吗&#xff1f;&#xff08;具体switchk2u会存放在哪里&#xff1f;哪个地址在执行popl %esp时是否还有效&#xff1f;&#xff09;</p>\n<p></p>\n<p>以及iret具体是怎么做的&#xff1f;</p>\n<p></p>\n<p></p>\n<p>关于这些有没有更加详细的资料&#xff1f;对着几十行代码看了几个小时还是很多疑问。</p>"}], "type": "question", "tags": ["lab1", "student"], "tag_good": [{"role": "", "name": "Jason Yu", "endorser": {}, "admin": false, "photo": null, "id": "iswk6782g923e6", "photo_url": null, "published": true, "us": false, "class_sections": ["os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 188, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-03-31T11:37:05Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "孟永康", "endorser": {}, "admin": false, "photo": null, "id": "j9p3tttiDdhN", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "Zekun", "endorser": {}, "admin": false, "photo": null, "id": "jfcbmpncHHL7", "photo_url": null, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "jffaxyc61r6485", "history": [{"anon": "no", "uid": "isu0wqaoff5125", "subject": "", "created": "2018-03-31T18:56:18Z", "content": "<p><b>第一个问题</b></p>\n<p>内核加载后在pmm_init函数里重设了GDT&#xff1a;</p>\n<pre>static struct segdesc gdt[] = {\n    SEG_NULL,\n    [SEG_KTEXT] = SEG(STA_X | STA_R, 0x0, 0xFFFFFFFF, DPL_KERNEL),\n    [SEG_KDATA] = SEG(STA_W, 0x0, 0xFFFFFFFF, DPL_KERNEL),\n    [SEG_UTEXT] = SEG(STA_X | STA_R, 0x0, 0xFFFFFFFF, DPL_USER),\n    [SEG_UDATA] = SEG(STA_W, 0x0, 0xFFFFFFFF, DPL_USER),\n    [SEG_TSS]    = SEG_NULL,\n};</pre>\n<p>可以看到&#xff0c;这里对内核和用户设置了不同的GDT entry&#xff0c;它们的DPL不一样&#xff0c;但是其他字段都完全相同。</p>\n<p></p>\n<p>KERNEL_CS和USER_CS这两个段选择子不只是RPL这个字段有差别&#xff0c;它们的GDT index不同&#xff1a;</p>\n<pre>#define KERNEL_CS    ((GD_KTEXT) | DPL_KERNEL)\n#define KERNEL_DS    ((GD_KDATA) | DPL_KERNEL)\n#define USER_CS        ((GD_UTEXT) | DPL_USER)\n#define USER_DS        ((GD_UDATA) | DPL_USER)</pre>\n<p></p>\n<p>所以在用户态时只要cs寄存器里是USER_CS&#xff0c;它就能够执行继续执行剩下的代码。</p>\n<p></p>\n<p>twd2:</p>\n<p></p>\n<p>1. 是。剩下的代码没有涉及到特权指令&#xff0c;为何不能执行&#xff1f;</p>\n<p>2. 我的实现中就没有使用。</p>\n<p>3. 需要设置为当前栈的地址&#xff08;虽然当前也是内核态&#xff0c;但是我觉得您说的内核栈是另外那一个&#xff09;&#xff0c;否则回到用户态之后栈变了&#xff0c;无法继续执行。</p>\n<p></p>\n<p>iret的具体操作见Intel手册伪代码&#xff08;有些长&#xff09;&#xff0c;或者参考我的实验报告&#xff1a;https://github.com/twd2/ucore_os_lab。</p>\n<p></p>"}, {"anon": "no", "uid": "iswk6782g923e6", "subject": "", "created": "2018-03-31T11:37:05Z", "content": "<p><b>第一个问题</b></p>\n<p>内核加载后在pmm_init函数里重设了GDT&#xff1a;</p>\n<pre>static struct segdesc gdt[] = {\n    SEG_NULL,\n    [SEG_KTEXT] = SEG(STA_X | STA_R, 0x0, 0xFFFFFFFF, DPL_KERNEL),\n    [SEG_KDATA] = SEG(STA_W, 0x0, 0xFFFFFFFF, DPL_KERNEL),\n    [SEG_UTEXT] = SEG(STA_X | STA_R, 0x0, 0xFFFFFFFF, DPL_USER),\n    [SEG_UDATA] = SEG(STA_W, 0x0, 0xFFFFFFFF, DPL_USER),\n    [SEG_TSS]    = SEG_NULL,\n};</pre>\n<p>可以看到&#xff0c;这里对内核和用户设置了不同的GDT entry&#xff0c;它们的DPL不一样&#xff0c;但是其他字段都完全相同。</p>\n<p></p>\n<p>KERNEL_CS和USER_CS这两个段选择子不只是RPL这个字段有差别&#xff0c;它们的GDT index不同&#xff1a;</p>\n<pre>#define KERNEL_CS    ((GD_KTEXT) | DPL_KERNEL)\n#define KERNEL_DS    ((GD_KDATA) | DPL_KERNEL)\n#define USER_CS        ((GD_UTEXT) | DPL_USER)\n#define USER_DS        ((GD_UDATA) | DPL_USER)</pre>\n<p></p>\n<p>所以在用户态时只要cs寄存器里是USER_CS&#xff0c;它就能够执行继续执行剩下的代码。</p>\n<p></p>"}], "type": "s_answer", "tag_endorse_arr": ["j9p3tttiDdhN", "jfcbmpncHHL7"], "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>请问这是不是说&#xff0c;内核态和用户态的堆栈、代码空间都是一样的&#xff0c;只是特权级不同&#xff1f;</p>", "created": "2018-03-31T11:53:29Z", "bucket_order": 105, "bucket_name": "Week 3/25 - 3/31", "type": "followup", "tag_good": [], "uid": "j9p3tttiDdhN", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>ucore里面应该是这样的。同样的逻辑地址在内核态和用户态对应的线性地址是一样的。</p>", "created": "2018-03-31T12:08:21Z", "bucket_order": 105, "bucket_name": "Week 3/25 - 3/31", "type": "feedback", "tag_good": [], "uid": "iswk6782g923e6", "children": [], "tag_good_arr": [], "id": "jffc25csooq7fo", "updated": "2018-03-31T12:08:21Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>好的&#xff0c;非常感谢您回答了我的第一个和第三个问题&#xff01;</p>", "created": "2018-03-31T12:11:29Z", "bucket_order": 105, "bucket_name": "Week 3/25 - 3/31", "type": "feedback", "tag_good": [], "uid": "j9p3tttiDdhN", "children": [], "tag_good_arr": [], "id": "jffc66gpsd710w", "updated": "2018-03-31T12:11:29Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>只在这个challenge是这样。</p>", "created": "2018-03-31T18:57:23Z", "bucket_order": 105, "bucket_name": "Week 3/25 - 3/31", "type": "feedback", "tag_good": [], "uid": "isu0wqaoff5125", "children": [], "tag_good_arr": [], "id": "jffqo6a4sp0774", "updated": "2018-03-31T18:57:23Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "jffbj17q5cs1yc", "updated": "2018-03-31T11:53:29Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>对于问题2</p>\n<p></p>\n<p>查看最后生成的汇编文件</p>\n<p></p>\n<pre>001001d0 &lt;lab1_switch_to_kernel&gt;:\n\nstatic void\nlab1_switch_to_kernel(void) {\n  1001d0:\t55                   \tpush   %ebp\n  1001d1:\t89 e5                \tmov    %esp,%ebp\n    //LAB1 CHALLENGE 1 :  TODO\n\tasm volatile (\n  1001d3:\tcd 79                \tint    $0x79\n  1001d5:\t89 ec                \tmov    %ebp,%esp\n\t\t&#34;movl %%ebp, %%esp \\n&#34;\n\t\t:\n\t\t: &#34;i&#34;(T_SWITCH_TOK)\n\t);\n\n}\n  1001d7:\t5d                   \tpop    %ebp\n  1001d8:\tc3                   \tret    </pre>\n<p>事实上&#xff0c;每个函数的标准开头都是%ebp入栈&#xff0c;%ebp保存%esp内容&#xff0c;形成所谓的函数调用栈。</p>\n<p></p>\n<p>但是&#xff0c;既然开头做了处理&#xff0c;结尾就要复原回去&#xff0c;这就是leave指令要做的事情</p>\n<p></p>\n<p>查看汇编&#xff0c;发现这里gcc加了一个pop %ebp</p>\n<p></p>\n<p>在上面的内联汇编&#xff0c;加上 mov %ebp,%esp</p>\n<p></p>\n<p>刚好发挥leave的作用&#xff0c;整个函数就完整了&#xff0c;可以避免后面出现其他错误</p>", "created": "2018-12-01T08:15:48Z", "bucket_order": 70, "bucket_name": "Week 11/25 - 12/1", "type": "followup", "tag_good": [], "uid": "j1ez2n70KtR", "children": [], "tag_good_arr": [], "no_answer": 1, "id": "jp56msiomg26mi", "updated": "2018-12-01T08:15:48Z", "config": {}}], "tag_good_arr": ["iswk6782g923e6"], "no_answer": 0, "id": "jff62ohkxui3nt", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 5, "num_favorites": 0, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169349011, "default_anonymity": "no"}, "error": null, "aid": "kyv0ls43gul2vi"}