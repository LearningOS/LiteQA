{"result": {"history_size": 1, "folders": ["视频纠错"], "nr": 225, "data": {"embed_links": []}, "created": "2015-04-01T14:11:54Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-01T14:11:54Z", "data": "i7ytb9a11xd57b", "type": "create"}, {"to": "i7ytb99l94t57a", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-04-01T14:20:44Z", "data": "i7ytmm5q6pf723", "type": "i_answer"}, {"to": "i7ytb99l94t57a", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-01T14:34:40Z", "type": "followup"}, {"to": "i7ytb99l94t57a", "uid": "hcrrjuyequh4bt", "anon": "no", "when": "2015-04-01T14:45:02Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-01T15:02:41Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-01T15:06:20Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-01T15:17:49Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2015-04-01T15:34:30Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "uid": "i6t7nhkesez6wr", "anon": "no", "when": "2015-04-02T10:33:59Z", "type": "feedback"}, {"to": "i7ytb99l94t57a", "anon": "stud", "when": "2015-04-04T04:37:46Z", "type": "feedback", "uid_a": "a_0"}, {"to": "i7ytb99l94t57a", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2015-04-04T07:50:55Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "i6t7nhkesez6wr", "subject": "时间置换算法以及其改进算法的理解", "created": "2015-04-01T14:11:54Z", "content": "<p>对于访问位&#xff0c;时间置换算法是置换时将新的页的访问位初始为0&#xff0c;那么时间置换算法的改进算法中&#xff0c;访问位是否也是初始化为0。在视频9.3 中12分48秒处&#xff0c;访问e时发生缺页&#xff0c;会置换页面c&#xff0c;此时e的访问位变成1&#xff0c;是否有错&#xff1f;</p>"}], "type": "question", "tags": ["student", "视频纠错"], "tag_good": [{"role": "instructor", "name": "Yu Chen", "endorser": {}, "admin": true, "photo": "1378950179_35.png", "id": "hcrrjuyequh4bt", "photo_url": "https://cdn-uploads.piazza.com/photos/hcrrjuyequh4bt/1378950179_35.png", "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "unique_views": 109, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2015-04-01T14:20:44Z", "bucket_order": 3, "tag_endorse": [{"role": "instructor", "name": "Yong XIANG", "endorser": {}, "admin": true, "photo": null, "id": "hdjonbiyfs62ie", "photo_url": null, "us": false, "class_sections": ["课程设计_i5j09fnsl7k5x0", "清华学生_i5j09fnsl7k5x0", "所有老师和助教_i5j09fnsl7k5x0", "os2018spring_i5j09fnsl7k5x0"], "facebook_id": null}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hcrrjuyequh4bt", "subject": "", "created": "2015-04-01T14:20:44Z", "content": "<p>这个问题很好&#xff01;我觉得向老师讲的原理没错&#xff0c;只是没说细节&#xff08;这也不是原理部分必须的&#xff09;。我的理解是&#xff1a;</p>\n<p>有一个基本原则&#xff0c;os把访问位置0&#xff0c; 硬件把访问位置1.</p>\n<p>具体过程如下:</p>\n<p>某指令IA访问e发生缺页后&#xff0c;缺页中断&#xff08;异常&#xff09;服务例程将置换c&#xff0c;然后此时对应的页表项表示的是e了&#xff0c;但e的访问位为0. </p>\n<p>再然后&#xff0c;缺页中断&#xff08;异常&#xff09;服务例程会返回到产生异常访问的指令IA处&#xff0c;重新执行此指令IA。</p>\n<p>此时&#xff0c;这条指令会成功执行&#xff0c;然后硬件会把把对应的页表项的访问位置1.</p>\n<p></p>\n<p>如果想确认&#xff0c;把lab3的clock算法实现一下&#xff08;属于challenge练习&#xff09;&#xff0c;会有更深入的实际体会。</p>\n<p></p>"}], "type": "i_answer", "tag_endorse_arr": ["hdjonbiyfs62ie"], "children": [], "id": "i7ytmm5nbwy722", "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>但是这就和视频11分5秒的那个双向循环表的示意图有出入了。11分5秒时&#xff0c;要将page 5置换出去&#xff0c;换进来page 6&#xff0c;可是这时候page 6的访问位和修改位都没有改变&#xff0c;还是0&#xff0c;这时指针并没有指向下一个页面&#xff08;为什么&#xff1f;算是第二个问题&#xff0c;这样会有问题的&#xff0c;第二次缺页的时候因为指针没有移动&#xff0c;就会把当前的页面&#xff08;page 6&#xff09;直接换出去了.&#xff09;。今天我也是自己写了一个小程序想实现一下算法&#xff08;不是lab3的challenge练习&#xff09;&#xff0c;加深一下印象&#xff0c;所以去认真对比了一下视频讲的&#xff0c;感觉跟我理解的有点出入&#xff0c;所以才会疑惑。</p>", "created": "2015-04-01T14:34:40Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "followup", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>能把你的小程序给我看看吗&#xff1f;</p>", "created": "2015-04-01T14:45:02Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "hcrrjuyequh4bt", "children": [], "tag_good_arr": [], "id": "i7yuhvkhtui1wh", "updated": "2015-04-01T14:45:02Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我是;用面向对象的方法将几种算法写在一个程序里了&#xff0c;有点长&#xff0c;所以只贴出实现改进的clock版的代码。</p>\n<p>class ClockImproved : public Algorithm<br />{<br />private:<br />    int seq;     //记录内存中的page数量<br />    int clock;  //clock相当于一个指针<br />    int page[100]; //相当于内存<br />    bool take[100]; //占有位<br />    bool change[100]; //修改位<br />    int lack_of_pages;  //计算缺页次数<br />public:<br />    ClockImproved(){}<br />    void access(int pagenum);     //访问页面<br />};</p>\n<p>void ClockImproved::access(int pagenum,bool write)       //是数组实现<br />{<br />    for(int i = 0; i &lt; seq; i&#43;&#43;){<br />        if(page[i] == pagenum){<br />            if(write)        change[i] = 1;<br />            take[i] = 1;<br />            return;    <br />        }    <br />    }<br />    lack_of_pages &#43;&#43;;<br />    if(seq &lt; mem_pages){<br />        cout &lt;&lt; &#34;lack of page &#34; &lt;&lt; pagenum &lt;&lt; &#34;; &#34;<br />            &lt;&lt; &#34;no page in memory is replaced.\\n&#34;;<br />        page[seq&#43;&#43;] = pagenum;<br />        take[seq] = 1;<br />        if(write) change[seq] = 1;<br />        else change[seq] = 0;<br />        return;<br />    }<br />    cout &lt;&lt; &#34;lack of page &#34; &lt;&lt; pagenum &lt;&lt; &#34;; &#34;<br />        &lt;&lt; &#34;the page in memory that is replaced is page: &#34; <br />        &lt;&lt; page[0] &lt;&lt; endl;<br />    while(1){       <br />        if(take[clock] == 0 &amp;&amp; change[clock] == 0){<br />            take[clock] = 0;         //&#xff1f;&#xff1f;&#xff1f;&#xff1f;问题在这里&#xff0c;是1还是0&#xff1b;<br />            change[clock] = 0;<br />            page[clock&#43;&#43;] = pagenum;<br />            if(clock == mem_pages) clock = 0;<br />            break;<br />        }<br />        else if(take[clock] == 0 &amp;&amp; change[clock] == 1){<br />            take[clock] = 0;<br />            change[clock] = 0;<br />        }<br />        else if(take[clock] == 1 &amp;&amp; change[clock] == 0){<br />            take[clock] = 0;<br />            change[clock] = 0;<br />        }<br />        else if(take[clock] == 1 &amp;&amp; change[clock] == 1){<br />            take[clock] = 0;<br />            change[clock] = 1;<br />        }<br />    }<br />}</p>", "created": "2015-04-01T15:02:41Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [], "tag_good_arr": [], "id": "i7yv4knwp9x2l", "updated": "2015-04-01T15:02:41Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我能理解老师您的想法&#xff0c;但是视频两处地方出现了矛盾&#xff0c;所以有点蒙。</p>", "created": "2015-04-01T15:06:20Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [], "tag_good_arr": [], "id": "i7yv99fsl7i738", "updated": "2015-04-01T15:06:20Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我看到前面讲时间算法的时候&#xff0c;那个循环链表示意图介绍时间算法的时候&#xff0c;替换一个页后&#xff0c;访问位没有马上置1&#xff0c;而且指针没有指向下一个页面。</p>\n<p>ps.我想我明白了&#xff0c;因为访问位也是页表项的一个内容&#xff0c;每次访问的时候都要访问页表项&#xff0c;所以每次会修改访问位为1&#xff0c;而缺页后&#xff0c;会马上访问置换进入内存的页&#xff0c;所以访问位会马上置为1&#xff0c;所以&#xff0c;此时指针可以不必移动。我想错的原因是没有将缺页异常的后续处理过程结合在一起&#xff0c;我的程序里没有考虑到这一点&#xff0c;所以是不完整的。</p>", "created": "2015-04-01T15:17:49Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [], "tag_good_arr": [], "id": "i7yvo15y3rs75e", "updated": "2015-04-01T15:17:49Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>11分5秒处的描述是错误的。我忘了在把新页面换入后&#xff08;最准确的描述是&#xff0c;换入时访问位清0&#xff1b;缺页处理完成后&#xff0c;重新执行导致缺页的指令时&#xff0c;访问位置1&#xff09;把访问位改为1。示意图的两次换入都存在这个错误。</p>\n<p></p>\n<p>不知我这样的描述是否清楚。如有问题&#xff0c;请继续回复。</p>\n<p></p>\n<p></p>", "created": "2015-04-01T15:34:30Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "i7yw9h8g32o4i1", "updated": "2015-04-01T15:34:30Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>明白了。谢谢老师&#xff01;</p>", "created": "2015-04-02T10:33:59Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "i6t7nhkesez6wr", "children": [], "tag_good_arr": [], "id": "i800yv5izw14g3", "updated": "2015-04-02T10:33:59Z", "config": {}}, {"anon": "stud", "folders": [], "data": {"embed_links": null}, "subject": "<p>这个问题在5分20秒的示意图里也有出现&#xff0c;把3换出后换入6时访问位也是要置1吧&#xff1f;</p>", "created": "2015-04-04T04:37:46Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid_a": "a_0", "children": [], "tag_good_arr": [], "id": "i82j4hfeknn4c7", "updated": "2015-04-04T04:37:46Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p> 是的。与11分5秒处的情况是一样的错误。</p>", "created": "2015-04-04T07:50:55Z", "bucket_order": 347, "bucket_name": "Week 3/29 - 4/4", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "i82q0v2jlp85k9", "updated": "2015-04-04T07:50:55Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "i7yu4j9o5up306", "updated": "2015-04-01T14:34:40Z", "config": {}}], "tag_good_arr": ["hcrrjuyequh4bt"], "no_answer": 0, "id": "i7ytb99l94t57a", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 7, "num_favorites": 2, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643167503081, "default_anonymity": "no"}, "error": null, "aid": "kyuzi7s9ym85pi"}