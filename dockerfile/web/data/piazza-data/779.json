{"result": {"history_size": 2, "folders": ["exam"], "nr": 779, "data": {"embed_links": []}, "created": "2016-04-05T13:51:18Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "full", "when": "2016-04-05T13:51:18Z", "data": "imnhhylp7bj615", "type": "create", "uid_a": "a_0"}, {"to": "imnhhylnb4f614", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-05T15:38:47Z", "data": "imnlc6bk26m5p9", "type": "i_answer"}, {"anon": "full", "when": "2016-04-05T15:48:06Z", "data": "imnlo5shg0142h", "type": "update", "uid_a": "a_0"}, {"to": "imnhhylnb4f614", "uid": "i0b2fq3ezjw50r", "anon": "no", "when": "2016-04-06T00:51:16Z", "type": "followup"}, {"to": "imnhhylnb4f614", "uid": "i0b2fq3ezjw50r", "anon": "no", "when": "2016-04-06T00:56:10Z", "type": "followup"}, {"to": "imnhhylnb4f614", "anon": "full", "when": "2016-04-06T01:06:31Z", "type": "feedback", "uid_a": "a_0"}, {"to": "imnhhylnb4f614", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-06T01:13:19Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T03:04:11Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-06T03:12:44Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T03:17:11Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T03:28:19Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-06T03:31:25Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T04:13:46Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T04:18:20Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "hdjonbiyfs62ie", "anon": "no", "when": "2016-04-06T04:24:05Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i0f24oie8102cr", "anon": "no", "when": "2016-04-06T04:28:13Z", "type": "followup"}, {"to": "imnhhylnb4f614", "uid": "i0b2fq3ezjw50r", "anon": "no", "when": "2016-04-06T06:05:23Z", "type": "feedback"}, {"to": "imnhhylnb4f614", "uid": "i14g50r7ui12pn", "anon": "no", "when": "2016-04-06T12:44:26Z", "type": "feedback"}], "bucket_name": "Today", "history": [{"anon": "full", "uid_a": "a_0", "subject": "自映射怎么算&#xff1f;", "created": "2016-04-05T15:48:06Z", "content": "<p><img src=\"/img/779-4b4b8c23f9385e63.png\" /></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p><img src=\"/img/779-ea59dc943b6815b9.png\" /></p>"}, {"anon": "full", "uid_a": "a_0", "subject": "自映射怎么算&#xff1f;", "created": "2016-04-05T13:51:18Z", "content": "<p><img src=\"/img/779-4b4b8c23f9385e63.png\" /></p>"}], "type": "question", "tags": ["exam", "student"], "tag_good": [{"role": "student", "name": "Albert Einstein(计32黄世宇)", "endorser": {}, "admin": false, "photo": "1411401155_35.png", "id": "i0dz4pw39owu5", "photo_url": "https://cdn-uploads.piazza.com/photos/i0dz4pw39owu5/1411401155_35.png", "published": true, "us": false, "class_sections": ["清华学生_i5j09fnsl7k5x0"], "facebook_id": null}, {"role": "", "name": "zjl", "endorser": {}, "admin": false, "photo": null, "id": "it7zs9krx7o3gr", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "Jiaxin Lei", "endorser": {}, "admin": false, "photo": null, "id": "jxvik4qcwgc5wu", "photo_url": null, "published": true, "us": false, "facebook_id": null}, {"role": "student", "name": "Rui Fan", "endorser": {}, "admin": false, "photo": null, "id": "k3oe6o4jmln3u2", "photo_url": null, "us": false, "facebook_id": null}, {"role": "student", "name": "JIE LI", "endorser": {}, "admin": false, "photo": null, "id": "k5m3s6x6x6y5my", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 190, "children": [{"history_size": 1, "folders": [], "data": {"embed_links": []}, "created": "2016-04-05T15:38:47Z", "bucket_order": 3, "tag_endorse": [], "bucket_name": "Today", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2016-04-05T15:38:47Z", "content": "<p>下面链接有关于自映射的讲解。</p>\n<p></p>\n<p><a href=\"http://166.111.68.197:11123/oscourse/OS2013/lecture05\">http://166.111.68.197:11123/oscourse/OS2013/lecture05</a></p>\n<p></p>\n<p>你有兴趣看后算一下&#xff0c;把结果放在本贴后面吗&#xff1f;</p>"}], "type": "i_answer", "tag_endorse_arr": [], "children": [], "id": "imnlc6bhqub5p8", "config": {}, "is_tag_endorse": false}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>自映射的话&#xff0c;pd的起始地址是VPT&#xff0c;那么就知道VPT的最高10位就是PDE在PD中的index&#xff0c;所以想要指向pd的起始地址的话&#xff0c;第一次查找pde的时候&#xff0c;要指向pd他自己&#xff0c;也就是高十位是VPT的高十位&#xff0c;这样就把pd当做了一次pt&#xff0c;第二次查找pte的时候&#xff0c;依然是vpt高十位的偏移&#xff0c;这时候又会重新指向pd&#xff0c;那么最后一次偏移直接为0&#xff0c;就是pd的起始地址了。</p>\n<p></p>\n<p>以VPT= 0X0D000000来说&#xff0c;它的最高十位为0000110100 &#xff08;第52项&#xff09;</p>\n<p>第一次&#xff1a;</p>\n<p>————</p>\n<p>|             |  &lt;-- (第一次选择52项&#xff0c;然后进入page table 的基地址&#xff0c;但这里52项指向了自己&#xff0c;所以第二次的page table实际上还是 pd&#xff09;    </p>\n<p>-----------     | </p>\n<p>|  ...    ... |      |</p>\n<p>-----------     |</p>\n<p>| 第52项 |  ---</p>\n<p>-----------</p>\n<p></p>\n<p>第二次&#xff1a;</p>\n<p>————</p>\n<p>|             |  &lt;-- (第二次进入physical page的基地址&#xff0c;但这里52项指向了自己&#xff0c;所以实际上还是 pd&#xff09;    </p>\n<p>-----------     | </p>\n<p>|  ...    ... |      |</p>\n<p>-----------     |</p>\n<p>| 第52项 |  ---</p>\n<p>-----------</p>\n<p></p>\n<p>第三次的时候&#xff0c;offset为0&#xff0c;即为pd的起始地址。</p>", "created": "2016-04-06T00:51:16Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "followup", "tag_good": [], "uid": "i0b2fq3ezjw50r", "children": [{"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>为何第二次还是第52项&#xff1f;</p>", "created": "2016-04-06T03:04:11Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imo9tlxggyp5i1", "updated": "2016-04-06T03:04:11Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>原因是&#xff0c;第一级页表还有另一个身份&#xff0c;它同时还是第二级页表中的一页。如果第二级不是相同的&#xff0c;它就没法同时有这两个身份。</p>\n<p></p>\n<p>你可以尝试分析一下&#xff0c;如果一个4KB的页表同时是第一级和第二级页表&#xff0c;它的二级页表中index可能取值是什么。</p>\n<p></p>\n<p>如果可能&#xff0c;把你的分析附在本贴后面。</p>", "created": "2016-04-06T03:12:44Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "imoa4lngkj75ln", "updated": "2016-04-06T03:12:44Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我想问的是&#xff0c;VPT= 0X0D000000 第二次应该使用中间10位而不是开始10位吧&#xff1f;就算第二次必须得是第52项&#xff0c;也是修改VPT的值而不是修改整个机制吧&#xff1f;</p>", "created": "2016-04-06T03:17:11Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imoaabxc97t3qx", "updated": "2016-04-06T03:17:11Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我的问题是&#xff0c;为何2次都用高10位&#xff1f;</p>\n<p>不是第二次用中间10位么&#xff1f;</p>", "created": "2016-04-06T03:28:19Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imoaonck7yz2f9", "updated": "2016-04-06T03:28:19Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>这里的“VPT= 0X0D000000”是指&#xff0c;你的整个页表的开始逻辑地址&#xff0c;而不是第一级页表的开始逻辑地址。</p>\n<p></p>\n<p>整个机制是不能修改的。</p>\n<p></p>\n<p>我换个角度来提问&#xff1a;如果你的整个4MB页表区域的开始逻辑地址是“VPT= 0X0D000000”&#xff0c;这里&#xff0c;它的第一级页表开始逻辑地址是多少&#xff1f;这个第一级页表在作为第二级页表时&#xff0c;它是第几个二级页表&#xff1f;</p>\n<p></p>\n<p>先尝试回答我的问题&#xff0c;然后解释“为什么自映射页表项的第二级页表index一定是第一级页表的index&#xff1f;”</p>\n<p></p>", "created": "2016-04-06T03:31:25Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "imoasmm9tll318", "updated": "2016-04-06T03:31:25Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>一级页表的开始物理地址应该就是 PTBR&#xff0c;逻辑地址我们应该是用VPT来访问&#xff0c;所以就是VPT。</p>\n<p>作为二级页表时&#xff0c;他是第52个二级页表。</p>\n<p></p>\n<p>由于页表4M空间&#xff08;4K*1024 = 总共1024个二级页表&#xff0c;其中有一个也担当一级页表&#xff09;本身也需要一个二级页表来表示&#xff0c;所以有且只有一个二级页表项担当了一级页表的任务。那就是第52个二级页表&#xff0c;它不仅作为第52个二级页表&#xff0c;也作为一级页表。</p>\n<p>所以当我们查一级页表时&#xff0c;第52项查到的地址就是一级页表本身。</p>\n<p></p>\n<p>当我们二级页表index使用一级页表的index时&#xff0c;我们得到的结果是一级页表的首地址。</p>\n<p></p>\n<p>但是我还是不清楚&#xff0c;这样查二级页表的过程就和普通的机制不同了啊。</p>", "created": "2016-04-06T04:13:46Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imocb3rj4q24wa", "updated": "2016-04-06T04:13:46Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>一级页表的逻辑地址如果不是VPT&#xff0c;而是VPT(31 to 22) | VPT(31 to 22) | VPT(31 to 22) | 00 的话&#xff0c;好像说得通</p>", "created": "2016-04-06T04:18:20Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "id": "imocgynd8ua54k", "updated": "2016-04-06T04:18:20Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>我认为你现在的描述是准确和清楚的了。</p>\n<p></p>\n<p>如果有兴趣&#xff0c;建议叶子鹏把你的补充内容整合到张明瑞的描述中&#xff0c;形成一个关于自映射的完整描述。然后把你们的结果附在本贴后面。</p>", "created": "2016-04-06T04:24:05Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "imocodbnini1g5", "updated": "2016-04-06T04:24:05Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>看文字半天看不懂&#xff0c;看图立马就懂了。</p>\n<p>点赞&#xff01;</p>", "created": "2016-04-06T12:44:26Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i14g50r7ui12pn", "children": [], "tag_good_arr": [], "id": "imoujtemmd27n6", "updated": "2016-04-06T12:44:26Z", "config": {}}], "tag_good_arr": [], "no_answer": 0, "id": "imo52oap5fk1uk", "updated": "2016-04-06T00:51:16Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>然后对于算某个虚拟地址的pde地址和pte地址&#xff0c;相当于是找这俩东西的虚拟地址&#xff0c;我们按照查找的方式&#xff0c;第一次是前十位作为index&#xff0c;第二次中间十位&#xff0c;第三次offset&#xff0c;所以pde的话&#xff0c;因为它的physical page = page table = page directory&#xff0c;前十位和中间十位要映射到pd自己&#xff0c;最后12位的offset是这个虚地址前十位offset左移4&#xff08;对齐&#xff09;。</p>\n<p></p>\n<p>同理&#xff0c;pte的 page table = page directory&#xff0c; 但他的physical page 则是自己的page table&#xff0c; 因此前十位映射到pd&#xff0c;中间十位映射到自己的page table&#xff08;这个虚地址的前十位&#xff09;&#xff0c;后十位是pde在page table 中的偏移&#xff08;这个虚地址的中间十位&#xff09;。</p>", "created": "2016-04-06T00:56:10Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "followup", "tag_good": [{"role": "student", "name": "sihouzi21c", "endorser": {}, "admin": false, "photo": null, "id": "k5s907llk4y3g6", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "uid": "i0b2fq3ezjw50r", "children": [{"anon": "full", "folders": [], "data": {"embed_links": null}, "subject": "<p>你说了半天也没给个答案。。。</p>", "created": "2016-04-06T01:06:31Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid_a": "a_0", "children": [], "tag_good_arr": [], "id": "imo5mad9k7i4fw", "updated": "2016-04-06T01:06:31Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>张明瑞的理解是对的&#xff0c;描述也很清楚了。我认为&#xff0c;是一个优秀的回答。</p>\n<p></p>\n<p>指定了页表区域起始逻辑地址后&#xff0c;自映射页表项的位置就确定了。即起始地址高10位重复3遍再加两个零&#xff0c;就对了。这也就是幻灯片上的描述。</p>\n<p></p>\n<p></p>", "created": "2016-04-06T01:13:19Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "hdjonbiyfs62ie", "children": [], "tag_good_arr": [], "id": "imo5v1l65zi40e", "updated": "2016-04-06T01:13:19Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "subject": "<p>诶&#xff0c;我觉得有些人是不是傻</p>\n<p>你想跟我要答案直说&#xff0c;我把解法都给你了&#xff0c;还匿名跟我吵</p>\n<p>是不是闲的蛋疼&#xff1f;</p>", "created": "2016-04-06T06:05:23Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "feedback", "tag_good": [], "uid": "i0b2fq3ezjw50r", "children": [], "tag_good_arr": [], "id": "imogan41gok3f3", "updated": "2016-04-06T06:05:23Z", "config": {}}], "tag_good_arr": ["k5s907llk4y3g6"], "no_answer": 0, "id": "imo58z0xk3e5cc", "updated": "2016-04-06T00:56:10Z", "config": {}}, {"anon": "no", "folders": [], "data": {"embed_links": null}, "no_upvotes": 0, "subject": "<p>一级页表的开始物理地址应该就是 PTBR&#xff0c;逻辑地址我们应该是VPT(31 to 22) | VPT(31 to 22) | VPT(31 to 22) | 00 。</p>\n<p>假设VPT(31 to 22) = 52&#xff0c;</p>\n<p>作为二级页表时&#xff0c;他是第52个二级页表。</p>\n<p> </p>\n<p>由于页表4M空间&#xff08;4K*1024 = 总共1024个二级页表&#xff0c;其中有一个也担当一级页表&#xff09;本身也需要一个二级页表来表示&#xff0c;所以有且只有一个二级页表项担当了一级页表的任务。那就是第52个二级页表&#xff0c;它不仅作为第52个二级页表&#xff0c;也作为一级页表。</p>\n<p>所以当我们查一级页表时&#xff0c;第52项查到的地址就是一级页表本身。</p>\n<p> </p>\n<p>当我们二级页表index使用一级页表的index时&#xff0c;我们得到的结果是一级页表的首地址。</p>\n<p> </p>\n<p>相当于我们会用 VPT(31 to 22) 查2次页目录表&#xff0c;最后再用VPT(31 to 22) | 00 当做偏移&#xff0c;最后查到的实际上还是页目录表的起始地址。</p>\n<p>这个过程相当于自己到自己了三次。</p>", "created": "2016-04-06T04:28:13Z", "bucket_order": 292, "bucket_name": "Week 4/3 - 4/9", "type": "followup", "tag_good": [], "uid": "i0f24oie8102cr", "children": [], "tag_good_arr": [], "no_answer": 0, "id": "imoctohkhb36tu", "updated": "2016-04-06T04:28:13Z", "config": {}}], "tag_good_arr": ["i0dz4pw39owu5", "it7zs9krx7o3gr", "jxvik4qcwgc5wu", "k3oe6o4jmln3u2", "k5m3s6x6x6y5my"], "no_answer": 0, "id": "imnhhylnb4f614", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 6, "num_favorites": 6, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643168498449, "default_anonymity": "no"}, "error": null, "aid": "kyv03jtdy612ng"}