{"result": {"folders": ["lecture18"], "nr": 1079, "data": {"embed_links": []}, "created": "2017-05-18T08:10:31Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "ie7xy5f0l9b1qi", "data": "j2u4z9rc4yt38z", "type": "create", "when": "2017-05-18T08:10:31Z"}, {"anon": "no", "uid": "hdjonbiyfs62ie", "data": "j2u5oqxmg6i1qa", "to": "j2u4z9rbhu238y", "type": "i_answer", "when": "2017-05-18T08:30:20Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "ie7xy5f0l9b1qi", "subject": "关于信号量实现读者优先的疑问", "created": "2017-05-18T08:10:31Z", "content": "<p>课件第十八讲64页&#xff0c;信号量实现的读者优先:</p>\n<p></p>\n<p>写者&#xff1a;</p>\n<p>P(WriteMutex);</p>\n<p>write;</p>\n<p>V(WriteMutex);</p>\n<p></p>\n<p>读者&#xff1a;</p>\n<p></p>\n<p>P(CountMutex);</p>\n<p>    if (Rcount == 0)</p>\n<p>        P(WriteMutex); </p>\n<p>    &#43;&#43;Rcount;</p>\n<p>V(CountMutex);</p>\n<p></p>\n<p>read</p>\n<p></p>\n<p>P(CountMutex);</p>\n<p>     --Rcount;</p>\n<p>    if (Rcount == 0)</p>\n<p>        V(WriteMutex);</p>\n<p>V(CountMutex);</p>\n<p></p>\n<p>当一个写者A处于write&#xff0c;写者B处于P(WriteMutex);读者C处于</p>\n<p>  if (Rcount == 0)</p>\n<p>        P(WriteMutex); </p>\n<p></p>\n<p>当A执行完毕V(WriteMutex)时&#xff0c;B和C不能保证谁先执行&#xff0c;不满足读者优先?</p>\n<p></p>\n<p></p>\n<p>百度了一个代码:</p>\n<ol start=\"1\"><li>/* program readersandwriters*/  </li><li>int readcount = 0;  </li><li>semaphore x = 1,z = 1, wsem = 1;  </li><li>void reader()  </li><li>{  </li><li>    while(true){  </li><li>        semWait(x);  </li><li>        readcount &#43;&#43; ;  </li><li>        if(readcount == 1)  </li><li>            semWait(wsem);  </li><li>        semSignal(x);  </li><li>          </li><li>        READUNIT();//读数据  </li><li>  </li><li>        semWait(x);  </li><li>        readcount --;  </li><li>        if(readcount == 0)  </li><li>            semSignal(wsem);  </li><li>        semSignal(x);  </li><li>    }  </li><li>}  </li><li>void writer()  </li><li>{  </li><li>    while(true){  </li><li>        semWait(z);//自己加的&#xff0c;不过这样降低了写操作的效率,但满足了以上2点。去除z信号后&#xff0c;就只满足第1点,可以自己分析分析  </li><li>        semWait(wsem);  </li><li>        WRITEUNIT();//写数据  </li><li>        semSignal(wsem);  </li><li>        semSignal(z);  </li><li>    }  </li><li>}  </li></ol>\n<p></p>\n<p>上面的代码也不对&#xff0c; semSignal(wsem); 和semSignal(z);  可能都执行完再进行调度&#xff0c;仍不能保证读者优先&#xff0c;请教各位&#xff0c;如何才能用信号量实现读者优先。</p>\n<p></p>"}], "type": "question", "tags": ["lecture18", "student"], "tag_good": [], "unique_views": 124, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2017-05-18T08:30:20Z", "bucket_order": 3, "tag_endorse": [{"role": "student", "name": "YeDeming", "endorser": {}, "admin": false, "photo": null, "id": "ie7xy5f0l9b1qi", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "j2u5oqxjng1q9", "history": [{"anon": "no", "uid": "hdjonbiyfs62ie", "subject": "", "created": "2017-05-18T08:30:20Z", "content": "<p>我们在讨论读者写者问题时&#xff0c;对读者优先和写者优先时&#xff0c;对它们的理解有多种。</p>\n<p></p>\n<p>对读者优先的一种理解是&#xff0c;有读者正在读时&#xff0c;后续的读者可以直接进入&#xff0c;并开始读。</p>\n<p></p>\n<p>这种理解中&#xff0c;并没有约定&#xff0c;当有写者正在写时&#xff0c;后续的读者和写者读优先。在幻灯片中的实现中&#xff0c;应该是按到达时刻排序的&#xff0c;并没有等待的读者可以优先于写者。</p>\n<p></p>\n<p>如果有兴趣&#xff0c;可以考虑一下&#xff0c;并给出自己的约定和相应的实现。</p>"}], "type": "i_answer", "tag_endorse_arr": ["ie7xy5f0l9b1qi"], "config": {}, "is_tag_endorse": false}], "tag_good_arr": [], "no_answer": 0, "id": "j2u4z9rbhu238y", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 2, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169095246, "default_anonymity": "no"}, "error": null, "aid": "kyv0gcb21rj44n"}