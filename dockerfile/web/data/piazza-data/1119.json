{"result": {"folders": ["lab1", "lecture4"], "nr": 1119, "data": {"embed_links": []}, "created": "2018-02-06T03:36:45Z", "bucket_order": 3, "no_answer_followup": 0, "change_log": [{"anon": "no", "uid": "jdb1qcczPBFn", "data": "jdb3g38boc82ev", "type": "create", "when": "2018-02-06T03:36:45Z"}, {"anon": "no", "uid": "jdb1qcczPBFn", "data": "jdbb7r8f70f5p0", "type": "update", "when": "2018-02-06T07:14:13Z"}, {"anon": "no", "uid": "jfnvlf8qtFKA", "data": "jgdt4332gv274x", "type": "update", "when": "2018-04-24T15:09:54Z"}, {"anon": "no", "uid": "ivmol6keaub3ey", "data": "jgsqeeovdkr2qw", "to": "jdb3g385ign2eu", "type": "s_answer", "when": "2018-05-05T01:50:30Z"}], "bucket_name": "Today", "history": [{"anon": "no", "uid": "jfnvlf8qtFKA", "subject": "关于idt_init()中的SETGATE宏的疑问", "created": "2018-04-24T15:09:54Z", "content": "<p>在做lab1 练习6时&#xff0c;有几点疑问</p>\n<p></p>\n<p>1.为何extern uintptr_t __vectors[] 可以识别到在汇编文件vectors.S中定义的数组&#xff1f;</p>\n<p></p>\n<p>2.SETGATE的宏定义为 SETGATE(gate, istrap, sel, off, dpl) </p>\n<p>   为什么第三个参数填GD_KTEXT 就表示GDT的段选择子呢&#xff1f;</p>\n<p>   GD_KTEXT这个宏的值是如何确定的&#xff1f;为何是8&#xff1f;</p>\n<p>   为何__vectors[i]数组里的内容就是 中断服务程序的偏移地址OFFSET&#xff1f;</p>\n<p></p>\n<p>3. SETGATE(idt[T_SWITCH_TOK], 0, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER); </p>\n<p>    这个是必须的吗&#xff1f;没写怎么也能输出正确结果&#xff0c;不写的话对以后的实验会有影响吗&#xff1f;</p>\n<p></p>\n<p>4.struct gatedesc{} 该结构体有何用处&#xff1f; 结构体数组idt如何被调用&#xff1f;</p>\n<p>&#xff08;虽然已经知道 中断发生后&#xff0c;会根据中断号查询IDT&#xff0c;但是在代码中如何体现&#xff1f; 中断号--&gt;IDT--&gt;GDT--&gt;基址&#43;OFFSET=ISR入口地址 找到入口地址之前的函数具体如何调用的能否讲解&#xff1f;&#xff09;</p>\n<p></p>\n<p>5.idt的起始地址为何是这样定义&#xff1f;</p>\n<pre>struct pseudodesc idt_pd = {\n    sizeof(idt) - 1, (uintptr_t)idt\n};</pre>\n<p>6.有时候流程理解了&#xff0c;但是代码中有很多数据结构不知道为什么是这么定义的&#xff0c;怎么办&#xff1f;</p>\n<p>比如说上面提到的gatedesc 以及memlayout.h中的global segment numbers ,global descriptor numbers等宏定义</p>"}, {"anon": "no", "uid": "jdb1qcczPBFn", "subject": "关于idt_init()中的SETGATE宏的疑问", "created": "2018-02-06T07:14:13Z", "content": "<p>在做lab1 练习6时&#xff0c;有几点疑问</p>\n<p></p>\n<p>1.为何extern uintptr_t __vectors[] 可以识别到在汇编文件vectors.S中定义的数组&#xff1f;</p>\n<p></p>\n<p>2.SETGATE的宏定义为 SETGATE(gate, istrap, sel, off, dpl) </p>\n<p>   为什么第三个参数填GD_KTEXT 就表示GDT的段选择子呢&#xff1f;</p>\n<p>   GD_KTEXT这个宏的值是如何确定的&#xff1f;为何是8&#xff1f;</p>\n<p>   为何__vectors[i]数组里的内容就是 中断服务程序的偏移地址OFFSET&#xff1f;</p>\n<p></p>\n<p>3. SETGATE(idt[T_SWITCH_TOK], 0, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER); </p>\n<p>    这个是必须的吗&#xff1f;没写怎么也能输出正确结果&#xff0c;不写的话对以后的实验会有影响吗&#xff1f;</p>\n<p></p>\n<p>4.struct gatedesc{} 该结构体有何用处&#xff1f; 结构体数组idt如何被调用&#xff1f;</p>\n<p>&#xff08;虽然已经知道 中断发生后&#xff0c;会根据中断号查询IDT&#xff0c;但是在代码中如何体现&#xff1f; 中断号--&gt;IDT--&gt;GDT--&gt;基址&#43;OFFSET=ISR入口地址 找到入口地址之前的函数具体如何调用的能否讲解&#xff1f;&#xff09;</p>\n<p></p>\n<p>5.idt的起始地址为何是这样定义&#xff1f;</p>\n<pre>struct pseudodesc idt_pd = {\n    sizeof(idt) - 1, (uintptr_t)idt\n};</pre>\n<p>6.有时候流程理解了&#xff0c;但是代码中有很多数据结构不知道为什么是这么定义的&#xff0c;怎么办&#xff1f;</p>\n<p>比如说上面提到的gatedesc 以及memlayout.h中的global segment numbers ,global descriptor numbers等宏定义</p>"}, {"anon": "no", "uid": "jdb1qcczPBFn", "subject": "关于idt_init()中的SETGATE宏的疑问", "created": "2018-02-06T03:36:45Z", "content": "<p>在做lab1 练习6时&#xff0c;有几点疑问</p>\n<p></p>\n<p>1.为何extern uintptr_t __vectors[] 可以识别到在汇编文件vectors.S中定义的数组&#xff1f;</p>\n<p></p>\n<p>2.SETGATE的宏定义为 SETGATE(gate, istrap, sel, off, dpl) </p>\n<p>   为什么第三个参数填GD_KTEXT 就表示GDT的段选择子呢&#xff1f;</p>\n<p>   GD_KTEXT这个宏的值是如何确定的&#xff1f;为何是8&#xff1f;</p>\n<p>   为何__vectors[i]数组里的内容就是 中断服务程序的偏移地址             OFFSET&#xff1f;</p>\n<p></p>\n<p>3.struct gatedesc{} 该结构体有何用处&#xff1f; 结构体数组idt如何被调用&#xff1f;&#xff08;虽然已经知道 中断发生后&#xff0c;会根据中断号查询IDT&#xff0c;但是在代码中如何体现&#xff1f; 中断号--&gt;IDT--&gt;GDT--&gt;基址&#43;OFFSET=ISR入口地址 找到入口地址之前的函数具体如何调用的能否讲解&#xff1f;&#xff09;</p>\n<p></p>\n<p>4.idt的起始地址为何是这样定义&#xff1f;</p>\n<pre>struct pseudodesc idt_pd = {\n    sizeof(idt) - 1, (uintptr_t)idt\n};</pre>\n<p>5.有时候流程理解了&#xff0c;但是代码中有很多数据结构不知道为什么是这么定义的&#xff0c;怎么办&#xff1f;</p>\n<p>比如说上面提到的gatedesc 以及memlayout.h中的global segment numbers ,global descriptor numbers等宏定义</p>"}], "type": "question", "tags": ["lab1", "lecture4", "student"], "tag_good": [{"role": "student", "name": "liuhengting", "endorser": {}, "admin": false, "photo": null, "id": "jfnvlf8qtFKA", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "unique_views": 144, "children": [{"folders": [], "data": {"embed_links": []}, "children": [], "created": "2018-05-05T01:50:30Z", "bucket_order": 3, "tag_endorse": [{"role": "", "name": "Jialiang Cao", "endorser": {}, "admin": false, "photo": null, "id": "jh1ahmqehdv28y", "photo_url": null, "us": false, "facebook_id": null}, {"role": "student", "name": "nilu20170809", "endorser": {}, "admin": false, "photo": null, "id": "j64slcf8oia", "photo_url": null, "published": true, "us": false, "facebook_id": null}], "bucket_name": "Today", "id": "jgsqeeocyp02qv", "history": [{"anon": "no", "uid": "ivmol6keaub3ey", "subject": "", "created": "2018-05-05T01:50:30Z", "content": "<p>1 汇编文件 vector.S 也进行了编译 生成了 vector.o 这和用c写没有区别</p>\n<p>2 段选择子是 段描述符在 GDT 中的索引 之前我们看到第0个段是空段 第一个段是内核代码段 所以索引是 1*8</p>\n<p>3 用于 lab1 challange 的实现 切换特权级</p>\n<p>4 结构是便于编码&#xff0c;执行的时候会进入 Vector.S 中执行相应的ISR 也最后回调到 trap.c 中</p>\n<p>5 加载idt 到idtr 中是 低地址是limit 高地址是base 同加载gdt  是一样的</p>\n<p></p>\n<p>我的理解也不一定正确 有错误希望大家指出</p>\n<p></p>"}], "type": "s_answer", "tag_endorse_arr": ["jh1ahmqehdv28y", "j64slcf8oia"], "config": {}, "is_tag_endorse": false}], "tag_good_arr": ["jfnvlf8qtFKA"], "no_answer": 0, "id": "jdb3g385ign2eu", "config": {}, "status": "active", "drafts": null, "request_instructor": 0, "request_instructor_me": false, "bookmarked": 4, "num_favorites": 1, "my_favorite": false, "is_bookmarked": false, "is_tag_good": false, "q_edits": [], "i_edits": [], "s_edits": [], "t": 1643169157063, "default_anonymity": "no"}, "error": null, "aid": "kyv0ho07uax1yb"}